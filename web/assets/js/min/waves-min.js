"use strict";function init(){container=document.createElement("background"),document.body.appendChild(container),(camera=new THREE.PerspectiveCamera(120,window.innerWidth/window.innerHeight,1,1e4)).position.z=1e3,scene=new THREE.Scene,particles=new Array;for(var e=2*Math.PI,t=new THREE.ParticleCanvasMaterial({color:14803425,program:function(t){t.beginPath(),t.arc(0,0,.6,0,e,!0),t.fill()}}),i=0,r=0;r<AMOUNTX;r++)for(var n=0;n<AMOUNTY;n++)(particle=particles[i++]=new THREE.Particle(t)).position.x=r*SEPARATION-AMOUNTX*SEPARATION/2,particle.position.z=n*SEPARATION-AMOUNTY*SEPARATION/2,scene.add(particle);(renderer=new THREE.CanvasRenderer).setSize(window.innerWidth,window.innerHeight),container.appendChild(renderer.domElement),document.addEventListener("mousemove",onDocumentMouseMove,!1),document.addEventListener("touchstart",onDocumentTouchStart,!1),document.addEventListener("touchmove",onDocumentTouchMove,!1),window.addEventListener("resize",onWindowResize,!1)}function onWindowResize(){windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function onDocumentMouseMove(e){mouseX=e.clientX-windowHalfX,mouseY=e.clientY-windowHalfY}function onDocumentTouchStart(e){1===e.touches.length&&(e.preventDefault(),mouseX=e.touches[0].pageX-windowHalfX,mouseY=e.touches[0].pageY-windowHalfY)}function onDocumentTouchMove(e){1===e.touches.length&&(e.preventDefault(),mouseX=e.touches[0].pageX-windowHalfX,mouseY=e.touches[0].pageY-windowHalfY)}function animate(){requestAnimationFrame(animate),render()}function render(){camera.position.x+=.05*(mouseX-camera.position.x),camera.position.y+=.05*(-mouseY-camera.position.y),camera.lookAt(scene.position);for(var e=0,t=0;t<AMOUNTX;t++)for(var i=0;i<AMOUNTY;i++)(particle=particles[e++]).position.y=50*Math.sin(.3*(t+count))+50*Math.sin(.5*(i+count)),particle.scale.x=particle.scale.y=2*(Math.sin(.3*(t+count))+1)+2*(Math.sin(.5*(i+count))+1);renderer.render(scene,camera),count+=.1}var THREE=THREE||{REVISION:"56"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(e,t){if(Object.keys)for(var i=Object.keys(t),r=0,n=i.length;r<n;r++){var o=i[r];Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}else for(o in i={}.hasOwnProperty,t)i.call(t,o)&&(e[o]=t[o]);return e},function(){for(var e=0,t=["ms","moz","webkit","o"],i=0;i<t.length&&!window.requestAnimationFrame;++i)window.requestAnimationFrame=window[t[i]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[i]+"CancelAnimationFrame"]||window[t[i]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t){var i=Date.now(),r=Math.max(0,16-(i-e)),n=window.setTimeout((function(){t(i+r)}),r);return e=i+r,n}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.extend(THREE.Color.prototype,{r:1,g:1,b:1,set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSV:function(e,t,i){return console.log("DEPRECATED: Color's .setHSV() will be removed. Use .setHSL( h, s, l ) instead."),this.setHSL(e,t*i/(1>(e=(2-t)*i)?e:2-e),e/2)},setHSL:function(e,t,i){if(0===t)this.r=this.g=this.b=i;else{var r=function(e,t,i){return 0>i&&(i+=1),1<i&&(i-=1),i<1/6?e+6*(t-e)*i:.5>i?t:i<2/3?e+6*(t-e)*(2/3-i):e},t,i=2*i-(t=.5>=i?i*(1+t):i+t-i*t);this.r=r(i,t,e+1/3),this.g=r(i,t,e),this.b=r(i,t,e-1/3)}return this},setStyle:function(e){return/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)?(e=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this):/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)?(e=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(e)?(e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)?(e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this):/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var e={h:0,s:0,l:0};return function(){var t=this.r,i=this.g,r=this.b,n=Math.max(t,i,r),o,a,s=((o=Math.min(t,i,r))+n)/2;if(o===n)o=a=0;else{var h=n-o,o=.5>=s?h/(n+o):h/(2-n-o);switch(n){case t:a=(i-r)/h+(i<r?6:0);break;case i:a=(r-t)/h+2;break;case r:a=(t-i)/h+4}a/=6}return e.h=a,e.s=o,e.l=s,e}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,i){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}}),THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.extend(THREE.Quaternion.prototype,{set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var i=Math.cos(e.x/2),r=Math.cos(e.y/2),n=Math.cos(e.z/2),o=Math.sin(e.x/2),a=Math.sin(e.y/2),s=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n-o*a*s):"YXZ"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n+o*a*s):"ZXY"===t?(this.x=o*r*n-i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n-o*a*s):"ZYX"===t?(this.x=o*r*n-i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n+o*a*s):"YZX"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n-o*a*s):"XZY"===t&&(this.x=o*r*n-i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n+o*a*s),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(i),this},setFromRotationMatrix:function(e){var t,i=(t=e.elements)[0],e=t[4],r=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t,l=i+o+(t=t[10]);return 0<l?(i=.5/Math.sqrt(l+1),this.w=.25/i,this.x=(h-a)*i,this.y=(r-s)*i,this.z=(n-e)*i):i>o&&i>t?(i=2*Math.sqrt(1+i-o-t),this.w=(h-a)/i,this.x=.25*i,this.y=(e+n)/i,this.z=(r+s)/i):o>t?(i=2*Math.sqrt(1+o-i-t),this.w=(r-s)/i,this.x=(e+n)/i,this.y=.25*i,this.z=(a+h)/i):(i=2*Math.sqrt(1+t-i-o),this.w=(n-e)/i,this.x=(r+s)/i,this.y=(a+h)/i,this.z=.25*i),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=this.length();return 0===e?(this.z=this.y=this.x=0,this.w=1):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e.x,r=e.y,n=e.z,o=e.w,a=t.x,s=t.y,h=t.z,l=t.w;return this.x=i*l+o*a+r*h-n*s,this.y=r*l+o*s+n*a-i*h,this.z=n*l+o*h+i*s-r*a,this.w=o*l-i*a-r*s-n*h,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var i=this.x,r=this.y,n=this.z,o=this.w,a=o*e.w+i*e.x+r*e.y+n*e.z;if(0>a?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,a=-a):this.copy(e),1<=a)return this.w=o,this.x=i,this.y=r,this.z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return.001>Math.abs(h)?(this.w=.5*(o+this.w),this.x=.5*(i+this.x),this.y=.5*(r+this.y),this.z=.5*(n+this.z),this):(a=Math.sin((1-t)*s)/h,s=Math.sin(t*s)/h,this.w=o*a+this.w*s,this.x=i*a+this.x*s,this.y=r*a+this.y*s,this.z=n*a+this.z*s,this)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}}),THREE.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.extend(THREE.Vector2.prototype,{set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e):this.set(0,0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,e;return t*t+(e=this.y-e.y)*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}}),THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.extend(THREE.Vector3.prototype,{set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*i+e[6]*r,this.y=e[1]*t+e[4]*i+e[7]*r,this.z=e[2]*t+e[5]*i+e[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12],this.y=e[1]*t+e[5]*i+e[9]*r+e[13],this.z=e[2]*t+e[6]*i+e[10]*r+e[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z,e,n=1/((e=e.elements)[3]*t+e[7]*i+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*i+e[8]*r+e[12])*n,this.y=(e[1]*t+e[5]*i+e[9]*r+e[13])*n,this.z=(e[2]*t+e[6]*i+e[10]*r+e[14])*n,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z,e,s=(e=e.w)*t+o*r-a*i,h=e*i+a*t-n*r,l=e*r+n*i-o*t,t=-n*t-o*i-a*r;return this.x=s*e+t*-n+h*-a-l*-o,this.y=h*e+t*-o+l*-n-s*-a,this.z=l*e+t*-a+s*-o-h*-n,this},applyEuler:function(){var e=new THREE.Quaternion;return function(t,i){var r=e.setFromEuler(t,i);return this.applyQuaternion(r),this}}(),applyAxisAngle:function(){var e=new THREE.Quaternion;return function(t,i){var r=e.setFromAxisAngle(t,i);return this.applyQuaternion(r),this}}(),transformDirection:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r,this.y=e[1]*t+e[5]*i+e[9]*r,this.z=e[2]*t+e[6]*i+e[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var i=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},projectOnVector:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t).multiplyScalar(2),this.subVectors(e,this)}}(),angleTo:function(e){return e=this.dot(e)/(this.length()*e.length()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y,e;return t*t+i*i+(e=this.z-e.z)*e},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r,n=(r=e.elements)[0],o=r[4],a=r[8],s=r[1],h=r[5],l=r[9],c=r[2],p=r[6],r=r[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(i(a)),.99999>Math.abs(a)?(this.x=Math.atan2(-l,r),this.z=Math.atan2(-o,n)):(this.x=Math.atan2(p,h),this.z=0)):"YXZ"===t?(this.x=Math.asin(-i(l)),.99999>Math.abs(l)?(this.y=Math.atan2(a,r),this.z=Math.atan2(s,h)):(this.y=Math.atan2(-c,n),this.z=0)):"ZXY"===t?(this.x=Math.asin(i(p)),.99999>Math.abs(p)?(this.y=Math.atan2(-c,r),this.z=Math.atan2(-o,h)):(this.y=0,this.z=Math.atan2(s,n))):"ZYX"===t?(this.y=Math.asin(-i(c)),.99999>Math.abs(c)?(this.x=Math.atan2(p,r),this.z=Math.atan2(s,n)):(this.x=0,this.z=Math.atan2(-o,h))):"YZX"===t?(this.z=Math.asin(i(s)),.99999>Math.abs(s)?(this.x=Math.atan2(-l,h),this.y=Math.atan2(-c,n)):(this.x=0,this.y=Math.atan2(a,r))):"XZY"===t&&(this.z=Math.asin(-i(o)),.99999>Math.abs(o)?(this.x=Math.atan2(p,h),this.y=Math.atan2(a,n)):(this.x=Math.atan2(-l,r),this.y=0)),this},setEulerFromQuaternion:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.x*e.x,n=e.y*e.y,o=e.z*e.z,a=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),a-r-n+o),this.y=Math.asin(i(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a+r-n-o)):"YXZ"===t?(this.x=Math.asin(i(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a-r-n+o),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a-r+n-o)):"ZXY"===t?(this.x=Math.asin(i(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),a-r-n+o),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a-r+n-o)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),a-r-n+o),this.y=Math.asin(i(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a+r-n-o)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),a-r+n-o),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),a+r-n-o),this.z=Math.asin(i(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),a-r+n-o),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a+r-n-o),this.z=Math.asin(i(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=i,this.z=e,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}}),THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.extend(THREE.Vector4.prototype,{set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=this.w,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12]*n,this.y=e[1]*t+e[5]*i+e[9]*r+e[13]*n,this.z=e[2]*t+e[6]*i+e[10]*r+e[14]*n,this.w=e[3]*t+e[7]*i+e[11]*r+e[15]*n,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,i,r,e,n=(e=e.elements)[0];r=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];i=e[2],t=e[6];var l=e[10];return.01>Math.abs(r-a)&&.01>Math.abs(o-i)&&.01>Math.abs(h-t)?.1>Math.abs(r+a)&&.1>Math.abs(o+i)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+l-3)?(this.set(1,0,0,0),this):(e=Math.PI,l=(l+1)/2,r=(r+a)/4,o=(o+i)/4,h=(h+t)/4,(n=(n+1)/2)>(s=(s+1)/2)&&n>l?.01>n?(t=0,r=i=.707106781):(i=r/(t=Math.sqrt(n)),r=o/t):s>l?.01>s?(t=.707106781,i=0,r=.707106781):(t=r/(i=Math.sqrt(s)),r=h/i):.01>l?(i=t=.707106781,r=0):(t=o/(r=Math.sqrt(l)),i=h/r),this.set(t,i,r,e),this):(e=Math.sqrt((t-h)*(t-h)+(o-i)*(o-i)+(a-r)*(a-r)),.001>Math.abs(e)&&(e=1),this.x=(t-h)/e,this.y=(o-i)/e,this.z=(a-r)/e,this.w=Math.acos((n+s+l-1)/2),this)},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}}),THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.extend(THREE.Line3.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var i=t||new THREE.Vector3;return this.delta(i).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r){e.subVectors(i,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),n=t.dot(e)/n;return r&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(e,t,i){return e=this.closestPointToPointParameter(e,t),i=i||new THREE.Vector3,this.delta(i).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}}),THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.extend(THREE.Box2.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;i<r;i++)(t=e[i]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){
return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}}),THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.extend(THREE.Box3.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;i<r;i++)(t=e[i]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return(t=t||new THREE.Sphere).center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}}),THREE.Matrix3=function(e,t,i,r,n,o,a,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,i||0,r||0,void 0!==n?n:1,o||0,a||0,s||0,void 0!==h?h:1)},THREE.extend(THREE.Matrix3.prototype,{set:function(e,t,i,r,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=i,l[1]=r,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;i<r;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyMatrix3(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e,t=(e=this.elements)[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e;return t*o*(e=e[8])-t*a*h-i*n*e+i*a*s+r*n*h-r*o*s},getInverse:function(e,t){var i=e.elements,r=this.elements;if(r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4],0===(i=i[0]*r[0]+i[1]*r[3]+i[2]*r[6])){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}}),THREE.Matrix4=function(e,t,i,r,n,o,a,s,h,l,c,p,u,f,d,E){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=i||0,m[12]=r||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=p||0,m[3]=u||0,m[7]=f||0,m[11]=d||0,m[15]=void 0!==E?E:1},THREE.extend(THREE.Matrix4.prototype,{set:function(e,t,i,r,n,o,a,s,h,l,c,p,u,f,d,E){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=r,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=p,m[3]=u,m[7]=f,m[11]=d,m[15]=E,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),this},setRotationFromEuler:function(e,t){var i=this.elements,r=e.x,n=e.y,o=e.z,a=Math.cos(r),r=Math.sin(r),s=Math.cos(n),n=Math.sin(n),h=Math.cos(o),o=Math.sin(o);if(void 0===t||"XYZ"===t){var l=a*h,c=a*o,p=r*h,u=r*o;i[0]=s*h,i[4]=-s*o,i[8]=n,i[1]=c+p*n,i[5]=l-u*n,i[9]=-r*s,i[2]=u-l*n,i[6]=p+c*n,i[10]=a*s}else"YXZ"===t?(l=s*h,c=s*o,p=n*h,u=n*o,i[0]=l+u*r,i[4]=p*r-c,i[8]=a*n,i[1]=a*o,i[5]=a*h,i[9]=-r,i[2]=c*r-p,i[6]=u+l*r,i[10]=a*s):"ZXY"===t?(l=s*h,c=s*o,p=n*h,u=n*o,i[0]=l-u*r,i[4]=-a*o,i[8]=p+c*r,i[1]=c+p*r,i[5]=a*h,i[9]=u-l*r,i[2]=-a*n,i[6]=r,i[10]=a*s):"ZYX"===t?(l=a*h,c=a*o,p=r*h,u=r*o,i[0]=s*h,i[4]=p*n-c,i[8]=l*n+u,i[1]=s*o,i[5]=u*n+l,i[9]=c*n-p,i[2]=-n,i[6]=r*s,i[10]=a*s):"YZX"===t?(l=a*s,c=a*n,p=r*s,u=r*n,i[0]=s*h,i[4]=u-l*o,i[8]=p*o+c,i[1]=o,i[5]=a*h,i[9]=-r*h,i[2]=-n*h,i[6]=c*o+p,i[10]=l-u*o):"XZY"===t&&(l=a*s,c=a*n,p=r*s,u=r*n,i[0]=s*h,i[4]=-o,i[8]=n*h,i[1]=l*o+u,i[5]=a*h,i[9]=c*o-p,i[2]=p*o-c,i[6]=r*h,i[10]=u*o+l);return this},setRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z,o=e.w,a,s,h=n+n,e=i*(a=i+i),l=i*(s=r+r),i=i*h,c=r*s,r=r*h,n=n*h,a=o*a,s=o*s,o=o*h;return t[0]=1-(c+n),t[4]=l-o,t[8]=i+s,t[1]=l+o,t[5]=1-(e+n),t[9]=r-a,t[2]=i-s,t[6]=r+a,t[10]=1-(e+c),this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o){var a=this.elements;return i.subVectors(r,n).normalize(),0===i.length()&&(i.z=1),e.crossVectors(o,i).normalize(),0===e.length()&&(i.x+=1e-4,e.crossVectors(o,i).normalize()),t.crossVectors(i,e),a[0]=e.x,a[4]=t.x,a[8]=i.x,a[1]=e.y,a[5]=t.y,a[9]=i.y,a[2]=e.z,a[6]=t.z,a[10]=i.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[4],s=i[8],h=i[12],l=i[1],c=i[5],p=i[9],u=i[13],f=i[2],d=i[6],E=i[10],m=i[14],g=i[3],T=i[7],v=i[11],i=i[15],y=r[0],R=r[4],x=r[8],H=r[12],w=r[1],_=r[5],b=r[9],S=r[13],M=r[2],A=r[6],C=r[10],P=r[14],L=r[3],D=r[7],F=r[11],r=r[15];return n[0]=o*y+a*w+s*M+h*L,n[4]=o*R+a*_+s*A+h*D,n[8]=o*x+a*b+s*C+h*F,n[12]=o*H+a*S+s*P+h*r,n[1]=l*y+c*w+p*M+u*L,n[5]=l*R+c*_+p*A+u*D,n[9]=l*x+c*b+p*C+u*F,n[13]=l*H+c*S+p*P+u*r,n[2]=f*y+d*w+E*M+m*L,n[6]=f*R+d*_+E*A+m*D,n[10]=f*x+d*b+E*C+m*F,n[14]=f*H+d*S+E*P+m*r,n[3]=g*y+T*w+v*M+i*L,n[7]=g*R+T*_+v*A+i*D,n[11]=g*x+T*b+v*C+i*F,n[15]=g*H+T*S+v*P+i*r,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;i<r;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyProjection(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),rotateAxis:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z;return e.x=i*t[0]+r*t[4]+n*t[8],e.y=i*t[1]+r*t[5]+n*t[9],e.z=i*t[2]+r*t[6]+n*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,i=new THREE.Vector4;return i.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,i.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,i.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,i.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,i},determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],p=e[10],u=e[14];return e[3]*(+n*s*c-r*h*c-n*a*p+i*h*p+r*a*u-i*s*u)+e[7]*(+t*s*u-t*h*p+n*o*p-r*o*u+r*h*l-n*s*l)+e[11]*(+t*h*c-t*a*u-n*o*c+i*o*u+n*a*l-i*h*l)+e[15]*(-r*a*l-t*s*c+t*a*p+r*o*c-i*o*p+i*s*l)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var i=this.elements,r=e.elements,n=r[0],o=r[4],a=r[8],s=r[12],h=r[1],l=r[5],c=r[9],p=r[13],u=r[2],f=r[6],d=r[10],E=r[14],m=r[3],g=r[7],T=r[11],v=r[15];if(i[0]=c*E*g-p*d*g+p*f*T-l*E*T-c*f*v+l*d*v,i[4]=s*d*g-a*E*g-s*f*T+o*E*T+a*f*v-o*d*v,i[8]=a*p*g-s*c*g+s*l*T-o*p*T-a*l*v+o*c*v,i[12]=s*c*f-a*p*f-s*l*d+o*p*d+a*l*E-o*c*E,i[1]=p*d*m-c*E*m-p*u*T+h*E*T+c*u*v-h*d*v,i[5]=a*E*m-s*d*m+s*u*T-n*E*T-a*u*v+n*d*v,i[9]=s*c*m-a*p*m-s*h*T+n*p*T+a*h*v-n*c*v,i[13]=a*p*u-s*c*u+s*h*d-n*p*d-a*h*E+n*c*E,i[2]=l*E*m-p*f*m+p*u*g-h*E*g-l*u*v+h*f*v,i[6]=s*f*m-o*E*m-s*u*g+n*E*g+o*u*v-n*f*v,i[10]=o*p*m-s*l*m+s*h*g-n*p*g-o*h*v+n*l*v,i[14]=s*l*u-o*p*u-s*h*f+n*p*f+o*h*E-n*l*E,i[3]=c*f*m-l*d*m-c*u*g+h*d*g+l*u*T-h*f*T,i[7]=o*d*m-a*f*m+a*u*g-n*d*g-o*u*T+n*f*T,i[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T,i[15]=o*c*u-a*l*u+a*h*f-n*c*f-o*h*d+n*l*d,0==(i=r[0]*i[0]+r[1]*i[4]+r[2]*i[8]+r[3]*i[12])){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},compose:function(){var e=new THREE.Matrix4,t=new THREE.Matrix4;return function(i,r,n){var o=this.elements;return e.identity(),e.setRotationFromQuaternion(r),t.makeScale(n.x,n.y,n.z),this.multiplyMatrices(e,t),o[12]=i.x,o[13]=i.y,o[14]=i.z,this}}(),decompose:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3,r=new THREE.Matrix4;return function(n,o,a){var s=this.elements;return e.set(s[0],s[1],s[2]),t.set(s[4],s[5],s[6]),i.set(s[8],s[9],s[10]),n=n instanceof THREE.Vector3?n:new THREE.Vector3,o=o instanceof THREE.Quaternion?o:new THREE.Quaternion,(a=a instanceof THREE.Vector3?a:new THREE.Vector3).x=e.length(),a.y=t.length(),a.z=i.length(),n.x=s[12],n.y=s[13],n.z=s[14],r.copy(this),r.elements[0]/=a.x,r.elements[1]/=a.x,r.elements[2]/=a.x,r.elements[4]/=a.y,r.elements[5]/=a.y,r.elements[6]/=a.y,r.elements[8]/=a.z,r.elements[9]/=a.z,r.elements[10]/=a.z,o.setFromRotationMatrix(r),[n,o,a]}}(),extractPosition:function(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var i=this.elements,t=t.elements,r=1/e.set(t[0],t[1],t[2]).length(),n=1/e.set(t[4],t[5],t[6]).length(),o=1/e.set(t[8],t[9],t[10]).length();return i[0]=t[0]*r,i[1]=t[1]*r,i[2]=t[2]*r,i[4]=t[4]*n,i[5]=t[5]*n,i[6]=t[6]*n,i[8]=t[8]*o,i[9]=t[9]*o,i[10]=t[10]*o,this}}(),translate:function(e){var t=this.elements,i=e.x,r=e.y,e=e.z;return t[12]=t[0]*i+t[4]*r+t[8]*e+t[12],t[13]=t[1]*i+t[5]*r+t[9]*e+t[13],t[14]=t[2]*i+t[6]*r+t[10]*e+t[14],t[15]=t[3]*i+t[7]*r+t[11]*e+t[15],this},rotateX:function(e){var t=this.elements,i=t[4],r=t[5],n=t[6],o=t[7],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e),e=Math.sin(e);return t[4]=c*i+e*a,t[5]=c*r+e*s,t[6]=c*n+e*h,t[7]=c*o+e*l,t[8]=c*a-e*i,t[9]=c*s-e*r,t[10]=c*h-e*n,t[11]=c*l-e*o,this},rotateY:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],o=t[3],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e),e=Math.sin(e);return t[0]=c*i-e*a,t[1]=c*r-e*s,t[2]=c*n-e*h,t[3]=c*o-e*l,t[8]=c*a+e*i,t[9]=c*s+e*r,t[10]=c*h+e*n,t[11]=c*l+e*o,this},rotateZ:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],o=t[3],a=t[4],s=t[5],h=t[6],l=t[7],c=Math.cos(e),e=Math.sin(e);return t[0]=c*i+e*a,t[1]=c*r+e*s,t[2]=c*n+e*h,t[3]=c*o+e*l,t[4]=c*a-e*i,t[5]=c*s-e*r,t[6]=c*h-e*n,t[7]=c*l-e*o,this},rotateByAxis:function(e,t){var i=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var r=e.x,n=e.y,o=e.z,a,r,n=n/(a=Math.sqrt(r*r+n*n+o*o)),o=o/a,a=(r=r/a)*r,s=n*n,h=o*o,l,c,p,u=r*n*(p=1-(l=Math.cos(t))),f=r*o*p,p=n*o*p,r=r*(c=Math.sin(t)),d=n*c,c=o*c,o=a+(1-a)*l,a=u+c,n=f-d,u=u-c,s=s+(1-s)*l,c=p+r,f=f+d,p=p-r,h=h+(1-h)*l,l=i[0],r=i[1],d=i[2],E=i[3],m=i[4],g=i[5],T=i[6],v=i[7],y=i[8],R=i[9],x=i[10],H=i[11];return i[0]=o*l+a*m+n*y,i[1]=o*r+a*g+n*R,i[2]=o*d+a*T+n*x,i[3]=o*E+a*v+n*H,i[4]=u*l+s*m+c*y,i[5]=u*r+s*g+c*R,i[6]=u*d+s*T+c*x,i[7]=u*E+s*v+c*H,i[8]=f*l+p*m+h*y,i[9]=f*r+p*g+h*R,i[10]=f*d+p*T+h*x,i[11]=f*E+p*v+h*H,this},scale:function(e){var t=this.elements,i=e.x,r=e.y,e=e.z;return t[0]*=i,t[4]*=r,t[8]*=e,t[1]*=i,t[5]*=r,t[9]*=e,t[2]*=i,t[6]*=r,t[10]*=e,t[3]*=i,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=1-i,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+i,h*a-r*s,h*s+r*a,0,h*a+r*s,l*a+i,l*s-r*o,0,h*s-r*a,l*s+r*o,n*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},makeFrustum:function(e,t,i,r,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(r-i),a[9]=(r+i)/(r-i),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){var e,n=-(e=i*Math.tan(THREE.Math.degToRad(.5*e)));return this.makeFrustum(n*t,e*t,n,e,i,r)},makeOrthographic:function(e,t,i,r,n,o){var a=this.elements,s=t-e,h=i-r,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-(t+e)/s,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-(i+r)/h,a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-(o+n)/l,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}}),THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.extend(THREE.Ray.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var i=t||new THREE.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var i=e.subVectors(t,this.origin).dot(this.direction);return e.copy(this.direction).multiplyScalar(i).add(this.origin),e.distanceTo(t)}}(),isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){return 0!=e.normal.dot(this.direction)||0==e.distanceToPoint(this.origin)},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0!=t?-(this.origin.dot(e.normal)+e.constant)/t:0==e.distanceToPoint(this.origin)?0:void 0},intersectPlane:function(e,t){var i=this.distanceToPlane(e);return void 0===i?void 0:this.at(i,t)},applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}}),THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.extend(THREE.Sphere.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var i=0,r=0,n=t.length;r<n;r++)var o=e.distanceToSquared(t[r]),i=Math.max(i,o);return this.center=e,this.radius=Math.sqrt(i),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){return(e=e||new THREE.Box3).set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}}),THREE.Frustum=function(e,t,i,r,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.extend(THREE.Frustum.prototype,{set:function(e,t,i,r,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,i=0;6>i;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,i,e=(i=e.elements)[0],r=i[1],n=i[2],o=i[3],a=i[4],s=i[5],h=i[6],l=i[7],c=i[8],p=i[9],u=i[10],f=i[11],d=i[12],E=i[13],m=i[14],i=i[15];return t[0].setComponents(o-e,l-a,f-c,i-d).normalize(),t[1].setComponents(o+e,l+a,f+c,i+d).normalize(),t[2].setComponents(o+r,l+s,f+p,i+E).normalize(),t[3].setComponents(o-r,l-s,f-p,i-E).normalize(),t[4].setComponents(o-n,l-h,f-u,i-m).normalize(),t[5].setComponents(o+n,l+h,f+u,i+m).normalize(),this},intersectsObject:function(){var e=new THREE.Vector3;return function(t){var i=t.matrixWorld,r=this.planes,t=-t.geometry.boundingSphere.radius*i.getMaxScaleOnAxis();for(e.getPositionFromMatrix(i),i=0;6>i;i++)if(r[i].distanceToPoint(e)<t)return!1;return!0}}(),intersectsSphere:function(e){for(var t=this.planes,i=e.center,e=-e.radius,r=0;6>r;r++)if(t[r].distanceToPoint(i)<e)return!1;return!0},containsPoint:function(e){for(var t=this.planes,i=0;6>i;i++)if(0>t[i].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}}),THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.extend(THREE.Plane.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,n){return r=e.subVectors(n,r).cross(t.subVectors(i,r)).normalize(),this.setFromNormalAndCoplanarPoint(r,i),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return 0>t&&0<e||0>e&&0<t},intersectLine:function(){var e=new THREE.Vector3;return function(t,i){var r=i||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);return 0!=o?0>(o=-(t.start.dot(this.normal)+this.constant)/o)||1<o?void 0:r.copy(n).multiplyScalar(o).add(t.start):0==this.distanceToPoint(t.start)?r.copy(t.start):void 0}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r){var r=r||(new THREE.Matrix3).getInverse(i).transpose(),n=e.copy(this.normal).applyMatrix3(r),o=this.coplanarPoint(t);return o.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(n,o),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}}),THREE.Math={clamp:function(e,t,i){return e<t?t:e>i?i:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:0<e?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}()},THREE.Spline=function(e){function t(e,t,i,r,n,o,a){return(2*(t-i)+(e=.5*(i-e))+(r=.5*(r-t)))*a+(-3*(t-i)-2*e-r)*o+e*n+t}this.points=e;var i=[],r={x:0,y:0,z:0},n,o,a,s,h,l,c,p,u;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return n=(this.points.length-1)*e,o=Math.floor(n),a=n-o,i[0]=0===o?o:o-1,i[1]=o,i[2]=o>this.points.length-2?this.points.length-1:o+1,i[3]=o>this.points.length-3?this.points.length-1:o+2,l=this.points[i[0]],c=this.points[i[1]],p=this.points[i[2]],u=this.points[i[3]],h=a*(s=a*a),r.x=t(l.x,c.x,p.x,u.x,a,s,h),r.y=t(l.y,c.y,p.y,u.y,a,s,h),r.z=t(l.z,c.z,p.z,u.z,a,s,h),r},this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;e<i;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,i,r,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),i=this.points.length*e,o.copy(this.points[0]),e=1;e<i;e++)t=e/i,r=this.getPoint(t),a.copy(r),h+=a.distanceTo(o),o.copy(r),t*=this.points.length-1,(t=Math.floor(t))!=n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,i,r,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(i=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*i/l.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),i=1;i<a-1;i++)r=n+i*(1/a)*(o-n),r=this.getPoint(r),s.push(h.copy(r).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,i){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==i?i:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,i,r,n){return(n=n||new THREE.Vector3).subVectors(r,i),e.subVectors(t,i),n.cross(e),0<(t=n.lengthSq())?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o,a,s){e.subVectors(a,n),t.subVectors(o,n),i.subVectors(r,n);var r=e.dot(e),n=e.dot(t),o=e.dot(i),h=t.dot(t),a=t.dot(i),l=r*h-n*n,s=s||new THREE.Vector3;return 0==l?s.set(-2,-1,-1):(h=(h*o-n*a)*(l=1/l),r=(r*a-n*o)*l,s.set(1-h-r,r,h))}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,i,r,n){return 0<=(t=THREE.Triangle.barycoordFromPoint(t,i,r,n,e)).x&&0<=t.y&&1>=t.x+t.y}}(),THREE.extend(THREE.Triangle.prototype,{constructor:THREE.Triangle,set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}}),THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0===e||e,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.extend(THREE.Clock.prototype,{start:function(){this.oldTime=this.startTime=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e}}),THREE.EventDispatcher=function(){var e={};this.addEventListener=function(t,i){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(i)&&e[t].push(i)},this.removeEventListener=function(t,i){var r=e[t].indexOf(i);-1!==r&&e[t].splice(r,1)},this.dispatchEvent=function(t){var i=e[t.type];if(void 0!==i){t.target=this;for(var r=0,n=i.length;r<n;r++)i[r].call(this,t)}}},function(e){e.Raycaster=function(t,i,r,n){this.ray=new e.Ray(t,i),0<this.ray.direction.lengthSq()&&this.ray.direction.normalize(),this.near=r||0,this.far=n||1/0};var t=new e.Sphere,i=new e.Ray,r=new e.Plane,n=new e.Vector3,o=new e.Vector3,a=new e.Matrix4,s=function(e,t){return e.distance-t.distance},h=function(s,h,l){if(s instanceof e.Particle){if(o.getPositionFromMatrix(s.matrixWorld),(h=h.ray.distanceToPoint(o))>s.scale.x)return l;l.push({distance:h,point:s.position,face:null,object:s})}else if(s instanceof e.Mesh){if(o.getPositionFromMatrix(s.matrixWorld),t.set(o,s.geometry.boundingSphere.radius*s.matrixWorld.getMaxScaleOnAxis()),!h.ray.isIntersectionSphere(t))return l;var c=s.geometry,p=c.vertices,u=s.material instanceof e.MeshFaceMaterial,f=!0===u?s.material.materials:null,d=s.material.side,E,m,g,T=h.precision;s.matrixRotationWorld.extractRotation(s.matrixWorld),a.getInverse(s.matrixWorld),i.copy(h.ray).applyMatrix4(a);for(var v=0,y=c.faces.length;v<y;v++){var R=c.faces[v],d;if(void 0!==(d=!0===u?f[R.materialIndex]:s.material)){r.setFromNormalAndCoplanarPoint(R.normal,p[R.a]);var x=i.distanceToPlane(r);if(!(Math.abs(x)<T||0>x)){
if((d=d.side)!==e.DoubleSide&&(E=i.direction.dot(r.normal),!(d===e.FrontSide?0>E:0<E)))continue;if(!(x<h.near||x>h.far)){if(n=i.at(x,n),R instanceof e.Face3){if(d=p[R.a],E=p[R.b],m=p[R.c],!e.Triangle.containsPoint(n,d,E,m))continue}else{if(!(R instanceof e.Face4))throw Error("face type not supported");if(d=p[R.a],E=p[R.b],m=p[R.c],g=p[R.d],!e.Triangle.containsPoint(n,d,E,g)&&!e.Triangle.containsPoint(n,E,m,g))continue}l.push({distance:x,point:h.ray.at(x),face:R,faceIndex:v,object:s})}}}}}},l=function(e,t,i){for(var e,r=0,n=(e=e.getDescendants()).length;r<n;r++)h(e[r],t,i)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),0<this.ray.direction.length()&&this.ray.direction.normalize()},e.Raycaster.prototype.intersectObject=function(e,t){var i=[];return!0===t&&l(e,this,i),h(e,this,i),i.sort(s),i},e.Raycaster.prototype.intersectObjects=function(e,t){for(var i=[],r=0,n=e.length;r<n;r++)h(e[r],this,i),!0===t&&l(e[r],this,i);return i.sort(s),i}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix),e=(new THREE.Matrix4).extractRotation(this.matrix),this.rotation.setEulerFromRotationMatrix(e,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.add(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,i=this.children.length;t<i;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var i=0,r=this.children.length;i<r;i++){var n=this.children[i];if(n.name===e||!0===t&&void 0!==(n=n.getChildByName(e,t)))return n}},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,i=this.children.length;t<i;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;t<this.children.length;t++)e.add(this.children[t].clone());return e}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(o===s){var e=new THREE.RenderableObject;return a.push(e),s++,o++,e}return a[o++]}function t(){if(l===p){var e=new THREE.RenderableVertex;return c.push(e),p++,l++,e}return c[l++]}function i(e,t){return t.z-e.z}function r(e,t){var i=0,r=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return 0<=n&&0<=o&&0<=a&&0<=s||!(0>n&&0>o||0>a&&0>s)&&(0>n?i=Math.max(i,n/(n-o)):0>o&&(r=Math.min(r,n/(n-o))),0>a?i=Math.max(i,a/(a-s)):0>s&&(r=Math.min(r,a/(a-s))),!(r<i)&&(e.lerp(t,i),t.lerp(e,1-r),!0))}var n,o,a=[],s=0,h,l,c=[],p=0,u,f,d=[],E=0,m,g=[],T=0,v,y,R=[],x=0,H,w,_=[],b=0,S={objects:[],sprites:[],lights:[],elements:[]},M=new THREE.Vector3,A=new THREE.Vector4,C=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),P=new THREE.Box3,L=Array(3),D=Array(4),F=new THREE.Matrix4,U=new THREE.Matrix4,z,V=new THREE.Matrix4,N=new THREE.Matrix3,B=new THREE.Matrix3,O=new THREE.Vector3,I=new THREE.Frustum,G=new THREE.Vector4,k=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),U.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(U)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),U.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(U)},this.pickingRay=function(e,t){e.z=-1;var i=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new THREE.Raycaster(e,i)},this.projectScene=function(a,s,p,W){var j=!1,X,Y,q,K,Q,Z,J,$,ee,te,ie,re,ne;w=y=m=f=0,S.elements.length=0,a.updateMatrixWorld(),void 0===s.parent&&s.updateMatrixWorld(),F.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),U.multiplyMatrices(s.projectionMatrix,F),B.getInverse(F),B.transpose(),I.setFromMatrix(U),o=0,S.objects.length=0,S.sprites.length=0,S.lights.length=0;var oe=function(t){for(var i=0,r=t.children.length;i<r;i++){var o=t.children[i];!1!==o.visible&&(o instanceof THREE.Light?S.lights.push(o):o instanceof THREE.Mesh||o instanceof THREE.Line?!1!==o.frustumCulled&&!0!==I.intersectsObject(o)||((n=e()).object=o,null!==o.renderDepth?n.z=o.renderDepth:(M.getPositionFromMatrix(o.matrixWorld),M.applyProjection(U),n.z=M.z),S.objects.push(n)):o instanceof THREE.Sprite||o instanceof THREE.Particle?((n=e()).object=o,null!==o.renderDepth?n.z=o.renderDepth:(M.getPositionFromMatrix(o.matrixWorld),M.applyProjection(U),n.z=M.z),S.sprites.push(n)):((n=e()).object=o,null!==o.renderDepth?n.z=o.renderDepth:(M.getPositionFromMatrix(o.matrixWorld),M.applyProjection(U),n.z=M.z),S.objects.push(n)),oe(o))}};for(oe(a),!0===p&&S.objects.sort(i),a=0,p=S.objects.length;a<p;a++)if($=S.objects[a].object,z=$.matrixWorld,l=0,$ instanceof THREE.Mesh){for(q=(ee=$.geometry).vertices,te=ee.faces,ee=ee.faceVertexUvs,N.getInverse(z),N.transpose(),ne=!0===(re=$.material instanceof THREE.MeshFaceMaterial)?$.material:null,X=0,Y=q.length;X<Y;X++)(h=t()).positionWorld.copy(q[X]).applyMatrix4(z),h.positionScreen.copy(h.positionWorld).applyMatrix4(U),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.positionScreen.z/=h.positionScreen.w,h.visible=!(-1>h.positionScreen.x||1<h.positionScreen.x||-1>h.positionScreen.y||1<h.positionScreen.y||-1>h.positionScreen.z||1<h.positionScreen.z);for(q=0,X=te.length;q<X;q++){Y=te[q];var ae=!0===re?ne.materials[Y.materialIndex]:$.material;if(void 0!==ae){if(Z=ae.side,Y instanceof THREE.Face3){if(K=c[Y.a],Q=c[Y.b],J=c[Y.c],L[0]=K.positionScreen,L[1]=Q.positionScreen,L[2]=J.positionScreen,!0!==K.visible&&!0!==Q.visible&&!0!==J.visible&&!C.isIntersectionBox(P.setFromPoints(L)))continue;if(j=0>(J.positionScreen.x-K.positionScreen.x)*(Q.positionScreen.y-K.positionScreen.y)-(J.positionScreen.y-K.positionScreen.y)*(Q.positionScreen.x-K.positionScreen.x),Z!==THREE.DoubleSide&&j!==(Z===THREE.FrontSide))continue;f===E?(ie=new THREE.RenderableFace3,d.push(ie),E++,f++,u=ie):u=d[f++],u.v1.copy(K),u.v2.copy(Q),u.v3.copy(J)}else if(Y instanceof THREE.Face4){if(K=c[Y.a],Q=c[Y.b],J=c[Y.c],ie=c[Y.d],D[0]=K.positionScreen,D[1]=Q.positionScreen,D[2]=J.positionScreen,D[3]=ie.positionScreen,!0!==K.visible&&!0!==Q.visible&&!0!==J.visible&&!0!==ie.visible&&!C.isIntersectionBox(P.setFromPoints(D)))continue;if(j=0>(ie.positionScreen.x-K.positionScreen.x)*(Q.positionScreen.y-K.positionScreen.y)-(ie.positionScreen.y-K.positionScreen.y)*(Q.positionScreen.x-K.positionScreen.x)||0>(Q.positionScreen.x-J.positionScreen.x)*(ie.positionScreen.y-J.positionScreen.y)-(Q.positionScreen.y-J.positionScreen.y)*(ie.positionScreen.x-J.positionScreen.x),Z!==THREE.DoubleSide&&j!==(Z===THREE.FrontSide))continue;if(m===T){var se=new THREE.RenderableFace4;g.push(se),T++,m++,u=se}else u=g[m++];u.v1.copy(K),u.v2.copy(Q),u.v3.copy(J),u.v4.copy(ie)}for(u.normalModel.copy(Y.normal),!1===j&&(Z===THREE.BackSide||Z===THREE.DoubleSide)&&u.normalModel.negate(),u.normalModel.applyMatrix3(N).normalize(),u.normalModelView.copy(u.normalModel).applyMatrix3(B),u.centroidModel.copy(Y.centroid).applyMatrix4(z),K=0,Q=(J=Y.vertexNormals).length;K<Q;K++)(ie=u.vertexNormalsModel[K]).copy(J[K]),!1===j&&(Z===THREE.BackSide||Z===THREE.DoubleSide)&&ie.negate(),ie.applyMatrix3(N).normalize(),u.vertexNormalsModelView[K].copy(ie).applyMatrix3(B);for(u.vertexNormalsLength=J.length,K=0,Q=ee.length;K<Q;K++)if(void 0!==(ie=ee[K][q]))for(Z=0,J=ie.length;Z<J;Z++)u.uvs[K][Z]=ie[Z];u.color=Y.color,u.material=ae,O.copy(u.centroidModel).applyProjection(U),u.z=O.z,S.elements.push(u)}}}else if($ instanceof THREE.Line)for(V.multiplyMatrices(U,z),q=$.geometry.vertices,(K=t()).positionScreen.copy(q[0]).applyMatrix4(V),te=$.type===THREE.LinePieces?2:1,X=1,Y=q.length;X<Y;X++)(K=t()).positionScreen.copy(q[X]).applyMatrix4(V),0<(X+1)%te||(Q=c[l-2],G.copy(K.positionScreen),k.copy(Q.positionScreen),!0===r(G,k)&&(G.multiplyScalar(1/G.w),k.multiplyScalar(1/k.w),y===x?(ee=new THREE.RenderableLine,R.push(ee),x++,y++,v=ee):v=R[y++],v.v1.positionScreen.copy(G),v.v2.positionScreen.copy(k),v.z=Math.max(G.z,k.z),v.material=$.material,S.elements.push(v)));for(a=0,p=S.sprites.length;a<p;a++)$=S.sprites[a].object,z=$.matrixWorld,$ instanceof THREE.Particle&&(A.set(z.elements[12],z.elements[13],z.elements[14],1),A.applyMatrix4(U),A.z/=A.w,0<A.z&&1>A.z&&(w===b?(j=new THREE.RenderableParticle,_.push(j),b++,w++,H=j):H=_[w++],H.object=$,H.x=A.x/A.w,H.y=A.y/A.w,H.z=A.z,H.rotation=$.rotation.z,H.scale.x=$.scale.x*Math.abs(H.x-(A.x+s.projectionMatrix.elements[0])/(A.w+s.projectionMatrix.elements[12])),H.scale.y=$.scale.y*Math.abs(H.y-(A.y+s.projectionMatrix.elements[5])/(A.w+s.projectionMatrix.elements[13])),H.material=$.material,S.elements.push(H)));return!0===W&&S.elements.sort(i),S}},THREE.Face3=function(e,t,i,r,n,o){this.a=e,this.b=t,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c),t,i;for(e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex,t=0,i=this.vertexNormals.length;t<i;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,i=this.vertexColors.length;t<i;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,i=this.vertexTangents.length;t<i;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,i,r,n,o,a){this.a=e,this.b=t,this.c=i,this.d=r,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d),t,i;for(e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex,t=0,i=this.vertexNormals.length;t<i;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,i=this.vertexColors.length;t<i;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,i=this.vertexTangents.length;t<i;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Geometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getInverse(e).transpose(),i=0,r=this.vertices.length;i<r;i++)this.vertices[i].applyMatrix4(e);for(i=0,r=this.faces.length;i<r;i++){var n=this.faces[i];n.normal.applyMatrix3(t).normalize();for(var o=0,a=n.vertexNormals.length;o<a;o++)n.vertexNormals[o].applyMatrix3(t).normalize();n.centroid.applyMatrix4(e)}},computeCentroids:function(){var e,t,i;for(e=0,t=this.faces.length;e<t;e++)(i=this.faces[e]).centroid.set(0,0,0),i instanceof THREE.Face3?(i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.divideScalar(3)):i instanceof THREE.Face4&&(i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.add(this.vertices[i.d]),i.centroid.divideScalar(4))},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,i=0,r=this.faces.length;i<r;i++){var n=this.faces[i],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,i,r,n;if(void 0===this.__tmpVertices){for(n=this.__tmpVertices=Array(this.vertices.length),t=0,i=this.vertices.length;t<i;t++)n[t]=new THREE.Vector3;for(t=0,i=this.faces.length;t<i;t++)(r=this.faces[t])instanceof THREE.Face3?r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:r instanceof THREE.Face4&&(r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(n=this.__tmpVertices,t=0,i=this.vertices.length;t<i;t++)n[t].set(0,0,0);if(e){var o,a,s,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,p=new THREE.Vector3,u=new THREE.Vector3;for(t=0,i=this.faces.length;t<i;t++)(r=this.faces[t])instanceof THREE.Face3?(e=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],h.subVectors(a,o),l.subVectors(e,o),h.cross(l),n[r.a].add(h),n[r.b].add(h),n[r.c].add(h)):r instanceof THREE.Face4&&(e=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s=this.vertices[r.d],c.subVectors(s,o),l.subVectors(e,o),c.cross(l),n[r.a].add(c),n[r.b].add(c),n[r.d].add(c),p.subVectors(s,a),u.subVectors(o,a),p.cross(u),n[r.b].add(p),n[r.c].add(p),n[r.d].add(p))}else for(t=0,i=this.faces.length;t<i;t++)(r=this.faces[t])instanceof THREE.Face3?(n[r.a].add(r.normal),n[r.b].add(r.normal),n[r.c].add(r.normal)):r instanceof THREE.Face4&&(n[r.a].add(r.normal),n[r.b].add(r.normal),n[r.c].add(r.normal),n[r.d].add(r.normal));for(t=0,i=this.vertices.length;t<i;t++)n[t].normalize();for(t=0,i=this.faces.length;t<i;t++)(r=this.faces[t])instanceof THREE.Face3?(r.vertexNormals[0].copy(n[r.a]),r.vertexNormals[1].copy(n[r.b]),r.vertexNormals[2].copy(n[r.c])):r instanceof THREE.Face4&&(r.vertexNormals[0].copy(n[r.a]),r.vertexNormals[1].copy(n[r.b]),r.vertexNormals[2].copy(n[r.c]),r.vertexNormals[3].copy(n[r.d]))},computeMorphNormals:function(){var e,t,i,r,n;for(i=0,r=this.faces.length;i<r;i++)for((n=this.faces[i]).__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;e<t;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals,h,l;for(i=0,r=this.faces.length;i<r;i++)n=this.faces[i],h=new THREE.Vector3,l=n instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},a.push(h),s.push(l)}for(a=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),i=0,r=this.faces.length;i<r;i++)n=this.faces[i],h=a.faceNormals[i],l=a.vertexNormals[i],h.copy(n.normal),n instanceof THREE.Face3?(l.a.copy(n.vertexNormals[0]),l.b.copy(n.vertexNormals[1]),l.c.copy(n.vertexNormals[2])):(l.a.copy(n.vertexNormals[0]),l.b.copy(n.vertexNormals[1]),l.c.copy(n.vertexNormals[2]),l.d.copy(n.vertexNormals[3]))}for(i=0,r=this.faces.length;i<r;i++)(n=this.faces[i]).normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function e(e,t,i,r,n,o,w){s=e.vertices[t],h=e.vertices[i],l=e.vertices[r],c=a[n],p=a[o],u=a[w],f=h.x-s.x,d=l.x-s.x,E=h.y-s.y,m=l.y-s.y,g=h.z-s.z,T=l.z-s.z,v=p.x-c.x,y=u.x-c.x,R=p.y-c.y,x=u.y-c.y,H=1/(v*x-y*R),S.set((x*f-R*d)*H,(x*E-R*m)*H,(x*g-R*T)*H),M.set((v*d-y*f)*H,(v*m-y*E)*H,(v*T-y*g)*H),_[t].add(S),_[i].add(S),_[r].add(S),b[t].add(M),b[i].add(M),b[r].add(M)}var t,i,r,n,o,a,s,h,l,c,p,u,f,d,E,m,g,T,v,y,R,x,H,w,_=[],b=[],S=new THREE.Vector3,M=new THREE.Vector3,A=new THREE.Vector3,C=new THREE.Vector3,P=new THREE.Vector3;for(t=0,i=this.vertices.length;t<i;t++)_[t]=new THREE.Vector3,b[t]=new THREE.Vector3;for(t=0,i=this.faces.length;t<i;t++)o=this.faces[t],a=this.faceVertexUvs[0][t],o instanceof THREE.Face3?e(this,o.a,o.b,o.c,0,1,2):o instanceof THREE.Face4&&(e(this,o.a,o.b,o.d,0,1,3),e(this,o.b,o.c,o.d,1,2,3));var L=["a","b","c","d"];for(t=0,i=this.faces.length;t<i;t++)for(o=this.faces[t],r=0;r<o.vertexNormals.length;r++)P.copy(o.vertexNormals[r]),n=o[L[r]],w=_[n],A.copy(w),A.sub(P.multiplyScalar(P.dot(w))).normalize(),C.crossVectors(o.vertexNormals[r],w),n=0>(n=C.dot(b[n]))?-1:1,o.vertexTangents[r]=new THREE.Vector4(A.x,A.y,A.z,n);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,i=0,r=t.length;i<r;i++)0<i&&(e+=t[i].distanceTo(t[i-1])),this.lineDistances[i]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e={},t=[],i=[],r,n=Math.pow(10,4),o,a,s,h,l;for(this.__tmpVertices=void 0,o=0,a=this.vertices.length;o<a;o++)r=this.vertices[o],void 0===e[r=[Math.round(r.x*n),Math.round(r.y*n),Math.round(r.z*n)].join("_")]?(e[r]=o,t.push(this.vertices[o]),i[o]=t.length-1):i[o]=i[e[r]];for(n=[],o=0,a=this.faces.length;o<a;o++)if((e=this.faces[o])instanceof THREE.Face3){for(e.a=i[e.a],e.b=i[e.b],e.c=i[e.c],s=[e.a,e.b,e.c],r=-1,h=0;3>h;h++)if(s[h]==s[(h+1)%3]){n.push(o);break}}else if(e instanceof THREE.Face4){for(e.a=i[e.a],e.b=i[e.b],e.c=i[e.c],e.d=i[e.d],s=[e.a,e.b,e.c,e.d],r=-1,h=0;4>h;h++)s[h]==s[(h+1)%4]&&(0<=r&&n.push(o),r=h);if(0<=r){s.splice(r,1);var c=new THREE.Face3(s[0],s[1],s[2],e.normal,e.color,e.materialIndex);for(s=0,h=this.faceVertexUvs.length;s<h;s++)(l=this.faceVertexUvs[s][o])&&l.splice(r,1);e.vertexNormals&&0<e.vertexNormals.length&&(c.vertexNormals=e.vertexNormals,c.vertexNormals.splice(r,1)),e.vertexColors&&0<e.vertexColors.length&&(c.vertexColors=e.vertexColors,c.vertexColors.splice(r,1)),this.faces[o]=c}}for(o=n.length-1;0<=o;o--)for(this.faces.splice(o,1),s=0,h=this.faceVertexUvs.length;s<h;s++)this.faceVertexUvs[s].splice(o,1);return i=this.vertices.length-t.length,this.vertices=t,i},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,i=0,r=t.length;i<r;i++)e.vertices.push(t[i].clone());for(i=0,r=(t=this.faces).length;i<r;i++)e.faces.push(t[i].clone());for(i=0,r=(t=this.faceVertexUvs[0]).length;i<r;i++){for(var n=t[i],o=[],a=0,s=n.length;a<s;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));e.faceVertexUvs[0].push(o)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,i;this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(i=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==i&&((t=new THREE.Matrix3).getInverse(e).transpose(),t.multiplyVector3Array(i),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox,i,r,n;3<=e.length&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var o=3,a=e.length;o<a;o+=3)i=e[o],r=e[o+1],n=e[o+2],i<t.min.x?t.min.x=i:i>t.max.x&&(t.max.x=i),r<t.min.y?t.min.y=r:r>t.max.y&&(t.max.y=r),n<t.min.z?t.min.z=n:n>t.max.z&&(t.max.z=n)}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,i=0,r,n,o=0,a=e.length;o<a;o+=3)(t=(t=e[o])*t+(r=e[o+1])*r+(n=e[o+2])*n)>i&&(i=t);this.boundingSphere.radius=Math.sqrt(i)}},computeVertexNormals:function(){if(this.attributes.position){var e,t,i,r;if(e=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e),numItems:e};else for(e=0,t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0;var n=this.attributes.position.array,o=this.attributes.normal.array,a,s,h,l,c,p,u=new THREE.Vector3,f=new THREE.Vector3,d=new THREE.Vector3,E=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=this.offsets;for(i=0,r=T.length;i<r;++i){t=T[i].start,a=T[i].count;var v=T[i].index;for(e=t,t+=a;e<t;e+=3)a=v+g[e],s=v+g[e+1],h=v+g[e+2],l=n[3*a],c=n[3*a+1],p=n[3*a+2],u.set(l,c,p),l=n[3*s],c=n[3*s+1],p=n[3*s+2],f.set(l,c,p),l=n[3*h],c=n[3*h+1],p=n[3*h+2],d.set(l,c,p),E.subVectors(d,f),m.subVectors(u,f),E.cross(m),o[3*a]+=E.x,o[3*a+1]+=E.y,o[3*a+2]+=E.z,o[3*s]+=E.x,o[3*s+1]+=E.y,o[3*s+2]+=E.z,o[3*h]+=E.x,o[3*h+1]+=E.y,o[3*h+2]+=E.z}}else for(e=0,t=n.length;e<t;e+=9)l=n[e],c=n[e+1],p=n[e+2],u.set(l,c,p),l=n[e+3],c=n[e+4],p=n[e+5],f.set(l,c,p),l=n[e+6],c=n[e+7],p=n[e+8],d.set(l,c,p),E.subVectors(d,f),m.subVectors(u,f),E.cross(m),o[e]=E.x,o[e+1]=E.y,o[e+2]=E.z,o[e+3]=E.x,o[e+4]=E.y,o[e+5]=E.z,o[e+6]=E.x,o[e+7]=E.y,o[e+8]=E.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,i,r,n=0,o=e.length;n<o;n+=3)t=e[n],i=e[n+1],r=e[n+2],t=1/Math.sqrt(t*t+i*i+r*r),e[n]*=t,e[n+1]*=t,e[n+2]*=t},computeTangents:function(){function e(e){z.x=r[3*e],z.y=r[3*e+1],z.z=r[3*e+2],V.copy(z),B=h[e],F.copy(B),F.sub(z.multiplyScalar(z.dot(B))).normalize(),U.crossVectors(V,B),O=U.dot(l[e]),N=0>O?-1:1,s[4*e]=F.x,s[4*e+1]=F.y,s[4*e+2]=F.z,s[4*e+3]=N}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var t=this.attributes.index.array,i=this.attributes.position.array,r=this.attributes.normal.array,n=this.attributes.uv.array,o=i.length/3;if(void 0===this.attributes.tangent){var a=4*o;this.attributes.tangent={itemSize:4,array:new Float32Array(a),numItems:a}}for(var s=this.attributes.tangent.array,h=[],l=[],a=0;a<o;a++)h[a]=new THREE.Vector3,l[a]=new THREE.Vector3;var c,p,u,f,d,E,m,g,T,v,y,R,x,H,w,o=new THREE.Vector3,a=new THREE.Vector3,_,b,S,M,A,C,P,L=this.offsets;for(S=0,M=L.length;S<M;++S){b=L[S].start,A=L[S].count;var D=L[S].index;for(_=b,b+=A;_<b;_+=3)A=D+t[_],C=D+t[_+1],P=D+t[_+2],c=i[3*A],p=i[3*A+1],u=i[3*A+2],f=i[3*C],d=i[3*C+1],E=i[3*C+2],m=i[3*P],g=i[3*P+1],T=i[3*P+2],v=n[2*A],y=n[2*A+1],R=n[2*C],x=n[2*C+1],H=n[2*P],f-=c,c=m-c,d-=p,p=g-p,E-=u,u=T-u,x-=y,w=1/((R-=v)*(y=(w=n[2*P+1])-y)-(v=H-v)*x),o.set((y*f-x*c)*w,(y*d-x*p)*w,(y*E-x*u)*w),a.set((R*c-v*f)*w,(R*p-v*d)*w,(R*u-v*E)*w),h[A].add(o),h[C].add(o),h[P].add(o),l[A].add(a),l[C].add(a),l[P].add(a)}var F=new THREE.Vector3,U=new THREE.Vector3,z=new THREE.Vector3,V=new THREE.Vector3,N,B,O;for(S=0,M=L.length;S<M;++S)for(b=L[S].start,A=L[S].count,D=L[S].index,_=b,b+=A;_<b;_+=3)A=D+t[_],C=D+t[_+1],P=D+t[_+2],e(A),e(C),e(P);this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,i,r,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,n,o){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,i,r=e*(i=-t),e=Math.abs(e*t-r),i=Math.abs(t-i);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*i/this.fullHeight,t-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,i){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==i?i:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,i,r,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div")
;return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return(e=e.split("/")).pop(),(1>e.length?".":e.join("/"))+"/"},initMaterials:function(e,t){for(var i=[],r=0;r<e.length;++r)i[r]=THREE.Loader.prototype.createMaterial(e[r],t);return i},needsTangents:function(e){for(var t=0,i=e.length;t<i;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function i(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function n(e,n,o,s,h,l,c){var p=/\.dds$/i.test(o),u=t+"/"+o;if(p){var f=THREE.ImageUtils.loadCompressedTexture(u);e[n]=f}else f=document.createElement("canvas"),e[n]=new THREE.Texture(f);if(e[n].sourceFile=o,s&&(e[n].repeat.set(s[0],s[1]),1!==s[0]&&(e[n].wrapS=THREE.RepeatWrapping),1!==s[1]&&(e[n].wrapT=THREE.RepeatWrapping)),h&&e[n].offset.set(h[0],h[1]),l&&(void 0!==(o={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping})[l[0]]&&(e[n].wrapS=o[l[0]]),void 0!==o[l[1]]&&(e[n].wrapT=o[l[1]])),c&&(e[n].anisotropy=c),!p){var d=e[n],e;(e=new Image).onload=function(){if(i(this.width)&&i(this.height))d.image=this;else{var e=r(this.width),t=r(this.height);d.image.width=e,d.image.height=t,d.image.getContext("2d").drawImage(this,0,0,e,t)}d.needsUpdate=!0},e.crossOrigin=a.crossOrigin,e.src=u}}function o(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var a=this,s="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var l=e.shading.toLowerCase();"phong"===l?s="MeshPhongMaterial":"basic"===l&&(s="MeshBasicMaterial")}return void 0!==e.blending&&void 0!==THREE[e.blending]&&(h.blending=THREE[e.blending]),(void 0!==e.transparent||1>e.opacity)&&(h.transparent=e.transparent),void 0!==e.depthTest&&(h.depthTest=e.depthTest),void 0!==e.depthWrite&&(h.depthWrite=e.depthWrite),void 0!==e.visible&&(h.visible=e.visible),void 0!==e.flipSided&&(h.side=THREE.BackSide),void 0!==e.doubleSided&&(h.side=THREE.DoubleSide),void 0!==e.wireframe&&(h.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?h.vertexColors=THREE.FaceColors:e.vertexColors&&(h.vertexColors=THREE.VertexColors)),e.colorDiffuse?h.color=o(e.colorDiffuse):e.DbgColor&&(h.color=e.DbgColor),e.colorSpecular&&(h.specular=o(e.colorSpecular)),e.colorAmbient&&(h.ambient=o(e.colorAmbient)),e.transparency&&(h.opacity=e.transparency),e.specularCoef&&(h.shininess=e.specularCoef),e.mapDiffuse&&t&&n(h,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&n(h,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&n(h,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&n(h,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&n(h,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(h.bumpScale=e.mapBumpScale),e.mapNormal?(s=THREE.ShaderLib.normalmap,(l=THREE.UniformsUtils.clone(s.uniforms)).tNormal.value=h.normalMap,e.mapNormalFactor&&l.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),h.map&&(l.tDiffuse.value=h.map,l.enableDiffuse.value=!0),h.specularMap&&(l.tSpecular.value=h.specularMap,l.enableSpecular.value=!0),h.lightMap&&(l.tAO.value=h.lightMap,l.enableAO.value=!0),l.uDiffuseColor.value.setHex(h.color),l.uSpecularColor.value.setHex(h.specular),l.uAmbientColor.value.setHex(h.ambient),l.uShininess.value=h.shininess,void 0!==h.opacity&&(l.uOpacity.value=h.opacity),s=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,lights:!0,fog:!0}),h.transparent&&(s.transparent=!0)):s=new THREE[s](h),void 0!==e.DbgName&&(s.name=e.DbgName),s}},THREE.ImageLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var i=this;void 0===t&&(t=new Image),t.addEventListener("load",(function(){i.dispatchEvent({type:"load",content:t})}),!1),t.addEventListener("error",(function(){i.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})}),!1),i.crossOrigin&&(t.crossOrigin=i.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,i){i=i&&"string"==typeof i?i:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,i,r,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);e.createModel(s,i,r)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+o.status+"]");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,i){var r=new THREE.Geometry,n=void 0!==e.scale?1/e.scale:1,o,a,s,h,l,c,p,u,f,d,E,m,g,T,v,y=e.faces;d=e.vertices;var R=e.normals,x=e.colors,H=0;for(o=0;o<e.uvs.length;o++)e.uvs[o].length&&H++;for(o=0;o<H;o++)r.faceUvs[o]=[],r.faceVertexUvs[o]=[];for(h=0,l=d.length;h<l;)(c=new THREE.Vector3).x=d[h++]*n,c.y=d[h++]*n,c.z=d[h++]*n,r.vertices.push(c);for(h=0,l=y.length;h<l;){if(c=1&(d=y[h++]),s=2&d,o=4&d,a=8&d,u=16&d,p=32&d,E=64&d,d&=128,c?((m=new THREE.Face4).a=y[h++],m.b=y[h++],m.c=y[h++],m.d=y[h++],c=4):((m=new THREE.Face3).a=y[h++],m.b=y[h++],m.c=y[h++],c=3),s&&(s=y[h++],m.materialIndex=s),s=r.faces.length,o)for(o=0;o<H;o++)v=(g=e.uvs[o])[2*(f=y[h++])],f=g[2*f+1],r.faceUvs[o][s]=new THREE.Vector2(v,f);if(a)for(o=0;o<H;o++){for(g=e.uvs[o],T=[],a=0;a<c;a++)v=g[2*(f=y[h++])],f=g[2*f+1],T[a]=new THREE.Vector2(v,f);r.faceVertexUvs[o][s]=T}if(u&&(u=3*y[h++],(a=new THREE.Vector3).x=R[u++],a.y=R[u++],a.z=R[u],m.normal=a),p)for(o=0;o<c;o++)u=3*y[h++],(a=new THREE.Vector3).x=R[u++],a.y=R[u++],a.z=R[u],m.vertexNormals.push(a);if(E&&(p=y[h++],p=new THREE.Color(x[p]),m.color=p),d)for(o=0;o<c;o++)p=y[h++],p=new THREE.Color(x[p]),m.vertexColors.push(p);r.faces.push(m)}if(e.skinWeights)for(h=0,l=e.skinWeights.length;h<l;h+=2)y=e.skinWeights[h],R=e.skinWeights[h+1],r.skinWeights.push(new THREE.Vector4(y,R,0,0));if(e.skinIndices)for(h=0,l=e.skinIndices.length;h<l;h+=2)y=e.skinIndices[h],R=e.skinIndices[h+1],r.skinIndices.push(new THREE.Vector4(y,R,0,0));if(r.bones=e.bones,r.animation=e.animation,void 0!==e.morphTargets)for(h=0,l=e.morphTargets.length;h<l;h++)for(r.morphTargets[h]={},r.morphTargets[h].name=e.morphTargets[h].name,r.morphTargets[h].vertices=[],x=r.morphTargets[h].vertices,y=0,R=(H=e.morphTargets[h].vertices).length;y<R;y+=3)(d=new THREE.Vector3).x=H[y]*n,d.y=H[y+1]*n,d.z=H[y+2]*n,x.push(d);if(void 0!==e.morphColors)for(h=0,l=e.morphColors.length;h<l;h++)for(r.morphColors[h]={},r.morphColors[h].name=e.morphColors[h].name,r.morphColors[h].colors=[],R=r.morphColors[h].colors,n=0,y=(x=e.morphColors[h].colors).length;n<y;n+=3)(H=new THREE.Color(16755200)).setRGB(x[n],x[n+1],x[n+2]),R.push(H);r.computeCentroids(),r.computeFaceNormals(),e=this.initMaterials(e.materials,i),this.needsTangents(e)&&r.computeTangents(),t(r,e)},THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var e=this,t=0,i=0,r=function(){t++,e.dispatchEvent({type:"progress",loaded:t,total:i}),t===i&&e.dispatchEvent({type:"load"})};this.add=function(e){i++,e.addEventListener("load",r,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var i=this,r=new XMLHttpRequest;r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status||0===r.status){var n=JSON.parse(r.responseText);i.parse(n,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+r.status+"]")},r.open("GET",e,!0),r.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,t,i){function r(e,t){return"relativeToHTML"==t?e:p+"/"+e}function n(){o(w.scene,b.objects)}function o(e,t){var i,n,a,h,l,p,E;for(E in t)if(void 0===w.objects[E]){var m=t[E],y=null;if(m.type&&m.type in c.hierarchyHandlerMap){if(void 0===m.loading){for(var R in n={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},a={},m)R in n||(a[R]=m[R]);f=w.materials[m.material],m.loading=!0,(n=c.hierarchyHandlerMap[m.type].loaderObject).options?n.load(r(m.url,b.urlBaseType),s(E,e,f,m)):n.load(r(m.url,b.urlBaseType),s(E,e,f,m),a)}}else if(void 0!==m.geometry){if(u=w.geometries[m.geometry]){if(y=!1,y=(f=w.materials[m.material])instanceof THREE.ShaderMaterial,a=m.position,h=m.rotation,l=m.scale,i=m.matrix,p=m.quaternion,m.material||(f=new THREE.MeshFaceMaterial(w.face_materials[m.geometry])),f instanceof THREE.MeshFaceMaterial&&0===f.materials.length&&(f=new THREE.MeshFaceMaterial(w.face_materials[m.geometry])),f instanceof THREE.MeshFaceMaterial)for(n=0;n<f.materials.length;n++)y=y||f.materials[n]instanceof THREE.ShaderMaterial;y&&u.computeTangents(),m.skin?y=new THREE.SkinnedMesh(u,f):m.morph?(y=new THREE.MorphAnimMesh(u,f),void 0!==m.duration&&(y.duration=m.duration),void 0!==m.time&&(y.time=m.time),void 0!==m.mirroredLoop&&(y.mirroredLoop=m.mirroredLoop),f.morphNormals&&u.computeMorphNormals()):y=new THREE.Mesh(u,f),y.name=E,i?(y.matrixAutoUpdate=!1,y.matrix.set(i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9],i[10],i[11],i[12],i[13],i[14],i[15])):(y.position.set(a[0],a[1],a[2]),p?(y.quaternion.set(p[0],p[1],p[2],p[3]),y.useQuaternion=!0):y.rotation.set(h[0],h[1],h[2]),y.scale.set(l[0],l[1],l[2])),y.visible=m.visible,y.castShadow=m.castShadow,y.receiveShadow=m.receiveShadow,e.add(y),w.objects[E]=y}}else"DirectionalLight"===m.type||"PointLight"===m.type||"AmbientLight"===m.type?(T=void 0!==m.color?m.color:16777215,v=void 0!==m.intensity?m.intensity:1,"DirectionalLight"===m.type?(a=m.direction,(g=new THREE.DirectionalLight(T,v)).position.set(a[0],a[1],a[2]),m.target&&(_.push({object:g,targetName:m.target}),g.target=null)):"PointLight"===m.type?(a=m.position,n=m.distance,(g=new THREE.PointLight(T,v,n)).position.set(a[0],a[1],a[2])):"AmbientLight"===m.type&&(g=new THREE.AmbientLight(T)),e.add(g),g.name=E,w.lights[E]=g,w.objects[E]=g):"PerspectiveCamera"===m.type||"OrthographicCamera"===m.type?("PerspectiveCamera"===m.type?d=new THREE.PerspectiveCamera(m.fov,m.aspect,m.near,m.far):"OrthographicCamera"===m.type&&(d=new THREE.OrthographicCamera(m.left,m.right,m.top,m.bottom,m.near,m.far)),a=m.position,d.position.set(a[0],a[1],a[2]),e.add(d),d.name=E,w.cameras[E]=d,w.objects[E]=d):(a=m.position,h=m.rotation,l=m.scale,p=m.quaternion,(y=new THREE.Object3D).name=E,y.position.set(a[0],a[1],a[2]),p?(y.quaternion.set(p[0],p[1],p[2],p[3]),y.useQuaternion=!0):y.rotation.set(h[0],h[1],h[2]),y.scale.set(l[0],l[1],l[2]),y.visible=void 0!==m.visible&&m.visible,e.add(y),w.objects[E]=y,w.empties[E]=y);if(y){if(void 0!==m.properties)for(var x in m.properties)y.properties[x]=m.properties[x];if(void 0!==m.groups)for(n=0;n<m.groups.length;n++)a=m.groups[n],void 0===w.groups[a]&&(w.groups[a]=[]),w.groups[a].push(E);void 0!==m.children&&o(y,m.children)}}}function a(e){return function(t,i){w.geometries[e]=t,w.face_materials[e]=i,n(),y-=1,c.onLoadComplete(),l()}}function s(e,t,i,r){return function(o){var o=o.content?o.content:o.dae?o.scene:o,a=r.position,s=r.rotation,h=r.quaternion,p=r.scale;o.position.set(a[0],a[1],a[2]),h?(o.quaternion.set(h[0],h[1],h[2],h[3]),o.useQuaternion=!0):o.rotation.set(s[0],s[1],s[2]),o.scale.set(p[0],p[1],p[2]),i&&o.traverse((function(e){e.material=i}));var u=void 0===r.visible||r.visible;o.traverse((function(e){e.visible=u})),t.add(o),o.name=e,w.objects[e]=o,n(),y-=1,c.onLoadComplete(),l()}}function h(e){return function(t,i){w.geometries[e]=t,w.face_materials[e]=i}}function l(){if(c.callbackProgress({totalModels:x,totalTextures:H,loadedModels:x-y,loadedTextures:H-R},w),c.onLoadProgress(),0===y&&0===R){for(var e=0;e<_.length;e++){var i=_[e],r=w.objects[i.targetName];r?i.object.target=r:(i.object.target=new THREE.Object3D,w.scene.add(i.object.target)),i.object.target.properties.targetInverse=i.object}t(w)}}var c=this,p=THREE.Loader.prototype.extractUrlBase(i),u,f,d,E,m,g,T,v,y,R,x,H,w,_=[],b=e,S,M,A;for(S in this.geometryHandlerMap)e=this.geometryHandlerMap[S].loaderClass,this.geometryHandlerMap[S].loaderObject=new e;for(S in this.hierarchyHandlerMap)e=this.hierarchyHandlerMap[S].loaderClass,this.hierarchyHandlerMap[S].loaderObject=new e;for(var C in R=y=0,w={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},b.transform&&(S=b.transform.position,e=b.transform.rotation,i=b.transform.scale,S&&w.scene.position.set(S[0],S[1],S[2]),e&&w.scene.rotation.set(e[0],e[1],e[2]),i&&w.scene.scale.set(i[0],i[1],i[2]),S||e||i)&&(w.scene.updateMatrix(),w.scene.updateMatrixWorld()),S=function(e){return function(){R-=e,l(),c.onLoadComplete()}},b.fogs)"linear"===(e=b.fogs[C]).type?E=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(E=new THREE.FogExp2(0,e.density)),e=e.color,E.color.setRGB(e[0],e[1],e[2]),w.fogs[C]=E;for(var P in b.geometries)(E=b.geometries[P]).type in this.geometryHandlerMap&&(y+=1,c.onLoadStart());for(var L in b.objects)(E=b.objects[L]).type&&E.type in this.hierarchyHandlerMap&&(y+=1,c.onLoadStart());for(P in x=y,b.geometries)if("cube"===(E=b.geometries[P]).type)u=new THREE.CubeGeometry(E.width,E.height,E.depth,E.widthSegments,E.heightSegments,E.depthSegments),w.geometries[P]=u;else if("plane"===E.type)u=new THREE.PlaneGeometry(E.width,E.height,E.widthSegments,E.heightSegments),w.geometries[P]=u;else if("sphere"===E.type)u=new THREE.SphereGeometry(E.radius,E.widthSegments,E.heightSegments),w.geometries[P]=u;else if("cylinder"===E.type)u=new THREE.CylinderGeometry(E.topRad,E.botRad,E.height,E.radSegs,E.heightSegs),w.geometries[P]=u;else if("torus"===E.type)u=new THREE.TorusGeometry(E.radius,E.tube,E.segmentsR,E.segmentsT),w.geometries[P]=u;else if("icosahedron"===E.type)u=new THREE.IcosahedronGeometry(E.radius,E.subdivisions),w.geometries[P]=u;else if(E.type in this.geometryHandlerMap){for(m in L={},E)"type"!==m&&"url"!==m&&(L[m]=E[m]);this.geometryHandlerMap[E.type].loaderObject.load(r(E.url,b.urlBaseType),a(P),L)}else"embedded"===E.type&&((L=b.embeds[E.id]).metadata=b.metadata,L&&this.geometryHandlerMap.ascii.loaderObject.createModel(L,h(P),""));for(var D in b.textures)if((P=b.textures[D]).url instanceof Array)for(R+=P.url.length,m=0;m<P.url.length;m++)c.onLoadStart();else R+=1,c.onLoadStart();for(D in H=R,b.textures){if(void 0!==(P=b.textures[D]).mapping&&void 0!==THREE[P.mapping]&&(P.mapping=new THREE[P.mapping]),P.url instanceof Array){for(L=P.url.length,E=[],m=0;m<L;m++)E[m]=r(P.url[m],b.urlBaseType);m=(m=/\.dds$/i.test(E[0]))?THREE.ImageUtils.loadCompressedTextureCube(E,P.mapping,S(L)):THREE.ImageUtils.loadTextureCube(E,P.mapping,S(L))}else m=/\.dds$/i.test(P.url),L=r(P.url,b.urlBaseType),E=S(1),m=m?THREE.ImageUtils.loadCompressedTexture(L,P.mapping,E):THREE.ImageUtils.loadTexture(L,P.mapping,E),void 0!==THREE[P.minFilter]&&(m.minFilter=THREE[P.minFilter]),void 0!==THREE[P.magFilter]&&(m.magFilter=THREE[P.magFilter]),P.anisotropy&&(m.anisotropy=P.anisotropy),P.repeat&&(m.repeat.set(P.repeat[0],P.repeat[1]),1!==P.repeat[0]&&(m.wrapS=THREE.RepeatWrapping),1!==P.repeat[1]&&(m.wrapT=THREE.RepeatWrapping)),P.offset&&m.offset.set(P.offset[0],P.offset[1]),P.wrap&&(void 0!==(L={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping})[P.wrap[0]]&&(m.wrapS=L[P.wrap[0]]),void 0!==L[P.wrap[1]]&&(m.wrapT=L[P.wrap[1]]));w.textures[D]=m}for(M in b.materials){for(A in(D=b.materials[M]).parameters)"envMap"===A||"map"===A||"lightMap"===A||"bumpMap"===A?D.parameters[A]=w.textures[D.parameters[A]]:"shading"===A?D.parameters[A]="flat"===D.parameters[A]?THREE.FlatShading:THREE.SmoothShading:"side"===A?D.parameters[A]="double"==D.parameters[A]?THREE.DoubleSide:"back"==D.parameters[A]?THREE.BackSide:THREE.FrontSide:"blending"===A?D.parameters[A]=D.parameters[A]in THREE?THREE[D.parameters[A]]:THREE.NormalBlending:"combine"===A?D.parameters[A]=D.parameters[A]in THREE?THREE[D.parameters[A]]:THREE.MultiplyOperation:"vertexColors"===A?"face"==D.parameters[A]?D.parameters[A]=THREE.FaceColors:D.parameters[A]&&(D.parameters[A]=THREE.VertexColors):"wrapRGB"===A&&(S=D.parameters[A],D.parameters[A]=new THREE.Vector3(S[0],S[1],S[2]));void 0!==D.parameters.opacity&&1>D.parameters.opacity&&(D.parameters.transparent=!0),D.parameters.normalMap?(S=THREE.ShaderLib.normalmap,P=THREE.UniformsUtils.clone(S.uniforms),m=D.parameters.color,L=D.parameters.specular,E=D.parameters.ambient,C=D.parameters.shininess,P.tNormal.value=w.textures[D.parameters.normalMap],D.parameters.normalScale&&P.uNormalScale.value.set(D.parameters.normalScale[0],D.parameters.normalScale[1]),D.parameters.map&&(P.tDiffuse.value=D.parameters.map,P.enableDiffuse.value=!0),D.parameters.envMap&&(P.tCube.value=D.parameters.envMap,P.enableReflection.value=!0,P.uReflectivity.value=D.parameters.reflectivity),D.parameters.lightMap&&(P.tAO.value=D.parameters.lightMap,P.enableAO.value=!0),D.parameters.specularMap&&(P.tSpecular.value=w.textures[D.parameters.specularMap],P.enableSpecular.value=!0),D.parameters.displacementMap&&(P.tDisplacement.value=w.textures[D.parameters.displacementMap],P.enableDisplacement.value=!0,P.uDisplacementBias.value=D.parameters.displacementBias,P.uDisplacementScale.value=D.parameters.displacementScale),P.uDiffuseColor.value.setHex(m),P.uSpecularColor.value.setHex(L),P.uAmbientColor.value.setHex(E),P.uShininess.value=C,D.parameters.opacity&&(P.uOpacity.value=D.parameters.opacity),f=new THREE.ShaderMaterial({fragmentShader:S.fragmentShader,vertexShader:S.vertexShader,uniforms:P,lights:!0,fog:!0})):f=new THREE[D.type](D.parameters),w.materials[M]=f}for(M in b.materials)if((D=b.materials[M]).parameters.materials){for(A=[],m=0;m<D.parameters.materials.length;m++)A.push(w.materials[D.parameters.materials[m]]);w.materials[M].materials=A}n(),w.cameras&&b.defaults.camera&&(w.currentCamera=w.cameras[b.defaults.camera]),w.fogs&&b.defaults.fog&&(w.scene.fog=w.fogs[b.defaults.fog]),c.callbackSync(w),l()},THREE.TextureLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,i=new Image;i.addEventListener("load",(function(){var e=new THREE.Texture(i);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})}),!1),i.addEventListener("error",(function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})}),!1),t.crossOrigin&&(i.crossOrigin=t.crossOrigin),i.src=e}},THREE.Material=function(){THREE.EventDispatcher.call(this),this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.overdraw=!1,this.needsUpdate=this.visible=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var i=e[t];if(void 0===i)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color&&i instanceof THREE.Color?r.copy(i):r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]=i}}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),void 0===(e=e||{}).depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),
THREE.Texture=function(e,t,i,r,n,o,a,s,h){THREE.EventDispatcher.call(this),this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={data:e,width:t,height:i}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var i,r=this.children.length;for(i=0;i<r;i++)this.children[i].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,i){var r,n,o;if(THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0===i||i,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[],this.geometry&&void 0!==this.geometry.bones){for(e=0;e<this.geometry.bones.length;e++)r=(i=this.geometry.bones[e]).pos,n=i.rotq,o=i.scl,(t=this.addBone()).name=i.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(n[0],n[1],n[2],n[3]),t.useQuaternion=!0,void 0!==o?t.scale.set(o[0],o[1],o[2]):t.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)i=this.geometry.bones[e],t=this.bones[e],-1===i.parent?this.add(t):this.bones[i.parent].add(t);e=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<e?64:64<e?32:16<e?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1);for(var e=0,t=this.children.length;e<t;e++){var i=this.children[e];i instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}if(null==this.boneInverses)for(this.boneInverses=[],e=0,t=this.bones.length;e<t;e++)(i=new THREE.Matrix4).getInverse(this.bones[e].skinMatrix),this.boneInverses.push(i);for(e=0,t=this.bones.length;e<t;e++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();1/0!==i?t.multiplyScalar(i):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,i=e.animations,r=/([a-z]+)(\d+)/,n=0,o=e.morphTargets.length;n<o;n++){var a=e.morphTargets[n].name.match(r);if(a&&1<a.length){i[a=a[1]]||(i[a]={start:1/0,end:-1/0});var s=i[a];n<s.start&&(s.start=n),n>s.end&&(s.end=n),t||(t=a)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:i}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];i?(this.setFrameRange(i.start,i.end),this.duration=(i.end-i.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),(e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1))!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);for(var t=Math.abs(t),i=0;i<this.LODs.length&&!(t<this.LODs[i].visibleAtDistance);i++);this.LODs.splice(i,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(1<this.LODs.length){e.matrixWorldInverse.getInverse(e.matrixWorld),e=-((e=e.matrixWorldInverse).elements[2]*this.matrixWorld.elements[12]+e.elements[6]*this.matrixWorld.elements[13]+e.elements[10]*this.matrixWorld.elements[14]+e.elements[14]),this.LODs[0].object3D.visible=!0;for(var t=1;t<this.LODs.length&&e>=this.LODs[t].visibleAtDistance;t++)this.LODs[t-1].object3D.visible=!1,this.LODs[t].object3D.visible=!0;for(;t<this.LODs.length;t++)this.LODs[t].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else e instanceof THREE.Camera||-1!==(t=this.__objects.indexOf(e))&&(this.__objects.splice(t,1),this.__objectsRemoved.push(e),-1!==(t=this.__objectsAdded.indexOf(e))&&this.__objectsAdded.splice(t,1));for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Fog=function(e,t,i){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e){H!==e&&(H=y.globalAlpha=e)}function i(e){w!==e&&(e===THREE.NormalBlending?y.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?y.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(y.globalCompositeOperation="darker"),w=e)}function r(e){S!==e&&(S=y.lineWidth=e)}function n(e){M!==e&&(M=y.lineCap=e)}function o(e){A!==e&&(A=y.lineJoin=e)}function a(e){_!==e&&(_=y.strokeStyle=e)}function s(e){b!==e&&(b=y.fillStyle=e)}function h(e,t){C===e&&P===t||(y.setLineDash([e,t]),C=e,P=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var l=THREE.Math.smoothstep,e=e||{},c=this,p,u,f,d=new THREE.Projector,E=void 0!==e.canvas?e.canvas:document.createElement("canvas"),m,g,T,v,y=E.getContext("2d"),R=new THREE.Color(0),x=0,H=1,w=0,_=null,b=null,S=null,M=null,A=null,C=null,P=0,L,D,F,U,z=new THREE.RenderableVertex,V=new THREE.RenderableVertex,N,B,O,I,G,k,W,j,X,Y,q,K,Q=new THREE.Color,Z=new THREE.Color,J=new THREE.Color,$=new THREE.Color,ee=new THREE.Color,te=new THREE.Color,ie=new THREE.Color,re=new THREE.Color,ne={},oe={},ae,se,he,le,ce,pe,ue,fe,de,Ee,me=new THREE.Box2,ge=new THREE.Box2,Te=new THREE.Box2,ve=!1,ye=new THREE.Color,Re=new THREE.Color,xe=new THREE.Color,He=new THREE.Vector3,we,_e,be,Se,Me,Ae,Ce=16;(we=document.createElement("canvas")).width=we.height=2,(_e=we.getContext("2d")).fillStyle="rgba(0,0,0,1)",_e.fillRect(0,0,2,2),be=_e.getImageData(0,0,2,2),Se=be.data,(Me=document.createElement("canvas")).width=Me.height=Ce,(Ae=Me.getContext("2d")).translate(-Ce/2,-Ce/2),Ae.scale(Ce,Ce),Ce--,void 0===y.setLineDash&&(y.setLineDash=void 0!==y.mozDash?function(e){y.mozDash=null!==e[0]?e:null}:function(){}),this.domElement=E,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t){m=e*this.devicePixelRatio,g=t*this.devicePixelRatio,T=Math.floor(m/2),v=Math.floor(g/2),E.width=m,E.height=g,E.style.width=e+"px",E.style.height=t+"px",me.set(new THREE.Vector2(-T,-v),new THREE.Vector2(T,v)),ge.set(new THREE.Vector2(-T,-v),new THREE.Vector2(T,v)),H=1,w=0,A=M=S=b=_=null},this.setClearColor=function(e,t){R.copy(e),x=void 0!==t?t:1,ge.set(new THREE.Vector2(-T,-v),new THREE.Vector2(T,v))},this.setClearColorHex=function(e,t){R.setHex(e),x=void 0!==t?t:1,ge.set(new THREE.Vector2(-T,-v),new THREE.Vector2(T,v))},this.getMaxAnisotropy=function(){return 0},this.clear=function(){y.setTransform(1,0,0,-1,T,v),!1===ge.empty()&&(ge.intersect(me),ge.expandByScalar(2),1>x&&y.clearRect(0|ge.min.x,0|ge.min.y,ge.max.x-ge.min.x|0,ge.max.y-ge.min.y|0),0<x&&(i(THREE.NormalBlending),t(1),s("rgba("+Math.floor(255*R.r)+","+Math.floor(255*R.g)+","+Math.floor(255*R.b)+","+x+")"),y.fillRect(0|ge.min.x,0|ge.min.y,ge.max.x-ge.min.x|0,ge.max.y-ge.min.y|0)),ge.makeEmpty())},this.render=function(e,E){function m(e,t,i){for(var r=0,n=f.length;r<n;r++){var o=f[r];if(re.copy(o.color),o instanceof THREE.DirectionalLight){var a=He.getPositionFromMatrix(o.matrixWorld).normalize(),s=t.dot(a);0>=s||(s*=o.intensity,i.add(re.multiplyScalar(s)))}else o instanceof THREE.PointLight&&(a=He.getPositionFromMatrix(o.matrixWorld),0>=(s=t.dot(He.subVectors(a,e).normalize()))||0!=(s*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1))&&(s*=o.intensity,i.add(re.multiplyScalar(s))))}}function g(e,r,n,o,a,s,h,p){c.info.render.vertices+=3,c.info.render.faces++,t(p.opacity),i(p.blending),N=e.positionScreen.x,B=e.positionScreen.y,O=r.positionScreen.x,I=r.positionScreen.y,G=n.positionScreen.x,k=n.positionScreen.y,R(N,B,O,I,G,k),(p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial)&&null===p.map?(te.copy(p.color),ie.copy(p.emissive),p.vertexColors===THREE.FaceColors&&te.multiply(h.color),!0===ve?!1===p.wireframe&&p.shading==THREE.SmoothShading&&3==h.vertexNormalsLength?(Z.copy(ye),J.copy(ye),$.copy(ye),m(h.v1.positionWorld,h.vertexNormalsModel[0],Z),m(h.v2.positionWorld,h.vertexNormalsModel[1],J),m(h.v3.positionWorld,h.vertexNormalsModel[2],$),Z.multiply(te).add(ie),J.multiply(te).add(ie),$.multiply(te).add(ie),ee.addColors(J,$).multiplyScalar(.5),he=S(Z,J,$,ee),b(N,B,O,I,G,k,0,0,1,0,0,1,he)):(Q.copy(ye),m(h.centroidModel,h.normalModel,Q),Q.multiply(te).add(ie),!0===p.wireframe?H(Q,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):w(Q)):!0===p.wireframe?H(p.color,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):w(p.color)):p instanceof THREE.MeshBasicMaterial||p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial?null!==p.map?p.map.mapping instanceof THREE.UVMapping&&(le=h.uvs[0],_(N,B,O,I,G,k,le[o].x,le[o].y,le[a].x,le[a].y,le[s].x,le[s].y,p.map)):null!==p.envMap?p.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(He.copy(h.vertexNormalsModelView[o]),ce=.5*He.x+.5,pe=.5*He.y+.5,He.copy(h.vertexNormalsModelView[a]),ue=.5*He.x+.5,fe=.5*He.y+.5,He.copy(h.vertexNormalsModelView[s]),de=.5*He.x+.5,Ee=.5*He.y+.5,_(N,B,O,I,G,k,ce,pe,ue,fe,de,Ee,p.envMap)):(Q.copy(p.color),p.vertexColors===THREE.FaceColors&&Q.multiply(h.color),!0===p.wireframe?H(Q,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):w(Q)):p instanceof THREE.MeshDepthMaterial?(ae=E.near,se=E.far,Z.r=Z.g=Z.b=1-l(e.positionScreen.z*e.positionScreen.w,ae,se),J.r=J.g=J.b=1-l(r.positionScreen.z*r.positionScreen.w,ae,se),$.r=$.g=$.b=1-l(n.positionScreen.z*n.positionScreen.w,ae,se),ee.addColors(J,$).multiplyScalar(.5),he=S(Z,J,$,ee),b(N,B,O,I,G,k,0,0,1,0,0,1,he)):p instanceof THREE.MeshNormalMaterial&&(p.shading==THREE.FlatShading?(e=h.normalModelView,Q.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),!0===p.wireframe?H(Q,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):w(Q)):p.shading==THREE.SmoothShading&&(e=h.vertexNormalsModelView[o],Z.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),e=h.vertexNormalsModelView[a],J.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),e=h.vertexNormalsModelView[s],$.setRGB(e.x,e.y,e.z).multiplyScalar(.5).addScalar(.5),ee.addColors(J,$).multiplyScalar(.5),he=S(Z,J,$,ee),b(N,B,O,I,G,k,0,0,1,0,0,1,he)))}function R(e,t,i,r,n,o){y.beginPath(),y.moveTo(e,t),y.lineTo(i,r),y.lineTo(n,o),y.closePath()}function x(e,t,i,r,n,o,a,s){y.beginPath(),y.moveTo(e,t),y.lineTo(i,r),y.lineTo(n,o),y.lineTo(a,s),y.closePath()}function H(e,t,i,s){r(t),n(i),o(s),a(e.getStyle()),y.stroke(),Te.expandByScalar(2*t)}function w(e){s(e.getStyle()),y.fill()}function _(e,t,i,r,n,o,a,h,l,c,p,u,f){if(!(f instanceof THREE.DataTexture||void 0===f.image||0==f.image.width)){if(!0===f.needsUpdate){var d=f.wrapS==THREE.RepeatWrapping,E=f.wrapT==THREE.RepeatWrapping;ne[f.id]=y.createPattern(f.image,!0===d&&!0===E?"repeat":!0===d&&!1===E?"repeat-x":!1===d&&!0===E?"repeat-y":"no-repeat"),f.needsUpdate=!1}void 0===ne[f.id]?s("rgba(0,0,0,1)"):s(ne[f.id]);var d=f.offset.x/f.repeat.x,E=f.offset.y/f.repeat.y,m=f.image.width*f.repeat.x,g=f.image.height*f.repeat.y,a,h,i=i-e,r=r-t,n=n-e,o=o-t,l,c,p,u,d;0===(d=(l=(l+d)*m-(a=(a+d)*m))*(u=(1-u+E)*g-(h=(1-h+E)*g))-(p=(p+d)*m-a)*(c=(1-c+E)*g-h))?(void 0===oe[f.id]&&((t=document.createElement("canvas")).width=f.image.width,t.height=f.image.height,(t=t.getContext("2d")).drawImage(f.image,0,0),oe[f.id]=t.getImageData(0,0,f.image.width,f.image.height).data),t=oe[f.id],a=4*(Math.floor(a)+Math.floor(h)*f.image.width),Q.setRGB(t[a]/255,t[a+1]/255,t[a+2]/255),w(Q)):(e=e-(f=(u*i-c*n)*(d=1/d))*a-(i=(l*n-p*i)*d)*h,a=t-(c=(u*r-c*o)*d)*a-(r=(l*o-p*r)*d)*h,y.save(),y.transform(f,c,i,r,e,a),y.fill(),y.restore())}}function b(e,t,i,r,n,o,a,s,h,l,c,p,u){var f,d;f=u.width-1,e=e-(f=((p=p*(d=u.height-1)-(s*=d))*(i-=e)-(l=l*d-s)*(n-=e))*(d=1/((h=h*f-(a*=f))*p-(c=c*f-a)*l)))*a-(i=(h*n-c*i)*d)*s,t=t-(l=(p*(r-=t)-l*(o-=t))*d)*a-(r=(h*o-c*r)*d)*s,y.save(),y.transform(f,l,i,r,e,t),y.clip(),y.drawImage(u,0,0),y.restore()}function S(e,t,i,r){return Se[0]=255*e.r|0,Se[1]=255*e.g|0,Se[2]=255*e.b|0,Se[4]=255*t.r|0,Se[5]=255*t.g|0,Se[6]=255*t.b|0,Se[8]=255*i.r|0,Se[9]=255*i.g|0,Se[10]=255*i.b|0,Se[12]=255*r.r|0,Se[13]=255*r.g|0,Se[14]=255*r.b|0,_e.putImageData(be,0,0),Ae.drawImage(we,0,0),Me}function M(e,t){var i=t.x-e.x,r=t.y-e.y,n=i*i+r*r;0!==n&&(i*=n=1/Math.sqrt(n),r*=n,t.x+=i,t.y+=r,e.x-=i,e.y-=r)}if(!1==E instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{if(!0===this.autoClear&&this.clear(),y.setTransform(1,0,0,-1,T,v),c.info.render.vertices=0,c.info.render.faces=0,p=d.projectScene(e,E,this.sortObjects,this.sortElements),u=p.elements,f=p.lights,!0===(ve=0<f.length)){ye.setRGB(0,0,0),Re.setRGB(0,0,0),xe.setRGB(0,0,0);for(var A=0,C=f.length;A<C;A++){var P,Ce=(P=f[A]).color;P instanceof THREE.AmbientLight?ye.add(Ce):P instanceof THREE.DirectionalLight?Re.add(Ce):P instanceof THREE.PointLight&&xe.add(Ce)}}for(A=0,C=u.length;A<C;A++){var Pe=u[A],P;if(void 0!==(P=Pe.material)&&!1!==P.visible){if(Te.makeEmpty(),Pe instanceof THREE.RenderableParticle){(L=Pe).x*=T,L.y*=v;var Ce=L,Le=Pe;t(P.opacity),i(P.blending);var De=void 0,Fe=void 0,Ue=void 0,ze=void 0,Ve=Pe=void 0,Ne=void 0;P instanceof THREE.ParticleBasicMaterial?null===P.map?(Ue=Le.object.scale.x,ze=Le.object.scale.y,Ue*=Le.scale.x*T,ze*=Le.scale.y*v,Te.min.set(Ce.x-Ue,Ce.y-ze),Te.max.set(Ce.x+Ue,Ce.y+ze),!1!==me.isIntersectionBox(Te)&&(s(P.color.getStyle()),y.save(),y.translate(Ce.x,Ce.y),y.rotate(-Le.rotation),y.scale(Ue,ze),y.fillRect(-1,-1,2,2),y.restore())):(Ve=(Pe=P.map.image).width>>1,Ne=Pe.height>>1,De=(Ue=Le.scale.x*T)*Ve,Fe=(ze=Le.scale.y*v)*Ne,Te.min.set(Ce.x-De,Ce.y-Fe),Te.max.set(Ce.x+De,Ce.y+Fe),!1!==me.isIntersectionBox(Te)&&(y.save(),y.translate(Ce.x,Ce.y),y.rotate(-Le.rotation),y.scale(Ue,-ze),y.translate(-Ve,-Ne),y.drawImage(Pe,0,0),y.restore())):P instanceof THREE.ParticleCanvasMaterial&&(De=Le.scale.x*T,Fe=Le.scale.y*v,Te.min.set(Ce.x-De,Ce.y-Fe),Te.max.set(Ce.x+De,Ce.y+Fe),!1!==me.isIntersectionBox(Te)&&(a(P.color.getStyle()),s(P.color.getStyle()),y.save(),y.translate(Ce.x,Ce.y),y.rotate(-Le.rotation),y.scale(De,Fe),P.program(y),y.restore()))}else if(Pe instanceof THREE.RenderableLine)L=Pe.v1,D=Pe.v2,L.positionScreen.x*=T,L.positionScreen.y*=v,D.positionScreen.x*=T,D.positionScreen.y*=v,Te.setFromPoints([L.positionScreen,D.positionScreen]),!0===me.isIntersectionBox(Te)&&(Ce=L,Le=D,t(P.opacity),i(P.blending),y.beginPath(),y.moveTo(Ce.positionScreen.x,Ce.positionScreen.y),y.lineTo(Le.positionScreen.x,Le.positionScreen.y),P instanceof THREE.LineBasicMaterial?(r(P.linewidth),n(P.linecap),o(P.linejoin),a(P.color.getStyle()),h(null,null),y.stroke(),Te.expandByScalar(2*P.linewidth)):P instanceof THREE.LineDashedMaterial&&(r(P.linewidth),n(P.linecap),o(P.linejoin),a(P.color.getStyle()),h(P.dashSize,P.gapSize),y.stroke(),Te.expandByScalar(2*P.linewidth)));else if(Pe instanceof THREE.RenderableFace3){if(L=Pe.v1,D=Pe.v2,F=Pe.v3,-1>L.positionScreen.z||1<L.positionScreen.z)continue;if(-1>D.positionScreen.z||1<D.positionScreen.z)continue;if(-1>F.positionScreen.z||1<F.positionScreen.z)continue;L.positionScreen.x*=T,L.positionScreen.y*=v,D.positionScreen.x*=T,D.positionScreen.y*=v,F.positionScreen.x*=T,F.positionScreen.y*=v,!0===P.overdraw&&(M(L.positionScreen,D.positionScreen),M(D.positionScreen,F.positionScreen),M(F.positionScreen,L.positionScreen)),Te.setFromPoints([L.positionScreen,D.positionScreen,F.positionScreen]),g(L,D,F,0,1,2,Pe,P)}else if(Pe instanceof THREE.RenderableFace4){if(L=Pe.v1,D=Pe.v2,F=Pe.v3,U=Pe.v4,-1>L.positionScreen.z||1<L.positionScreen.z)continue;if(-1>D.positionScreen.z||1<D.positionScreen.z)continue;if(-1>F.positionScreen.z||1<F.positionScreen.z)continue;if(-1>U.positionScreen.z||1<U.positionScreen.z)continue;L.positionScreen.x*=T,L.positionScreen.y*=v,D.positionScreen.x*=T,D.positionScreen.y*=v,F.positionScreen.x*=T,F.positionScreen.y*=v,U.positionScreen.x*=T,U.positionScreen.y*=v,z.positionScreen.copy(D.positionScreen),V.positionScreen.copy(U.positionScreen),!0===P.overdraw&&(M(L.positionScreen,D.positionScreen),M(D.positionScreen,U.positionScreen),M(U.positionScreen,L.positionScreen),M(F.positionScreen,z.positionScreen),M(F.positionScreen,V.positionScreen)),Te.setFromPoints([L.positionScreen,D.positionScreen,F.positionScreen,U.positionScreen]),Ce=L,Le=D,De=F,Fe=U,Ue=z,ze=V,c.info.render.vertices+=4,c.info.render.faces++,t(P.opacity),i(P.blending),void 0!==P.map&&null!==P.map||void 0!==P.envMap&&null!==P.envMap?(g(Ce,Le,Fe,0,1,3,Pe,P),g(Ue,De,ze,1,2,3,Pe,P)):(N=Ce.positionScreen.x,B=Ce.positionScreen.y,O=Le.positionScreen.x,I=Le.positionScreen.y,G=De.positionScreen.x,k=De.positionScreen.y,W=Fe.positionScreen.x,j=Fe.positionScreen.y,X=Ue.positionScreen.x,Y=Ue.positionScreen.y,q=ze.positionScreen.x,K=ze.positionScreen.y,P instanceof THREE.MeshLambertMaterial||P instanceof THREE.MeshPhongMaterial?(te.copy(P.color),ie.copy(P.emissive),P.vertexColors===THREE.FaceColors&&te.multiply(Pe.color),!0===ve?!1===P.wireframe&&P.shading==THREE.SmoothShading&&4==Pe.vertexNormalsLength?(Z.copy(ye),J.copy(ye),$.copy(ye),ee.copy(ye),m(Pe.v1.positionWorld,Pe.vertexNormalsModel[0],Z),m(Pe.v2.positionWorld,Pe.vertexNormalsModel[1],J),m(Pe.v4.positionWorld,Pe.vertexNormalsModel[3],$),m(Pe.v3.positionWorld,Pe.vertexNormalsModel[2],ee),Z.multiply(te).add(ie),J.multiply(te).add(ie),$.multiply(te).add(ie),ee.multiply(te).add(ie),he=S(Z,J,$,ee),R(N,B,O,I,W,j),b(N,B,O,I,W,j,0,0,1,0,0,1,he),R(X,Y,G,k,q,K),b(X,Y,G,k,q,K,1,0,1,1,0,1,he)):(Q.copy(ye),m(Pe.centroidModel,Pe.normalModel,Q),Q.multiply(te).add(ie),x(N,B,O,I,G,k,W,j),!0===P.wireframe?H(Q,P.wireframeLinewidth,P.wireframeLinecap,P.wireframeLinejoin):w(Q)):(Q.addColors(te,ie),x(N,B,O,I,G,k,W,j),!0===P.wireframe?H(Q,P.wireframeLinewidth,P.wireframeLinecap,P.wireframeLinejoin):w(Q))):P instanceof THREE.MeshBasicMaterial?(Q.copy(P.color),P.vertexColors===THREE.FaceColors&&Q.multiply(Pe.color),x(N,B,O,I,G,k,W,j),!0===P.wireframe?H(Q,P.wireframeLinewidth,P.wireframeLinecap,P.wireframeLinejoin):w(Q)):P instanceof THREE.MeshNormalMaterial?(Ce=void 0,P.shading==THREE.FlatShading?(Ce=Pe.normalModelView,Q.setRGB(Ce.x,Ce.y,Ce.z).multiplyScalar(.5).addScalar(.5),x(N,B,O,I,G,k,W,j),!0===P.wireframe?H(Q,P.wireframeLinewidth,P.wireframeLinecap,P.wireframeLinejoin):w(Q)):P.shading==THREE.SmoothShading&&(Ce=Pe.vertexNormalsModelView[0],Z.setRGB(Ce.x,Ce.y,Ce.z).multiplyScalar(.5).addScalar(.5),Ce=Pe.vertexNormalsModelView[1],J.setRGB(Ce.x,Ce.y,Ce.z).multiplyScalar(.5).addScalar(.5),Ce=Pe.vertexNormalsModelView[3],$.setRGB(Ce.x,Ce.y,Ce.z).multiplyScalar(.5).addScalar(.5),Ce=Pe.vertexNormalsModelView[2],ee.setRGB(Ce.x,Ce.y,Ce.z).multiplyScalar(.5).addScalar(.5),he=S(Z,J,$,ee),R(N,B,O,I,W,j),b(N,B,O,I,W,j,0,0,1,0,0,1,he),R(X,Y,G,k,q,K),b(X,Y,G,k,q,K,1,0,1,1,0,1,he))):P instanceof THREE.MeshDepthMaterial&&(ae=E.near,se=E.far,Z.r=Z.g=Z.b=1-l(Ce.positionScreen.z*Ce.positionScreen.w,ae,se),J.r=J.g=J.b=1-l(Le.positionScreen.z*Le.positionScreen.w,ae,se),$.r=$.g=$.b=1-l(Fe.positionScreen.z*Fe.positionScreen.w,ae,se),ee.r=ee.g=ee.b=1-l(De.positionScreen.z*De.positionScreen.w,ae,se),he=S(Z,J,$,ee),R(N,B,O,I,W,j),b(N,B,O,I,W,j,0,0,1,0,0,1,he),R(X,Y,G,k,q,K),b(X,Y,G,k,q,K,1,0,1,1,0,1,he)))}ge.union(Te)}}y.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,i,r,n={};for(t=0;t<e.length;t++)for(i in r=this.clone(e[t]))n[i]=r[i];return n},clone:function(e){var t,i,r,n={};for(t in e)for(i in n[t]={},e[t])r=e[t][i],n[t][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{
type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)_e.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function i(e,t){var i=e.vertices.length,r=t.material;if(r.attributes)for(var n in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),r.attributes){var o=r.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(i*a),o.buffer=_e.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}function r(e,t){var i=t.geometry,r=e.faces3,s=e.faces4,h=3*r.length+4*s.length,l=1*r.length+2*s.length,s=3*r.length+4*s.length,r,c=a(r=n(t,e)),p=o(r),u=!!r.vertexColors&&r.vertexColors;if(e.__vertexArray=new Float32Array(3*h),p&&(e.__normalArray=new Float32Array(3*h)),i.hasTangents&&(e.__tangentArray=new Float32Array(4*h)),u&&(e.__colorArray=new Float32Array(3*h)),c&&((0<i.faceUvs.length||0<i.faceVertexUvs.length)&&(e.__uvArray=new Float32Array(2*h)),(1<i.faceUvs.length||1<i.faceVertexUvs.length)&&(e.__uv2Array=new Float32Array(2*h))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*h),e.__skinWeightArray=new Float32Array(4*h)),e.__faceArray=new Uint16Array(3*l),e.__lineArray=new Uint16Array(2*s),e.numMorphTargets)for(e.__morphTargetsArrays=[],i=0,c=e.numMorphTargets;i<c;i++)e.__morphTargetsArrays.push(new Float32Array(3*h));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],i=0,c=e.numMorphNormals;i<c;i++)e.__morphNormalsArrays.push(new Float32Array(3*h));if(e.__webglFaceCount=3*l,e.__webglLineCount=2*s,r.attributes)for(var f in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),r.attributes){var l=r.attributes[f],i={},d;for(d in l)i[d]=l[d];i.__webglInitialized&&!i.createUniqueBuffers||(i.__webglInitialized=!0,s=1,"v2"===i.type?s=2:"v3"===i.type?s=3:"v4"===i.type?s=4:"c"===i.type&&(s=3),i.size=s,i.array=new Float32Array(h*s),i.buffer=_e.createBuffer(),i.buffer.belongsToAttribute=f,l.needsUpdate=!0,i.__original=l),e.__webglCustomAttributesList.push(i)}e.__inittedArrays=!0}function n(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function o(e){return!(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial)&&(e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading)}function a(e){return!!(e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial)}function s(e){var t,i,r;for(t in e.attributes)r="index"===t?_e.ELEMENT_ARRAY_BUFFER:_e.ARRAY_BUFFER,(i=e.attributes[t]).buffer=_e.createBuffer(),_e.bindBuffer(r,i.buffer),_e.bufferData(r,i.array,_e.STATIC_DRAW)}function h(e,t,i){var r,n=(r=e.attributes).index,o=r.position,a=r.normal,s=r.uv,h=r.color,r=r.tangent;if(e.elementsNeedUpdate&&void 0!==n&&(_e.bindBuffer(_e.ELEMENT_ARRAY_BUFFER,n.buffer),_e.bufferData(_e.ELEMENT_ARRAY_BUFFER,n.array,t)),e.verticesNeedUpdate&&void 0!==o&&(_e.bindBuffer(_e.ARRAY_BUFFER,o.buffer),_e.bufferData(_e.ARRAY_BUFFER,o.array,t)),e.normalsNeedUpdate&&void 0!==a&&(_e.bindBuffer(_e.ARRAY_BUFFER,a.buffer),_e.bufferData(_e.ARRAY_BUFFER,a.array,t)),e.uvsNeedUpdate&&void 0!==s&&(_e.bindBuffer(_e.ARRAY_BUFFER,s.buffer),_e.bufferData(_e.ARRAY_BUFFER,s.array,t)),e.colorsNeedUpdate&&void 0!==h&&(_e.bindBuffer(_e.ARRAY_BUFFER,h.buffer),_e.bufferData(_e.ARRAY_BUFFER,h.array,t)),e.tangentsNeedUpdate&&void 0!==r&&(_e.bindBuffer(_e.ARRAY_BUFFER,r.buffer),_e.bufferData(_e.ARRAY_BUFFER,r.array,t)),i)for(var l in e.attributes)delete e.attributes[l].array}function l(e){ge[e]||(_e.enableVertexAttribArray(e),ge[e]=!0)}function c(){for(var e in ge)ge[e]&&(_e.disableVertexAttribArray(e),ge[e]=!1)}function p(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function u(e,t){return t[0]-e[0]}function f(e,t,i){if(e.length)for(var r=0,n=e.length;r<n;r++)Q=X=null,q=K=ee=$=ae=oe=te=-1,He=!0,e[r].render(t,i,Ee,me),Q=X=null,q=K=ee=$=ae=oe=te=-1,He=!0}function d(e,t,i,r,n,o,a,s){var h,l,c,p;t?(l=e.length-1,p=t=-1):(l=0,t=e.length,p=1);for(var u=l;u!==t;u+=p)if((h=e[u]).render){if(l=h.object,c=h.buffer,s)h=s;else{if(!(h=h[i]))continue;a&&k.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),k.setDepthTest(h.depthTest),k.setDepthWrite(h.depthWrite),S(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}k.setMaterialFaces(h),c instanceof THREE.BufferGeometry?k.renderBufferDirect(r,n,o,h,c,l):k.renderBuffer(r,n,o,h,c,l)}}function E(e,t,i,r,n,o,a){for(var s,h,l=0,c=e.length;l<c;l++)if((h=(s=e[l]).object).visible){if(a)s=a;else{if(!(s=s[t]))continue;o&&k.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),k.setDepthTest(s.depthTest),k.setDepthWrite(s.depthWrite),S(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}k.renderImmediateObject(i,r,n,s,h)}}function m(e,t,i){e.push({buffer:t,object:i,opaque:null,transparent:null})}function g(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function T(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function v(e,t){for(var i=e.length-1;0<=i;i--)e[i].object===t&&e.splice(i,1)}function y(e,t){for(var i=e.length-1;0<=i;i--)e[i]===t&&e.splice(i,1)}function R(e,t,i,r,n){J=0,r.needsUpdate&&(r.program&&Xe(r),k.initMaterial(r,t,i,n),r.needsUpdate=!1),r.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(k.maxMorphTargets));var o=!1,a=r.program,s=a.uniforms,h=r.uniforms;if(a!==X&&(_e.useProgram(a),X=a,o=!0),r.id!==q&&(q=r.id,o=!0),(o||e!==Q)&&(_e.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==Q&&(Q=e)),r.skinning)if(Ue&&n.useVertexTexture){if(null!==s.boneTexture){var l=x();_e.uniform1i(s.boneTexture,l),k.setTexture(n.boneTexture,l)}}else null!==s.boneGlobalMatrices&&_e.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.boneMatrices);if(o){if(i&&r.fog&&(h.fogColor.value=i.color,i instanceof THREE.Fog?(h.fogNear.value=i.near,h.fogFar.value=i.far):i instanceof THREE.FogExp2&&(h.fogDensity.value=i.density)),r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(He){
for(var c,p=l=0,u=0,f,d,E,m=we,g=m.directional.colors,T=m.directional.positions,v=m.point.colors,y=m.point.positions,R=m.point.distances,H=m.spot.colors,b=m.spot.positions,S=m.spot.distances,M=m.spot.directions,A=m.spot.anglesCos,P=m.spot.exponents,L=m.hemi.skyColors,U=m.hemi.groundColors,z=m.hemi.positions,V=0,N=0,B=0,O=0,I=0,G=0,W=0,j=0,Y=c=0,i=E=Y=0,o=t.length;i<o;i++)(c=t[i]).onlyShadow||(f=c.color,d=c.intensity,E=c.distance,c instanceof THREE.AmbientLight?c.visible&&(k.gammaInput?(l+=f.r*f.r,p+=f.g*f.g,u+=f.b*f.b):(l+=f.r,p+=f.g,u+=f.b)):c instanceof THREE.DirectionalLight?(I+=1,c.visible&&(xe.getPositionFromMatrix(c.matrixWorld),Re.getPositionFromMatrix(c.target.matrixWorld),xe.sub(Re),xe.normalize(),0===xe.x&&0===xe.y&&0===xe.z||(T[c=3*V]=xe.x,T[c+1]=xe.y,T[c+2]=xe.z,k.gammaInput?w(g,c,f,d*d):_(g,c,f,d),V+=1))):c instanceof THREE.PointLight?(G+=1,c.visible&&(Y=3*N,k.gammaInput?w(v,Y,f,d*d):_(v,Y,f,d),Re.getPositionFromMatrix(c.matrixWorld),y[Y]=Re.x,y[Y+1]=Re.y,y[Y+2]=Re.z,R[N]=E,N+=1)):c instanceof THREE.SpotLight?(W+=1,c.visible&&(Y=3*B,k.gammaInput?w(H,Y,f,d*d):_(H,Y,f,d),Re.getPositionFromMatrix(c.matrixWorld),b[Y]=Re.x,b[Y+1]=Re.y,b[Y+2]=Re.z,S[B]=E,xe.copy(Re),Re.getPositionFromMatrix(c.target.matrixWorld),xe.sub(Re),xe.normalize(),M[Y]=xe.x,M[Y+1]=xe.y,M[Y+2]=xe.z,A[B]=Math.cos(c.angle),P[B]=c.exponent,B+=1)):c instanceof THREE.HemisphereLight&&(j+=1,c.visible&&(xe.getPositionFromMatrix(c.matrixWorld),xe.normalize(),0===xe.x&&0===xe.y&&0===xe.z||(z[E=3*O]=xe.x,z[E+1]=xe.y,z[E+2]=xe.z,f=c.color,c=c.groundColor,k.gammaInput?(w(L,E,f,d*=d),w(U,E,c,d)):(_(L,E,f,d),_(U,E,c,d)),O+=1))));for(i=3*V,o=Math.max(g.length,3*I);i<o;i++)g[i]=0;for(i=3*N,o=Math.max(v.length,3*G);i<o;i++)v[i]=0;for(i=3*B,o=Math.max(H.length,3*W);i<o;i++)H[i]=0;for(i=3*O,o=Math.max(L.length,3*j);i<o;i++)L[i]=0;for(i=3*O,o=Math.max(U.length,3*j);i<o;i++)U[i]=0;m.directional.length=V,m.point.length=N,m.spot.length=B,m.hemi.length=O,m.ambient[0]=l,m.ambient[1]=p,m.ambient[2]=u,He=!1}i=we,h.ambientLightColor.value=i.ambient,h.directionalLightColor.value=i.directional.colors,h.directionalLightDirection.value=i.directional.positions,h.pointLightColor.value=i.point.colors,h.pointLightPosition.value=i.point.positions,h.pointLightDistance.value=i.point.distances,h.spotLightColor.value=i.spot.colors,h.spotLightPosition.value=i.spot.positions,h.spotLightDistance.value=i.spot.distances,h.spotLightDirection.value=i.spot.directions,h.spotLightAngleCos.value=i.spot.anglesCos,h.spotLightExponent.value=i.spot.exponents,h.hemisphereLightSkyColor.value=i.hemi.skyColors,h.hemisphereLightGroundColor.value=i.hemi.groundColors,h.hemisphereLightDirection.value=i.hemi.positions}var K;if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial)h.opacity.value=r.opacity,k.gammaInput?h.diffuse.value.copyGammaToLinear(r.color):h.diffuse.value=r.color,h.map.value=r.map,h.lightMap.value=r.lightMap,h.specularMap.value=r.specularMap,r.bumpMap&&(h.bumpMap.value=r.bumpMap,h.bumpScale.value=r.bumpScale),r.normalMap&&(h.normalMap.value=r.normalMap,h.normalScale.value.copy(r.normalScale)),r.map?K=r.map:r.specularMap?K=r.specularMap:r.normalMap?K=r.normalMap:r.bumpMap&&(K=r.bumpMap),void 0!==K&&(i=K.offset,K=K.repeat,h.offsetRepeat.value.set(i.x,i.y,K.x,K.y)),h.envMap.value=r.envMap,h.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,h.reflectivity.value=r.reflectivity,h.refractionRatio.value=r.refractionRatio,h.combine.value=r.combine,h.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping;if(r instanceof THREE.LineBasicMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity,h.dashSize.value=r.dashSize,h.totalSize.value=r.dashSize+r.gapSize,h.scale.value=r.scale):r instanceof THREE.ParticleBasicMaterial?(h.psColor.value=r.color,h.opacity.value=r.opacity,h.size.value=r.size,h.scale.value=F.height/2,h.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(h.shininess.value=r.shininess,k.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive),h.specular.value.copyGammaToLinear(r.specular)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive,h.specular.value=r.specular),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(k.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(h.opacity.value=r.opacity),n.receiveShadow&&!r._shadowPass&&h.shadowMatrix)for(i=K=0,o=t.length;i<o;i++)(l=t[i]).castShadow&&(l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight&&!l.shadowCascade)&&(h.shadowMap.value[K]=l.shadowMap,h.shadowMapSize.value[K]=l.shadowMapSize,h.shadowMatrix.value[K]=l.shadowMatrix,h.shadowDarkness.value[K]=l.shadowDarkness,h.shadowBias.value[K]=l.shadowBias,K++);for(h=0,K=(t=r.uniformsList).length;h<K;h++)if(o=a.uniforms[t[h][1]])if(p=(i=t[h][0]).type,l=i.value,"i"===p)_e.uniform1i(o,l);else if("f"===p)_e.uniform1f(o,l);else if("v2"===p)_e.uniform2f(o,l.x,l.y);else if("v3"===p)_e.uniform3f(o,l.x,l.y,l.z);else if("v4"===p)_e.uniform4f(o,l.x,l.y,l.z,l.w);else if("c"===p)_e.uniform3f(o,l.r,l.g,l.b);else if("iv1"===p)_e.uniform1iv(o,l);else if("iv"===p)_e.uniform3iv(o,l);else if("fv1"===p)_e.uniform1fv(o,l);else if("fv"===p)_e.uniform3fv(o,l);else if("v2v"===p){for(void 0===i._array&&(i._array=new Float32Array(2*l.length)),p=0,u=l.length;p<u;p++)m=2*p,i._array[m]=l[p].x,i._array[m+1]=l[p].y;_e.uniform2fv(o,i._array)}else if("v3v"===p){for(void 0===i._array&&(i._array=new Float32Array(3*l.length)),p=0,u=l.length;p<u;p++)m=3*p,i._array[m]=l[p].x,i._array[m+1]=l[p].y,i._array[m+2]=l[p].z;_e.uniform3fv(o,i._array)}else if("v4v"===p){for(void 0===i._array&&(i._array=new Float32Array(4*l.length)),p=0,u=l.length;p<u;p++)m=4*p,i._array[m]=l[p].x,i._array[m+1]=l[p].y,i._array[m+2]=l[p].z,i._array[m+3]=l[p].w;_e.uniform4fv(o,i._array)}else if("m4"===p)void 0===i._array&&(i._array=new Float32Array(16)),l.flattenToArray(i._array),_e.uniformMatrix4fv(o,!1,i._array);else if("m4v"===p){for(void 0===i._array&&(i._array=new Float32Array(16*l.length)),p=0,u=l.length;p<u;p++)l[p].flattenToArrayOffset(i._array,16*p);_e.uniformMatrix4fv(o,!1,i._array)}else if("t"===p){if(m=l,l=x(),_e.uniform1i(o,l),m)if(m.image instanceof Array&&6===m.image.length){if(o=l,6===(i=m).image.length)if(i.needsUpdate){for(i.image.__webglTextureCube||(i.image.__webglTextureCube=_e.createTexture(),k.info.memory.textures++),_e.activeTexture(_e.TEXTURE0+o),_e.bindTexture(_e.TEXTURE_CUBE_MAP,i.image.__webglTextureCube),_e.pixelStorei(_e.UNPACK_FLIP_Y_WEBGL,i.flipY),o=i instanceof THREE.CompressedTexture,l=[],p=0;6>p;p++)k.autoScaleCubemaps&&!o?(u=l,m=p,g=i.image[p],v=Le,g.width<=v&&g.height<=v||(y=Math.max(g.width,g.height),T=Math.floor(g.width*v/y),v=Math.floor(g.height*v/y),(y=document.createElement("canvas")).width=T,y.height=v,y.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,T,v),g=y),u[m]=g):l[p]=i.image[p];for(u=0==((p=l[0]).width&p.width-1)&&0==(p.height&p.height-1),m=D(i.format),g=D(i.type),C(_e.TEXTURE_CUBE_MAP,i,u),p=0;6>p;p++)if(o)for(y=0,R=(v=l[p].mipmaps).length;y<R;y++)T=v[y],_e.compressedTexImage2D(_e.TEXTURE_CUBE_MAP_POSITIVE_X+p,y,m,T.width,T.height,0,T.data);else _e.texImage2D(_e.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,m,m,g,l[p]);i.generateMipmaps&&u&&_e.generateMipmap(_e.TEXTURE_CUBE_MAP),i.needsUpdate=!1,i.onUpdate&&i.onUpdate()}else _e.activeTexture(_e.TEXTURE0+o),_e.bindTexture(_e.TEXTURE_CUBE_MAP,i.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(i=m,_e.activeTexture(_e.TEXTURE0+l),_e.bindTexture(_e.TEXTURE_CUBE_MAP,i.__webglTexture)):k.setTexture(m,l)}else if("tv"===p){for(void 0===i._array&&(i._array=[]),p=0,u=i.value.length;p<u;p++)i._array[p]=x();for(_e.uniform1iv(o,i._array),p=0,u=i.value.length;p<u;p++)m=i.value[p],l=i._array[p],m&&k.setTexture(m,l)}(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==s.cameraPosition&&(Re.getPositionFromMatrix(e.matrixWorld),_e.uniform3f(s.cameraPosition,Re.x,Re.y,Re.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==s.viewMatrix&&_e.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return _e.uniformMatrix4fv(s.modelViewMatrix,!1,n._modelViewMatrix.elements),s.normalMatrix&&_e.uniformMatrix3fv(s.normalMatrix,!1,n._normalMatrix.elements),null!==s.modelMatrix&&_e.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),a}function x(){var e=J;return e>=Ce&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Ce),J+=1,e}function H(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function w(e,t,i,r){e[t]=i.r*i.r*r,e[t+1]=i.g*i.g*r,e[t+2]=i.b*i.b*r}function _(e,t,i,r){e[t]=i.r*r,e[t+1]=i.g*r,e[t+2]=i.b*r}function b(e){e!==ce&&(_e.lineWidth(e),ce=e)}function S(e,t,i){se!==e&&(e?_e.enable(_e.POLYGON_OFFSET_FILL):_e.disable(_e.POLYGON_OFFSET_FILL),se=e),!e||he===t&&le===i||(_e.polygonOffset(t,i),he=t,le=i)}function M(e){for(var e,t=0,i=(e=e.split("\n")).length;t<i;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function A(e,t){var i;return"fragment"===e?i=_e.createShader(_e.FRAGMENT_SHADER):"vertex"===e&&(i=_e.createShader(_e.VERTEX_SHADER)),_e.shaderSource(i,t),_e.compileShader(i),_e.getShaderParameter(i,_e.COMPILE_STATUS)?i:(console.error(_e.getShaderInfoLog(i)),console.error(M(t)),null)}function C(e,t,i){i?(_e.texParameteri(e,_e.TEXTURE_WRAP_S,D(t.wrapS)),_e.texParameteri(e,_e.TEXTURE_WRAP_T,D(t.wrapT)),_e.texParameteri(e,_e.TEXTURE_MAG_FILTER,D(t.magFilter)),_e.texParameteri(e,_e.TEXTURE_MIN_FILTER,D(t.minFilter))):(_e.texParameteri(e,_e.TEXTURE_WRAP_S,_e.CLAMP_TO_EDGE),_e.texParameteri(e,_e.TEXTURE_WRAP_T,_e.CLAMP_TO_EDGE),_e.texParameteri(e,_e.TEXTURE_MAG_FILTER,L(t.magFilter)),_e.texParameteri(e,_e.TEXTURE_MIN_FILTER,L(t.minFilter))),Me&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(_e.texParameterf(e,Me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,De)),t.__oldAnisotropy=t.anisotropy)}function P(e,t){_e.bindRenderbuffer(_e.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(_e.renderbufferStorage(_e.RENDERBUFFER,_e.DEPTH_COMPONENT16,t.width,t.height),_e.framebufferRenderbuffer(_e.FRAMEBUFFER,_e.DEPTH_ATTACHMENT,_e.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(_e.renderbufferStorage(_e.RENDERBUFFER,_e.DEPTH_STENCIL,t.width,t.height),_e.framebufferRenderbuffer(_e.FRAMEBUFFER,_e.DEPTH_STENCIL_ATTACHMENT,_e.RENDERBUFFER,e)):_e.renderbufferStorage(_e.RENDERBUFFER,_e.RGBA4,t.width,t.height)}function L(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?_e.NEAREST:_e.LINEAR}function D(e){if(e===THREE.RepeatWrapping)return _e.REPEAT;if(e===THREE.ClampToEdgeWrapping)return _e.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return _e.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return _e.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return _e.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return _e.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return _e.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return _e.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return _e.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return _e.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return _e.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return _e.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return _e.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return _e.BYTE;if(e===THREE.ShortType)return _e.SHORT;if(e===THREE.UnsignedShortType)return _e.UNSIGNED_SHORT;if(e===THREE.IntType)return _e.INT;if(e===THREE.UnsignedIntType)return _e.UNSIGNED_INT;if(e===THREE.FloatType)return _e.FLOAT;if(e===THREE.AlphaFormat)return _e.ALPHA;if(e===THREE.RGBFormat)return _e.RGB;if(e===THREE.RGBAFormat)return _e.RGBA;if(e===THREE.LuminanceFormat)return _e.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return _e.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return _e.FUNC_ADD;if(e===THREE.SubtractEquation)return _e.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return _e.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return _e.ZERO;if(e===THREE.OneFactor)return _e.ONE;if(e===THREE.SrcColorFactor)return _e.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return _e.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return _e.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return _e.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return _e.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return _e.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return _e.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return _e.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return _e.SRC_ALPHA_SATURATE;if(void 0!==Ae){if(e===THREE.RGB_S3TC_DXT1_Format)return Ae.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return Ae.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return Ae.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return Ae.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var e,F=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),U=void 0!==e.precision?e.precision:"highp",z=void 0===e.alpha||e.alpha,V=void 0===e.premultipliedAlpha||e.premultipliedAlpha,N=void 0!==e.antialias&&e.antialias,B=void 0===e.stencil||e.stencil,O=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,I=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),G=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=F,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var k=this,W=[],j=0,X=null,Y=null,q=-1,K=null,Q=null,Z=0,J=0,$=-1,ee=-1,te=-1,ie=-1,re=-1,ne=-1,oe=-1,ae=-1,se=null,he=null,le=null,ce=null,pe=0,ue=0,fe=0,de=0,Ee=0,me=0,ge={},Te=new THREE.Frustum,ve=new THREE.Matrix4,ye=new THREE.Matrix4,Re=new THREE.Vector3,xe=new THREE.Vector3,He=!0,we={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},_e,be,Se,Me,Ae;try{if(!(_e=F.getContext("experimental-webgl",{alpha:z,premultipliedAlpha:V,antialias:N,stencil:B,preserveDrawingBuffer:O})))throw"Error creating WebGL context."}catch(e){console.error(e)}be=_e.getExtension("OES_texture_float"),Se=_e.getExtension("OES_standard_derivatives"),Me=_e.getExtension("EXT_texture_filter_anisotropic")||_e.getExtension("MOZ_EXT_texture_filter_anisotropic")||_e.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Ae=_e.getExtension("WEBGL_compressed_texture_s3tc")||_e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||_e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),be||console.log("THREE.WebGLRenderer: Float textures not supported."),Se||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),Me||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),Ae||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===_e.getShaderPrecisionFormat&&(_e.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),_e.clearColor(0,0,0,1),_e.clearDepth(1),_e.clearStencil(0),_e.enable(_e.DEPTH_TEST),_e.depthFunc(_e.LEQUAL),_e.frontFace(_e.CCW),_e.cullFace(_e.BACK),_e.enable(_e.CULL_FACE),_e.enable(_e.BLEND),_e.blendEquation(_e.FUNC_ADD),_e.blendFunc(_e.SRC_ALPHA,_e.ONE_MINUS_SRC_ALPHA),_e.clearColor(I.r,I.g,I.b,G),this.context=_e;var Ce=_e.getParameter(_e.MAX_TEXTURE_IMAGE_UNITS),Pe=_e.getParameter(_e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);_e.getParameter(_e.MAX_TEXTURE_SIZE);var Le=_e.getParameter(_e.MAX_CUBE_MAP_TEXTURE_SIZE),De=Me?_e.getParameter(Me.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Fe=0<Pe,Ue=Fe&&be;Ae&&_e.getParameter(_e.COMPRESSED_TEXTURE_FORMATS);var ze=_e.getShaderPrecisionFormat(_e.VERTEX_SHADER,_e.HIGH_FLOAT),Ve=_e.getShaderPrecisionFormat(_e.VERTEX_SHADER,_e.MEDIUM_FLOAT);_e.getShaderPrecisionFormat(_e.VERTEX_SHADER,_e.LOW_FLOAT);var Ne=_e.getShaderPrecisionFormat(_e.FRAGMENT_SHADER,_e.HIGH_FLOAT),Be=_e.getShaderPrecisionFormat(_e.FRAGMENT_SHADER,_e.MEDIUM_FLOAT);_e.getShaderPrecisionFormat(_e.FRAGMENT_SHADER,_e.LOW_FLOAT),_e.getShaderPrecisionFormat(_e.VERTEX_SHADER,_e.HIGH_INT),_e.getShaderPrecisionFormat(_e.VERTEX_SHADER,_e.MEDIUM_INT),_e.getShaderPrecisionFormat(_e.VERTEX_SHADER,_e.LOW_INT),_e.getShaderPrecisionFormat(_e.FRAGMENT_SHADER,_e.HIGH_INT),_e.getShaderPrecisionFormat(_e.FRAGMENT_SHADER,_e.MEDIUM_INT),_e.getShaderPrecisionFormat(_e.FRAGMENT_SHADER,_e.LOW_INT);var Oe=0<ze.precision&&0<Ne.precision,Ie=0<Ve.precision&&0<Be.precision;"highp"===U&&!Oe&&(Ie?(U="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(U="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"===U&&!Ie&&(U="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return _e},this.supportsVertexTextures=function(){return Fe},this.supportsFloatTextures=function(){return be},this.supportsStandardDerivatives=function(){return Se},this.supportsCompressedTextureS3TC=function(){return Ae},this.getMaxAnisotropy=function(){return De},this.getPrecision=function(){return U},this.setSize=function(e,t){F.width=e*this.devicePixelRatio,F.height=t*this.devicePixelRatio,F.style.width=e+"px",F.style.height=t+"px",this.setViewport(0,0,F.width,F.height)},this.setViewport=function(e,t,i,r){pe=void 0!==e?e:0,ue=void 0!==t?t:0,fe=void 0!==i?i:F.width,de=void 0!==r?r:F.height,_e.viewport(pe,ue,fe,de)},this.setScissor=function(e,t,i,r){_e.scissor(e,t,i,r)},this.enableScissorTest=function(e){e?_e.enable(_e.SCISSOR_TEST):_e.disable(_e.SCISSOR_TEST)},this.setClearColorHex=function(e,t){I.setHex(e),G=t,_e.clearColor(I.r,I.g,I.b,G)},this.setClearColor=function(e,t){I.copy(e),G=t,_e.clearColor(I.r,I.g,I.b,G)},this.getClearColor=function(){return I},this.getClearAlpha=function(){return G},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=_e.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=_e.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=_e.STENCIL_BUFFER_BIT),_e.clear(r)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){X=null,q=K=ae=oe=te=-1,He=!0,ee=$=-1,this.shadowMapPlugin.update(e,t)};var Ge=function(e){if((e=e.target).removeEventListener("dispose",Ge),e.__webglInit=void 0,void 0!==e.__webglVertexBuffer&&_e.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&_e.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&_e.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&_e.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&_e.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&_e.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&_e.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&_e.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&_e.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&_e.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&_e.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.geometryGroups)for(var i in e.geometryGroups){var r=e.geometryGroups[i];if(void 0!==r.numMorphTargets)for(var n=0,o=r.numMorphTargets;n<o;n++)_e.deleteBuffer(r.__webglMorphTargetsBuffers[n]);if(void 0!==r.numMorphNormals)for(n=0,o=r.numMorphNormals;n<o;n++)_e.deleteBuffer(r.__webglMorphNormalsBuffers[n]);t(r)}t(e),k.info.memory.geometries--},ke=function(e){(e=e.target).removeEventListener("dispose",ke),e.image&&e.image.__webglTextureCube?_e.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,_e.deleteTexture(e.__webglTexture)),k.info.memory.textures--},We=function(e){if((e=e.target).removeEventListener("dispose",We),e&&e.__webglTexture)if(_e.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)_e.deleteFramebuffer(e.__webglFramebuffer[t]),_e.deleteRenderbuffer(e.__webglRenderbuffer[t]);else _e.deleteFramebuffer(e.__webglFramebuffer),_e.deleteRenderbuffer(e.__webglRenderbuffer);k.info.memory.textures--},je=function(e){(e=e.target).removeEventListener("dispose",je),Xe(e)},Xe=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var i,r,n=!1,e=0;for(i=W.length;e<i;e++)if((r=W[e]).program===t){r.usedTimes--,0===r.usedTimes&&(n=!0);break}if(!0===n){for(n=[],e=0,i=W.length;e<i;e++)(r=W[e]).program!==t&&n.push(r);W=n,_e.deleteProgram(t),k.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,i){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=_e.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=_e.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=_e.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=_e.createBuffer()),e.hasPositions&&(_e.bindBuffer(_e.ARRAY_BUFFER,e.__webglVertexBuffer),_e.bufferData(_e.ARRAY_BUFFER,e.positionArray,_e.DYNAMIC_DRAW),_e.enableVertexAttribArray(t.attributes.position),_e.vertexAttribPointer(t.attributes.position,3,_e.FLOAT,!1,0,0)),e.hasNormals){if(_e.bindBuffer(_e.ARRAY_BUFFER,e.__webglNormalBuffer),i.shading===THREE.FlatShading){var r,n,o,a,s,h,l,c,p,u,f,d=3*e.count;for(f=0;f<d;f+=9)r=(u=e.normalArray)[f],n=u[f+1],o=u[f+2],a=u[f+3],h=u[f+4],c=u[f+5],r=(r+a+(s=u[f+6]))/3,n=(n+h+(l=u[f+7]))/3,o=(o+c+(p=u[f+8]))/3,u[f]=r,u[f+1]=n,u[f+2]=o,u[f+3]=r,u[f+4]=n,u[f+5]=o,u[f+6]=r,u[f+7]=n,u[f+8]=o}_e.bufferData(_e.ARRAY_BUFFER,e.normalArray,_e.DYNAMIC_DRAW),_e.enableVertexAttribArray(t.attributes.normal),_e.vertexAttribPointer(t.attributes.normal,3,_e.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(_e.bindBuffer(_e.ARRAY_BUFFER,e.__webglUvBuffer),_e.bufferData(_e.ARRAY_BUFFER,e.uvArray,_e.DYNAMIC_DRAW),_e.enableVertexAttribArray(t.attributes.uv),_e.vertexAttribPointer(t.attributes.uv,2,_e.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(_e.bindBuffer(_e.ARRAY_BUFFER,e.__webglColorBuffer),_e.bufferData(_e.ARRAY_BUFFER,e.colorArray,_e.DYNAMIC_DRAW),_e.enableVertexAttribArray(t.attributes.color),_e.vertexAttribPointer(t.attributes.color,3,_e.FLOAT,!1,0,0)),_e.drawArrays(_e.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,n,o){if(!1!==r.visible)if(e=(i=R(e,t,i,r,o)).attributes,t=!1,(i=16777215*n.id+2*i.id+(r.wireframe?1:0))!==K&&(K=i,t=!0),t&&c(),o instanceof THREE.Mesh)if(r=n.attributes.index){1<(o=n.offsets).length&&(t=!0);for(var i=0,a=o.length;i<a;i++){var s=o[i].index;if(t){var h=n.attributes.position,p=h.itemSize;if(_e.bindBuffer(_e.ARRAY_BUFFER,h.buffer),l(e.position),_e.vertexAttribPointer(e.position,p,_e.FLOAT,!1,0,4*s*p),p=n.attributes.normal,0<=e.normal&&p){var u=p.itemSize;_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.normal),_e.vertexAttribPointer(e.normal,u,_e.FLOAT,!1,0,4*s*u)}p=n.attributes.uv,0<=e.uv&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.uv),_e.vertexAttribPointer(e.uv,u,_e.FLOAT,!1,0,4*s*u)),p=n.attributes.color,0<=e.color&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.color),_e.vertexAttribPointer(e.color,u,_e.FLOAT,!1,0,4*s*u)),p=n.attributes.tangent,0<=e.tangent&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.tangent),_e.vertexAttribPointer(e.tangent,u,_e.FLOAT,!1,0,4*s*u)),_e.bindBuffer(_e.ELEMENT_ARRAY_BUFFER,r.buffer)}_e.drawElements(_e.TRIANGLES,o[i].count,_e.UNSIGNED_SHORT,2*o[i].start),k.info.render.calls++,k.info.render.vertices+=o[i].count,k.info.render.faces+=o[i].count/3}}else t&&(p=(h=n.attributes.position).itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,h.buffer),l(e.position),_e.vertexAttribPointer(e.position,p,_e.FLOAT,!1,0,0),p=n.attributes.normal,0<=e.normal&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.normal),_e.vertexAttribPointer(e.normal,u,_e.FLOAT,!1,0,0)),p=n.attributes.uv,0<=e.uv&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.uv),_e.vertexAttribPointer(e.uv,u,_e.FLOAT,!1,0,0)),p=n.attributes.color,0<=e.color&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.color),_e.vertexAttribPointer(e.color,u,_e.FLOAT,!1,0,0)),p=n.attributes.tangent,0<=e.tangent&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.tangent),_e.vertexAttribPointer(e.tangent,u,_e.FLOAT,!1,0,0))),_e.drawArrays(_e.TRIANGLES,0,h.numItems/3),k.info.render.calls++,k.info.render.vertices+=h.numItems/3,k.info.render.faces+=h.numItems/3/3;else o instanceof THREE.ParticleSystem?t&&(p=(h=n.attributes.position).itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,h.buffer),l(e.position),_e.vertexAttribPointer(e.position,p,_e.FLOAT,!1,0,0),p=n.attributes.color,0<=e.color&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.color),_e.vertexAttribPointer(e.color,u,_e.FLOAT,!1,0,0)),_e.drawArrays(_e.POINTS,0,h.numItems/3),k.info.render.calls++,k.info.render.points+=h.numItems/3):o instanceof THREE.Line&&t&&(p=(h=n.attributes.position).itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,h.buffer),l(e.position),_e.vertexAttribPointer(e.position,p,_e.FLOAT,!1,0,0),p=n.attributes.color,0<=e.color&&p&&(u=p.itemSize,_e.bindBuffer(_e.ARRAY_BUFFER,p.buffer),l(e.color),_e.vertexAttribPointer(e.color,u,_e.FLOAT,!1,0,0)),b(r.linewidth),_e.drawArrays(_e.LINE_STRIP,0,h.numItems/3),k.info.render.calls++,k.info.render.points+=h.numItems)},this.renderBuffer=function(e,t,i,r,n,o){if(!1!==r.visible){var a,s,i,e=(i=R(e,t,i,r,o)).attributes,t=!1,i;if((i=16777215*n.id+2*i.id+(r.wireframe?1:0))!==K&&(K=i,t=!0),t&&c(),!r.morphTargets&&0<=e.position)t&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglVertexBuffer),l(e.position),_e.vertexAttribPointer(e.position,3,_e.FLOAT,!1,0,0));else if(o.morphTargetBase){if(i=r.program.attributes,-1!==o.morphTargetBase&&0<=i.position?(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),l(i.position),_e.vertexAttribPointer(i.position,3,_e.FLOAT,!1,0,0)):0<=i.position&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglVertexBuffer),l(i.position),_e.vertexAttribPointer(i.position,3,_e.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){var h=0;for(s=o.morphTargetForcedOrder,a=o.morphTargetInfluences;h<r.numSupportedMorphTargets&&h<s.length;)0<=i["morphTarget"+h]&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[s[h]]),l(i["morphTarget"+h]),_e.vertexAttribPointer(i["morphTarget"+h],3,_e.FLOAT,!1,0,0)),0<=i["morphNormal"+h]&&r.morphNormals&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[s[h]]),l(i["morphNormal"+h]),_e.vertexAttribPointer(i["morphNormal"+h],3,_e.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=a[s[h]],h++}else{s=[];var p,f=(a=o.morphTargetInfluences).length;for(p=0;p<f;p++)0<(h=a[p])&&s.push([h,p]);for(s.length>r.numSupportedMorphTargets?(s.sort(u),s.length=r.numSupportedMorphTargets):s.length>r.numSupportedMorphNormals?s.sort(u):0===s.length&&s.push([0,0]),h=0;h<r.numSupportedMorphTargets;)s[h]?(p=s[h][1],0<=i["morphTarget"+h]&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[p]),l(i["morphTarget"+h]),_e.vertexAttribPointer(i["morphTarget"+h],3,_e.FLOAT,!1,0,0)),0<=i["morphNormal"+h]&&r.morphNormals&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[p]),l(i["morphNormal"+h]),_e.vertexAttribPointer(i["morphNormal"+h],3,_e.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=a[p]):o.__webglMorphTargetInfluences[h]=0,h++}null!==r.program.uniforms.morphTargetInfluences&&_e.uniform1fv(r.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(t){if(n.__webglCustomAttributesList)for(a=0,s=n.__webglCustomAttributesList.length;a<s;a++)0<=e[(i=n.__webglCustomAttributesList[a]).buffer.belongsToAttribute]&&(_e.bindBuffer(_e.ARRAY_BUFFER,i.buffer),l(e[i.buffer.belongsToAttribute]),_e.vertexAttribPointer(e[i.buffer.belongsToAttribute],i.size,_e.FLOAT,!1,0,0));0<=e.color&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglColorBuffer),l(e.color),_e.vertexAttribPointer(e.color,3,_e.FLOAT,!1,0,0)),0<=e.normal&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglNormalBuffer),l(e.normal),_e.vertexAttribPointer(e.normal,3,_e.FLOAT,!1,0,0)),0<=e.tangent&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglTangentBuffer),l(e.tangent),_e.vertexAttribPointer(e.tangent,4,_e.FLOAT,!1,0,0)),0<=e.uv&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglUVBuffer),l(e.uv),_e.vertexAttribPointer(e.uv,2,_e.FLOAT,!1,0,0)),0<=e.uv2&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglUV2Buffer),l(e.uv2),_e.vertexAttribPointer(e.uv2,2,_e.FLOAT,!1,0,0)),r.skinning&&0<=e.skinIndex&&0<=e.skinWeight&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),l(e.skinIndex),_e.vertexAttribPointer(e.skinIndex,4,_e.FLOAT,!1,0,0),_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),l(e.skinWeight),_e.vertexAttribPointer(e.skinWeight,4,_e.FLOAT,!1,0,0)),0<=e.lineDistance&&(_e.bindBuffer(_e.ARRAY_BUFFER,n.__webglLineDistanceBuffer),l(e.lineDistance),_e.vertexAttribPointer(e.lineDistance,1,_e.FLOAT,!1,0,0))}o instanceof THREE.Mesh?(r.wireframe?(b(r.wireframeLinewidth),t&&_e.bindBuffer(_e.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),_e.drawElements(_e.LINES,n.__webglLineCount,_e.UNSIGNED_SHORT,0)):(t&&_e.bindBuffer(_e.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),_e.drawElements(_e.TRIANGLES,n.__webglFaceCount,_e.UNSIGNED_SHORT,0)),k.info.render.calls++,k.info.render.vertices+=n.__webglFaceCount,k.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?_e.LINE_STRIP:_e.LINES,b(r.linewidth),_e.drawArrays(o,0,n.__webglLineCount),k.info.render.calls++):o instanceof THREE.ParticleSystem?(_e.drawArrays(_e.POINTS,0,n.__webglParticleCount),k.info.render.calls++,k.info.render.points+=n.__webglParticleCount):o instanceof THREE.Ribbon&&(_e.drawArrays(_e.TRIANGLE_STRIP,0,n.__webglVertexCount),k.info.render.calls++)}},this.render=function(e,t,i,r){if(!1==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var n,o,a,s,h=e.__lights,l=e.fog;for(q=-1,He=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),ve.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Te.setFromMatrix(ve),this.autoUpdateObjects&&this.initWebGLObjects(e),f(this.renderPluginsPre,e,t),k.info.render.calls=0,k.info.render.vertices=0,k.info.render.faces=0,k.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),r=0,n=(s=e.__webglObjects).length;r<n;r++)if(a=(o=s[r]).object,o.render=!1,
a.visible&&(!(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem)||!a.frustumCulled||Te.intersectsObject(a))){H(a,t);var c=o,u=c.buffer,m=void 0,g=m=void 0,g;(g=c.object.material)instanceof THREE.MeshFaceMaterial?(m=u.materialIndex,(m=g.materials[m]).transparent?(c.transparent=m,c.opaque=null):(c.opaque=m,c.transparent=null)):(m=g)&&(m.transparent?(c.transparent=m,c.opaque=null):(c.opaque=m,c.transparent=null)),o.render=!0,!0===this.sortObjects&&(null!==a.renderDepth?o.z=a.renderDepth:(Re.getPositionFromMatrix(a.matrixWorld),Re.applyProjection(ve),o.z=Re.z),o.id=a.id)}for(this.sortObjects&&s.sort(p),r=0,n=(s=e.__webglObjectsImmediate).length;r<n;r++)(a=(o=s[r]).object).visible&&(H(a,t),(a=o.object.material).transparent?(o.transparent=a,o.opaque=null):(o.opaque=a,o.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),S(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),d(e.__webglObjects,!1,"",t,h,l,!0,r),E(e.__webglObjectsImmediate,"",t,h,l,!1,r)):(r=null,this.setBlending(THREE.NoBlending),d(e.__webglObjects,!0,"opaque",t,h,l,!1,r),E(e.__webglObjectsImmediate,"opaque",t,h,l,!1,r),d(e.__webglObjects,!1,"transparent",t,h,l,!0,r),E(e.__webglObjectsImmediate,"transparent",t,h,l,!0,r)),f(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(i instanceof THREE.WebGLRenderTargetCube?(_e.bindTexture(_e.TEXTURE_CUBE_MAP,i.__webglTexture),_e.generateMipmap(_e.TEXTURE_CUBE_MAP),_e.bindTexture(_e.TEXTURE_CUBE_MAP,null)):(_e.bindTexture(_e.TEXTURE_2D,i.__webglTexture),_e.generateMipmap(_e.TEXTURE_2D),_e.bindTexture(_e.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,i,r,n){var o=R(e,t,i,r,n);K=-1,k.setMaterialFaces(r),n.immediateRenderCallback?n.immediateRenderCallback(o,_e,Te):n.render((function(e){k.renderBufferImmediate(e,o,r)}))},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;){var t=e.__objectsAdded[0],l=e,c=void 0,p=void 0,f=void 0,d=void 0;if(!t.__webglInit)if(t.__webglInit=!0,t._modelViewMatrix=new THREE.Matrix4,t._normalMatrix=new THREE.Matrix3,void 0!==t.geometry&&void 0===t.geometry.__webglInit&&(t.geometry.__webglInit=!0,t.geometry.addEventListener("dispose",Ge)),t instanceof THREE.Mesh)if(p=t.geometry,f=t.material,p instanceof THREE.Geometry){if(void 0===p.geometryGroups){var E=p,R=void 0,x=void 0,H=void 0,w=void 0,_=void 0,b=void 0,S={},M=E.morphTargets.length,A=E.morphNormals.length,C=f instanceof THREE.MeshFaceMaterial;for(E.geometryGroups={},R=0,x=E.faces.length;R<x;R++)H=E.faces[R],void 0===S[w=C?H.materialIndex:0]&&(S[w]={hash:w,counter:0}),b=S[w].hash+"_"+S[w].counter,void 0===E.geometryGroups[b]&&(E.geometryGroups[b]={faces3:[],faces4:[],materialIndex:w,vertices:0,numMorphTargets:M,numMorphNormals:A}),_=H instanceof THREE.Face3?3:4,65535<E.geometryGroups[b].vertices+_&&(S[w].counter+=1,b=S[w].hash+"_"+S[w].counter,void 0===E.geometryGroups[b]&&(E.geometryGroups[b]={faces3:[],faces4:[],materialIndex:w,vertices:0,numMorphTargets:M,numMorphNormals:A})),H instanceof THREE.Face3?E.geometryGroups[b].faces3.push(R):E.geometryGroups[b].faces4.push(R),E.geometryGroups[b].vertices+=_;E.geometryGroupsList=[];var P=void 0;for(P in E.geometryGroups)E.geometryGroups[P].id=Z++,E.geometryGroupsList.push(E.geometryGroups[P])}for(c in p.geometryGroups)if(!(d=p.geometryGroups[c]).__webglVertexBuffer){var L=d;L.__webglVertexBuffer=_e.createBuffer(),L.__webglNormalBuffer=_e.createBuffer(),L.__webglTangentBuffer=_e.createBuffer(),L.__webglColorBuffer=_e.createBuffer(),L.__webglUVBuffer=_e.createBuffer(),L.__webglUV2Buffer=_e.createBuffer(),L.__webglSkinIndicesBuffer=_e.createBuffer(),L.__webglSkinWeightsBuffer=_e.createBuffer(),L.__webglFaceBuffer=_e.createBuffer(),L.__webglLineBuffer=_e.createBuffer();var D=void 0,F=void 0;if(L.numMorphTargets)for(L.__webglMorphTargetsBuffers=[],D=0,F=L.numMorphTargets;D<F;D++)L.__webglMorphTargetsBuffers.push(_e.createBuffer());if(L.numMorphNormals)for(L.__webglMorphNormalsBuffers=[],D=0,F=L.numMorphNormals;D<F;D++)L.__webglMorphNormalsBuffers.push(_e.createBuffer());k.info.memory.geometries++,r(d,t),p.verticesNeedUpdate=!0,p.morphTargetsNeedUpdate=!0,p.elementsNeedUpdate=!0,p.uvsNeedUpdate=!0,p.normalsNeedUpdate=!0,p.tangentsNeedUpdate=!0,p.colorsNeedUpdate=!0}}else p instanceof THREE.BufferGeometry&&s(p);else if(t instanceof THREE.Ribbon){if(!(p=t.geometry).__webglVertexBuffer){var U=p;U.__webglVertexBuffer=_e.createBuffer(),U.__webglColorBuffer=_e.createBuffer(),U.__webglNormalBuffer=_e.createBuffer(),k.info.memory.geometries++;var z=p,V=t,N=z.vertices.length;z.__vertexArray=new Float32Array(3*N),z.__colorArray=new Float32Array(3*N),z.__normalArray=new Float32Array(3*N),z.__webglVertexCount=N,i(z,V),p.verticesNeedUpdate=!0,p.colorsNeedUpdate=!0,p.normalsNeedUpdate=!0}}else if(t instanceof THREE.Line){if(!(p=t.geometry).__webglVertexBuffer)if(p instanceof THREE.Geometry){var B=p;B.__webglVertexBuffer=_e.createBuffer(),B.__webglColorBuffer=_e.createBuffer(),B.__webglLineDistanceBuffer=_e.createBuffer(),k.info.memory.geometries++;var O=p,I=t,G=O.vertices.length;O.__vertexArray=new Float32Array(3*G),O.__colorArray=new Float32Array(3*G),O.__lineDistanceArray=new Float32Array(1*G),O.__webglLineCount=G,i(O,I),p.verticesNeedUpdate=!0,p.colorsNeedUpdate=!0,p.lineDistancesNeedUpdate=!0}else p instanceof THREE.BufferGeometry&&s(p)}else if(t instanceof THREE.ParticleSystem&&!(p=t.geometry).__webglVertexBuffer)if(p instanceof THREE.Geometry){var W=p;W.__webglVertexBuffer=_e.createBuffer(),W.__webglColorBuffer=_e.createBuffer(),k.info.memory.geometries++;var j=p,X=t,Y=j.vertices.length;j.__vertexArray=new Float32Array(3*Y),j.__colorArray=new Float32Array(3*Y),j.__sortArray=[],j.__webglParticleCount=Y,i(j,X),p.verticesNeedUpdate=!0,p.colorsNeedUpdate=!0}else p instanceof THREE.BufferGeometry&&s(p);if(!t.__webglActive){if(t instanceof THREE.Mesh){if((p=t.geometry)instanceof THREE.BufferGeometry)m(l.__webglObjects,p,t);else if(p instanceof THREE.Geometry)for(c in p.geometryGroups)d=p.geometryGroups[c],m(l.__webglObjects,d,t)}else t instanceof THREE.Ribbon||t instanceof THREE.Line||t instanceof THREE.ParticleSystem?(p=t.geometry,m(l.__webglObjects,p,t)):t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback?l.__webglObjectsImmediate.push({object:t,opaque:null,transparent:null}):t instanceof THREE.Sprite?l.__webglSprites.push(t):t instanceof THREE.LensFlare&&l.__webglFlares.push(t);t.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;){var q=e.__objectsRemoved[0],K=e;q instanceof THREE.Mesh||q instanceof THREE.ParticleSystem||q instanceof THREE.Ribbon||q instanceof THREE.Line?v(K.__webglObjects,q):q instanceof THREE.Sprite?y(K.__webglSprites,q):q instanceof THREE.LensFlare?y(K.__webglFlares,q):(q instanceof THREE.ImmediateRenderObject||q.immediateRenderCallback)&&v(K.__webglObjectsImmediate,q),q.__webglActive=!1,e.__objectsRemoved.splice(0,1)}for(var Q=0,J=e.__webglObjects.length;Q<J;Q++){var $=e.__webglObjects[Q].object,ee=$.geometry,te=void 0,ie=void 0,re=void 0;if($ instanceof THREE.Mesh)if(ee instanceof THREE.BufferGeometry)(ee.verticesNeedUpdate||ee.elementsNeedUpdate||ee.uvsNeedUpdate||ee.normalsNeedUpdate||ee.colorsNeedUpdate||ee.tangentsNeedUpdate)&&h(ee,_e.DYNAMIC_DRAW,!ee.dynamic),ee.verticesNeedUpdate=!1,ee.elementsNeedUpdate=!1,ee.uvsNeedUpdate=!1,ee.normalsNeedUpdate=!1,ee.colorsNeedUpdate=!1,ee.tangentsNeedUpdate=!1;else{for(var ne=0,oe=ee.geometryGroupsList.length;ne<oe;ne++)if(re=n($,te=ee.geometryGroupsList[ne]),ee.buffersNeedUpdate&&r(te,$),ie=re.attributes&&g(re),ee.verticesNeedUpdate||ee.morphTargetsNeedUpdate||ee.elementsNeedUpdate||ee.uvsNeedUpdate||ee.normalsNeedUpdate||ee.colorsNeedUpdate||ee.tangentsNeedUpdate||ie){var ae=te,se=$,he=_e.DYNAMIC_DRAW,le=!ee.dynamic,ce=re;if(ae.__inittedArrays){var pe=o(ce),ue=!!ce.vertexColors&&ce.vertexColors,fe=a(ce),de=pe===THREE.SmoothShading,Ee=void 0,me=void 0,ge=void 0,Te=void 0,xe=void 0,He=void 0,we=void 0,be=void 0,Se=void 0,Me=void 0,Ae=void 0,Ce=void 0,Pe=void 0,Le=void 0,De=void 0,Fe=void 0,Ue=void 0,ze=void 0,Ve=void 0,Ne=void 0,Be=void 0,Oe=void 0,Ie=void 0,ke=void 0,We=void 0,je=void 0,Xe=void 0,Ye=void 0,qe=void 0,Ke=void 0,Qe=void 0,Ze=void 0,Je=void 0,$e=void 0,et=void 0,tt=void 0,it=void 0,rt=void 0,nt=void 0,ot=void 0,at=void 0,st=void 0,ht=void 0,lt=void 0,ct=void 0,pt=void 0,ut=0,ft=0,dt=0,Et=0,mt=0,gt=0,Tt=0,vt=0,yt=0,Rt=0,xt=0,Ht=0,wt=void 0,_t=ae.__vertexArray,bt=ae.__uvArray,St=ae.__uv2Array,Mt=ae.__normalArray,At=ae.__tangentArray,Ct=ae.__colorArray,Pt=ae.__skinIndexArray,Lt=ae.__skinWeightArray,Dt=ae.__morphTargetsArrays,Ft=ae.__morphNormalsArrays,Ut=ae.__webglCustomAttributesList,zt=void 0,Vt=ae.__faceArray,Nt=ae.__lineArray,Bt=se.geometry,Ot=Bt.elementsNeedUpdate,It=Bt.uvsNeedUpdate,Gt=Bt.normalsNeedUpdate,kt=Bt.tangentsNeedUpdate,Wt=Bt.colorsNeedUpdate,jt=Bt.morphTargetsNeedUpdate,Xt=Bt.vertices,Yt=ae.faces3,qt=ae.faces4,Kt=Bt.faces,Qt=Bt.faceVertexUvs[0],Zt=Bt.faceVertexUvs[1],Jt=Bt.skinIndices,$t=Bt.skinWeights,ei=Bt.morphTargets,ti=Bt.morphNormals;if(Bt.verticesNeedUpdate){for(Ee=0,me=Yt.length;Ee<me;Ee++)Ce=Xt[(Te=Kt[Yt[Ee]]).a],Pe=Xt[Te.b],Le=Xt[Te.c],_t[ft]=Ce.x,_t[ft+1]=Ce.y,_t[ft+2]=Ce.z,_t[ft+3]=Pe.x,_t[ft+4]=Pe.y,_t[ft+5]=Pe.z,_t[ft+6]=Le.x,_t[ft+7]=Le.y,_t[ft+8]=Le.z,ft+=9;for(Ee=0,me=qt.length;Ee<me;Ee++)Ce=Xt[(Te=Kt[qt[Ee]]).a],Pe=Xt[Te.b],Le=Xt[Te.c],De=Xt[Te.d],_t[ft]=Ce.x,_t[ft+1]=Ce.y,_t[ft+2]=Ce.z,_t[ft+3]=Pe.x,_t[ft+4]=Pe.y,_t[ft+5]=Pe.z,_t[ft+6]=Le.x,_t[ft+7]=Le.y,_t[ft+8]=Le.z,_t[ft+9]=De.x,_t[ft+10]=De.y,_t[ft+11]=De.z,ft+=12;_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglVertexBuffer),_e.bufferData(_e.ARRAY_BUFFER,_t,he)}if(jt)for(at=0,st=ei.length;at<st;at++){for(Ee=xt=0,me=Yt.length;Ee<me;Ee++)Te=Kt[ct=Yt[Ee]],Ce=ei[at].vertices[Te.a],Pe=ei[at].vertices[Te.b],Le=ei[at].vertices[Te.c],(ht=Dt[at])[xt]=Ce.x,ht[xt+1]=Ce.y,ht[xt+2]=Ce.z,ht[xt+3]=Pe.x,ht[xt+4]=Pe.y,ht[xt+5]=Pe.z,ht[xt+6]=Le.x,ht[xt+7]=Le.y,ht[xt+8]=Le.z,ce.morphNormals&&(de?(Ne=(pt=ti[at].vertexNormals[ct]).a,Be=pt.b,Oe=pt.c):Oe=Be=Ne=ti[at].faceNormals[ct],(lt=Ft[at])[xt]=Ne.x,lt[xt+1]=Ne.y,lt[xt+2]=Ne.z,lt[xt+3]=Be.x,lt[xt+4]=Be.y,lt[xt+5]=Be.z,lt[xt+6]=Oe.x,lt[xt+7]=Oe.y,lt[xt+8]=Oe.z),xt+=9;for(Ee=0,me=qt.length;Ee<me;Ee++)Te=Kt[ct=qt[Ee]],Ce=ei[at].vertices[Te.a],Pe=ei[at].vertices[Te.b],Le=ei[at].vertices[Te.c],De=ei[at].vertices[Te.d],(ht=Dt[at])[xt]=Ce.x,ht[xt+1]=Ce.y,ht[xt+2]=Ce.z,ht[xt+3]=Pe.x,ht[xt+4]=Pe.y,ht[xt+5]=Pe.z,ht[xt+6]=Le.x,ht[xt+7]=Le.y,ht[xt+8]=Le.z,ht[xt+9]=De.x,ht[xt+10]=De.y,ht[xt+11]=De.z,ce.morphNormals&&(de?(Ne=(pt=ti[at].vertexNormals[ct]).a,Be=pt.b,Oe=pt.c,Ie=pt.d):Ie=Oe=Be=Ne=ti[at].faceNormals[ct],(lt=Ft[at])[xt]=Ne.x,lt[xt+1]=Ne.y,lt[xt+2]=Ne.z,lt[xt+3]=Be.x,lt[xt+4]=Be.y,lt[xt+5]=Be.z,lt[xt+6]=Oe.x,lt[xt+7]=Oe.y,lt[xt+8]=Oe.z,lt[xt+9]=Ie.x,lt[xt+10]=Ie.y,lt[xt+11]=Ie.z),xt+=12;_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglMorphTargetsBuffers[at]),_e.bufferData(_e.ARRAY_BUFFER,Dt[at],he),ce.morphNormals&&(_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglMorphNormalsBuffers[at]),_e.bufferData(_e.ARRAY_BUFFER,Ft[at],he))}if($t.length){for(Ee=0,me=Yt.length;Ee<me;Ee++)Ye=$t[(Te=Kt[Yt[Ee]]).a],qe=$t[Te.b],Ke=$t[Te.c],Lt[Rt]=Ye.x,Lt[Rt+1]=Ye.y,Lt[Rt+2]=Ye.z,Lt[Rt+3]=Ye.w,Lt[Rt+4]=qe.x,Lt[Rt+5]=qe.y,Lt[Rt+6]=qe.z,Lt[Rt+7]=qe.w,Lt[Rt+8]=Ke.x,Lt[Rt+9]=Ke.y,Lt[Rt+10]=Ke.z,Lt[Rt+11]=Ke.w,Ze=Jt[Te.a],Je=Jt[Te.b],$e=Jt[Te.c],Pt[Rt]=Ze.x,Pt[Rt+1]=Ze.y,Pt[Rt+2]=Ze.z,Pt[Rt+3]=Ze.w,Pt[Rt+4]=Je.x,Pt[Rt+5]=Je.y,Pt[Rt+6]=Je.z,Pt[Rt+7]=Je.w,Pt[Rt+8]=$e.x,Pt[Rt+9]=$e.y,Pt[Rt+10]=$e.z,Pt[Rt+11]=$e.w,Rt+=12;for(Ee=0,me=qt.length;Ee<me;Ee++)Ye=$t[(Te=Kt[qt[Ee]]).a],qe=$t[Te.b],Ke=$t[Te.c],Qe=$t[Te.d],Lt[Rt]=Ye.x,Lt[Rt+1]=Ye.y,Lt[Rt+2]=Ye.z,Lt[Rt+3]=Ye.w,Lt[Rt+4]=qe.x,Lt[Rt+5]=qe.y,Lt[Rt+6]=qe.z,Lt[Rt+7]=qe.w,Lt[Rt+8]=Ke.x,Lt[Rt+9]=Ke.y,Lt[Rt+10]=Ke.z,Lt[Rt+11]=Ke.w,Lt[Rt+12]=Qe.x,Lt[Rt+13]=Qe.y,Lt[Rt+14]=Qe.z,Lt[Rt+15]=Qe.w,Ze=Jt[Te.a],Je=Jt[Te.b],$e=Jt[Te.c],et=Jt[Te.d],Pt[Rt]=Ze.x,Pt[Rt+1]=Ze.y,Pt[Rt+2]=Ze.z,Pt[Rt+3]=Ze.w,Pt[Rt+4]=Je.x,Pt[Rt+5]=Je.y,Pt[Rt+6]=Je.z,Pt[Rt+7]=Je.w,Pt[Rt+8]=$e.x,Pt[Rt+9]=$e.y,Pt[Rt+10]=$e.z,Pt[Rt+11]=$e.w,Pt[Rt+12]=et.x,Pt[Rt+13]=et.y,Pt[Rt+14]=et.z,Pt[Rt+15]=et.w,Rt+=16;0<Rt&&(_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglSkinIndicesBuffer),_e.bufferData(_e.ARRAY_BUFFER,Pt,he),_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglSkinWeightsBuffer),_e.bufferData(_e.ARRAY_BUFFER,Lt,he))}if(Wt&&ue){for(Ee=0,me=Yt.length;Ee<me;Ee++)we=(Te=Kt[Yt[Ee]]).vertexColors,be=Te.color,3===we.length&&ue===THREE.VertexColors?(ke=we[0],We=we[1],je=we[2]):je=We=ke=be,Ct[yt]=ke.r,Ct[yt+1]=ke.g,Ct[yt+2]=ke.b,Ct[yt+3]=We.r,Ct[yt+4]=We.g,Ct[yt+5]=We.b,Ct[yt+6]=je.r,Ct[yt+7]=je.g,Ct[yt+8]=je.b,yt+=9;for(Ee=0,me=qt.length;Ee<me;Ee++)we=(Te=Kt[qt[Ee]]).vertexColors,be=Te.color,4===we.length&&ue===THREE.VertexColors?(ke=we[0],We=we[1],je=we[2],Xe=we[3]):Xe=je=We=ke=be,Ct[yt]=ke.r,Ct[yt+1]=ke.g,Ct[yt+2]=ke.b,Ct[yt+3]=We.r,Ct[yt+4]=We.g,Ct[yt+5]=We.b,Ct[yt+6]=je.r,Ct[yt+7]=je.g,Ct[yt+8]=je.b,Ct[yt+9]=Xe.r,Ct[yt+10]=Xe.g,Ct[yt+11]=Xe.b,yt+=12;0<yt&&(_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglColorBuffer),_e.bufferData(_e.ARRAY_BUFFER,Ct,he))}if(kt&&Bt.hasTangents){for(Ee=0,me=Yt.length;Ee<me;Ee++)Fe=(Se=(Te=Kt[Yt[Ee]]).vertexTangents)[0],Ue=Se[1],ze=Se[2],At[Tt]=Fe.x,At[Tt+1]=Fe.y,At[Tt+2]=Fe.z,At[Tt+3]=Fe.w,At[Tt+4]=Ue.x,At[Tt+5]=Ue.y,At[Tt+6]=Ue.z,At[Tt+7]=Ue.w,At[Tt+8]=ze.x,At[Tt+9]=ze.y,At[Tt+10]=ze.z,At[Tt+11]=ze.w,Tt+=12;for(Ee=0,me=qt.length;Ee<me;Ee++)Fe=(Se=(Te=Kt[qt[Ee]]).vertexTangents)[0],Ue=Se[1],ze=Se[2],Ve=Se[3],At[Tt]=Fe.x,At[Tt+1]=Fe.y,At[Tt+2]=Fe.z,At[Tt+3]=Fe.w,At[Tt+4]=Ue.x,At[Tt+5]=Ue.y,At[Tt+6]=Ue.z,At[Tt+7]=Ue.w,At[Tt+8]=ze.x,At[Tt+9]=ze.y,At[Tt+10]=ze.z,At[Tt+11]=ze.w,At[Tt+12]=Ve.x,At[Tt+13]=Ve.y,At[Tt+14]=Ve.z,At[Tt+15]=Ve.w,Tt+=16;_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglTangentBuffer),_e.bufferData(_e.ARRAY_BUFFER,At,he)}if(Gt&&pe){for(Ee=0,me=Yt.length;Ee<me;Ee++)if(xe=(Te=Kt[Yt[Ee]]).vertexNormals,He=Te.normal,3===xe.length&&de)for(tt=0;3>tt;tt++)rt=xe[tt],Mt[gt]=rt.x,Mt[gt+1]=rt.y,Mt[gt+2]=rt.z,gt+=3;else for(tt=0;3>tt;tt++)Mt[gt]=He.x,Mt[gt+1]=He.y,Mt[gt+2]=He.z,gt+=3;for(Ee=0,me=qt.length;Ee<me;Ee++)if(xe=(Te=Kt[qt[Ee]]).vertexNormals,He=Te.normal,4===xe.length&&de)for(tt=0;4>tt;tt++)rt=xe[tt],Mt[gt]=rt.x,Mt[gt+1]=rt.y,Mt[gt+2]=rt.z,gt+=3;else for(tt=0;4>tt;tt++)Mt[gt]=He.x,Mt[gt+1]=He.y,Mt[gt+2]=He.z,gt+=3;_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglNormalBuffer),_e.bufferData(_e.ARRAY_BUFFER,Mt,he)}if(It&&Qt&&fe){for(Ee=0,me=Yt.length;Ee<me;Ee++)if(void 0!==(Me=Qt[ge=Yt[Ee]]))for(tt=0;3>tt;tt++)nt=Me[tt],bt[dt]=nt.x,bt[dt+1]=nt.y,dt+=2;for(Ee=0,me=qt.length;Ee<me;Ee++)if(void 0!==(Me=Qt[ge=qt[Ee]]))for(tt=0;4>tt;tt++)nt=Me[tt],bt[dt]=nt.x,bt[dt+1]=nt.y,dt+=2;0<dt&&(_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglUVBuffer),_e.bufferData(_e.ARRAY_BUFFER,bt,he))}if(It&&Zt&&fe){for(Ee=0,me=Yt.length;Ee<me;Ee++)if(void 0!==(Ae=Zt[ge=Yt[Ee]]))for(tt=0;3>tt;tt++)ot=Ae[tt],St[Et]=ot.x,St[Et+1]=ot.y,Et+=2;for(Ee=0,me=qt.length;Ee<me;Ee++)if(void 0!==(Ae=Zt[ge=qt[Ee]]))for(tt=0;4>tt;tt++)ot=Ae[tt],St[Et]=ot.x,St[Et+1]=ot.y,Et+=2;0<Et&&(_e.bindBuffer(_e.ARRAY_BUFFER,ae.__webglUV2Buffer),_e.bufferData(_e.ARRAY_BUFFER,St,he))}if(Ot){for(Ee=0,me=Yt.length;Ee<me;Ee++)Vt[mt]=ut,Vt[mt+1]=ut+1,Vt[mt+2]=ut+2,mt+=3,Nt[vt]=ut,Nt[vt+1]=ut+1,Nt[vt+2]=ut,Nt[vt+3]=ut+2,Nt[vt+4]=ut+1,Nt[vt+5]=ut+2,vt+=6,ut+=3;for(Ee=0,me=qt.length;Ee<me;Ee++)Vt[mt]=ut,Vt[mt+1]=ut+1,Vt[mt+2]=ut+3,Vt[mt+3]=ut+1,Vt[mt+4]=ut+2,Vt[mt+5]=ut+3,mt+=6,Nt[vt]=ut,Nt[vt+1]=ut+1,Nt[vt+2]=ut,Nt[vt+3]=ut+3,Nt[vt+4]=ut+1,Nt[vt+5]=ut+2,Nt[vt+6]=ut+2,Nt[vt+7]=ut+3,vt+=8,ut+=4;_e.bindBuffer(_e.ELEMENT_ARRAY_BUFFER,ae.__webglFaceBuffer),_e.bufferData(_e.ELEMENT_ARRAY_BUFFER,Vt,he),_e.bindBuffer(_e.ELEMENT_ARRAY_BUFFER,ae.__webglLineBuffer),_e.bufferData(_e.ELEMENT_ARRAY_BUFFER,Nt,he)}if(Ut)for(tt=0,it=Ut.length;tt<it;tt++)if((zt=Ut[tt]).__original.needsUpdate){if(Ht=0,1===zt.size){if(void 0===zt.boundTo||"vertices"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Te=Kt[Yt[Ee]],zt.array[Ht]=zt.value[Te.a],zt.array[Ht+1]=zt.value[Te.b],zt.array[Ht+2]=zt.value[Te.c],Ht+=3;for(Ee=0,me=qt.length;Ee<me;Ee++)Te=Kt[qt[Ee]],zt.array[Ht]=zt.value[Te.a],zt.array[Ht+1]=zt.value[Te.b],zt.array[Ht+2]=zt.value[Te.c],zt.array[Ht+3]=zt.value[Te.d],Ht+=4}else if("faces"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)wt=zt.value[Yt[Ee]],zt.array[Ht]=wt,zt.array[Ht+1]=wt,zt.array[Ht+2]=wt,Ht+=3;for(Ee=0,me=qt.length;Ee<me;Ee++)wt=zt.value[qt[Ee]],zt.array[Ht]=wt,zt.array[Ht+1]=wt,zt.array[Ht+2]=wt,zt.array[Ht+3]=wt,Ht+=4}}else if(2===zt.size){if(void 0===zt.boundTo||"vertices"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Te=Kt[Yt[Ee]],Ce=zt.value[Te.a],Pe=zt.value[Te.b],Le=zt.value[Te.c],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Pe.x,zt.array[Ht+3]=Pe.y,zt.array[Ht+4]=Le.x,zt.array[Ht+5]=Le.y,Ht+=6;for(Ee=0,me=qt.length;Ee<me;Ee++)Te=Kt[qt[Ee]],Ce=zt.value[Te.a],Pe=zt.value[Te.b],Le=zt.value[Te.c],De=zt.value[Te.d],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Pe.x,zt.array[Ht+3]=Pe.y,zt.array[Ht+4]=Le.x,zt.array[Ht+5]=Le.y,zt.array[Ht+6]=De.x,zt.array[Ht+7]=De.y,Ht+=8}else if("faces"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Le=Pe=Ce=wt=zt.value[Yt[Ee]],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Pe.x,zt.array[Ht+3]=Pe.y,zt.array[Ht+4]=Le.x,zt.array[Ht+5]=Le.y,Ht+=6;for(Ee=0,me=qt.length;Ee<me;Ee++)De=Le=Pe=Ce=wt=zt.value[qt[Ee]],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Pe.x,zt.array[Ht+3]=Pe.y,zt.array[Ht+4]=Le.x,zt.array[Ht+5]=Le.y,zt.array[Ht+6]=De.x,zt.array[Ht+7]=De.y,Ht+=8}}else if(3===zt.size){var ii;if(ii="c"===zt.type?["r","g","b"]:["x","y","z"],void 0===zt.boundTo||"vertices"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Te=Kt[Yt[Ee]],Ce=zt.value[Te.a],Pe=zt.value[Te.b],Le=zt.value[Te.c],zt.array[Ht]=Ce[ii[0]],zt.array[Ht+1]=Ce[ii[1]],zt.array[Ht+2]=Ce[ii[2]],zt.array[Ht+3]=Pe[ii[0]],zt.array[Ht+4]=Pe[ii[1]],zt.array[Ht+5]=Pe[ii[2]],zt.array[Ht+6]=Le[ii[0]],zt.array[Ht+7]=Le[ii[1]],zt.array[Ht+8]=Le[ii[2]],Ht+=9;for(Ee=0,me=qt.length;Ee<me;Ee++)Te=Kt[qt[Ee]],Ce=zt.value[Te.a],Pe=zt.value[Te.b],Le=zt.value[Te.c],De=zt.value[Te.d],zt.array[Ht]=Ce[ii[0]],zt.array[Ht+1]=Ce[ii[1]],zt.array[Ht+2]=Ce[ii[2]],zt.array[Ht+3]=Pe[ii[0]],zt.array[Ht+4]=Pe[ii[1]],zt.array[Ht+5]=Pe[ii[2]],zt.array[Ht+6]=Le[ii[0]],zt.array[Ht+7]=Le[ii[1]],zt.array[Ht+8]=Le[ii[2]],zt.array[Ht+9]=De[ii[0]],zt.array[Ht+10]=De[ii[1]],zt.array[Ht+11]=De[ii[2]],Ht+=12}else if("faces"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Le=Pe=Ce=wt=zt.value[Yt[Ee]],zt.array[Ht]=Ce[ii[0]],zt.array[Ht+1]=Ce[ii[1]],zt.array[Ht+2]=Ce[ii[2]],zt.array[Ht+3]=Pe[ii[0]],zt.array[Ht+4]=Pe[ii[1]],zt.array[Ht+5]=Pe[ii[2]],zt.array[Ht+6]=Le[ii[0]],zt.array[Ht+7]=Le[ii[1]],zt.array[Ht+8]=Le[ii[2]],Ht+=9;for(Ee=0,me=qt.length;Ee<me;Ee++)De=Le=Pe=Ce=wt=zt.value[qt[Ee]],zt.array[Ht]=Ce[ii[0]],zt.array[Ht+1]=Ce[ii[1]],zt.array[Ht+2]=Ce[ii[2]],zt.array[Ht+3]=Pe[ii[0]],zt.array[Ht+4]=Pe[ii[1]],zt.array[Ht+5]=Pe[ii[2]],zt.array[Ht+6]=Le[ii[0]],zt.array[Ht+7]=Le[ii[1]],zt.array[Ht+8]=Le[ii[2]],zt.array[Ht+9]=De[ii[0]],zt.array[Ht+10]=De[ii[1]],zt.array[Ht+11]=De[ii[2]],Ht+=12}else if("faceVertices"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Ce=(wt=zt.value[Yt[Ee]])[0],Pe=wt[1],Le=wt[2],zt.array[Ht]=Ce[ii[0]],zt.array[Ht+1]=Ce[ii[1]],zt.array[Ht+2]=Ce[ii[2]],zt.array[Ht+3]=Pe[ii[0]],zt.array[Ht+4]=Pe[ii[1]],zt.array[Ht+5]=Pe[ii[2]],zt.array[Ht+6]=Le[ii[0]],zt.array[Ht+7]=Le[ii[1]],zt.array[Ht+8]=Le[ii[2]],Ht+=9;for(Ee=0,me=qt.length;Ee<me;Ee++)Ce=(wt=zt.value[qt[Ee]])[0],Pe=wt[1],Le=wt[2],De=wt[3],zt.array[Ht]=Ce[ii[0]],zt.array[Ht+1]=Ce[ii[1]],zt.array[Ht+2]=Ce[ii[2]],zt.array[Ht+3]=Pe[ii[0]],zt.array[Ht+4]=Pe[ii[1]],zt.array[Ht+5]=Pe[ii[2]],zt.array[Ht+6]=Le[ii[0]],zt.array[Ht+7]=Le[ii[1]],zt.array[Ht+8]=Le[ii[2]],zt.array[Ht+9]=De[ii[0]],zt.array[Ht+10]=De[ii[1]],zt.array[Ht+11]=De[ii[2]],Ht+=12}}else if(4===zt.size)if(void 0===zt.boundTo||"vertices"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Te=Kt[Yt[Ee]],Ce=zt.value[Te.a],Pe=zt.value[Te.b],Le=zt.value[Te.c],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Ce.z,zt.array[Ht+3]=Ce.w,zt.array[Ht+4]=Pe.x,zt.array[Ht+5]=Pe.y,zt.array[Ht+6]=Pe.z,zt.array[Ht+7]=Pe.w,zt.array[Ht+8]=Le.x,zt.array[Ht+9]=Le.y,zt.array[Ht+10]=Le.z,zt.array[Ht+11]=Le.w,Ht+=12;for(Ee=0,me=qt.length;Ee<me;Ee++)Te=Kt[qt[Ee]],Ce=zt.value[Te.a],Pe=zt.value[Te.b],Le=zt.value[Te.c],De=zt.value[Te.d],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Ce.z,zt.array[Ht+3]=Ce.w,zt.array[Ht+4]=Pe.x,zt.array[Ht+5]=Pe.y,zt.array[Ht+6]=Pe.z,zt.array[Ht+7]=Pe.w,zt.array[Ht+8]=Le.x,zt.array[Ht+9]=Le.y,zt.array[Ht+10]=Le.z,zt.array[Ht+11]=Le.w,zt.array[Ht+12]=De.x,zt.array[Ht+13]=De.y,zt.array[Ht+14]=De.z,zt.array[Ht+15]=De.w,Ht+=16}else if("faces"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Le=Pe=Ce=wt=zt.value[Yt[Ee]],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Ce.z,zt.array[Ht+3]=Ce.w,zt.array[Ht+4]=Pe.x,zt.array[Ht+5]=Pe.y,zt.array[Ht+6]=Pe.z,zt.array[Ht+7]=Pe.w,zt.array[Ht+8]=Le.x,zt.array[Ht+9]=Le.y,zt.array[Ht+10]=Le.z,zt.array[Ht+11]=Le.w,Ht+=12;for(Ee=0,me=qt.length;Ee<me;Ee++)De=Le=Pe=Ce=wt=zt.value[qt[Ee]],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Ce.z,zt.array[Ht+3]=Ce.w,zt.array[Ht+4]=Pe.x,zt.array[Ht+5]=Pe.y,zt.array[Ht+6]=Pe.z,zt.array[Ht+7]=Pe.w,zt.array[Ht+8]=Le.x,zt.array[Ht+9]=Le.y,zt.array[Ht+10]=Le.z,zt.array[Ht+11]=Le.w,zt.array[Ht+12]=De.x,zt.array[Ht+13]=De.y,zt.array[Ht+14]=De.z,zt.array[Ht+15]=De.w,Ht+=16}else if("faceVertices"===zt.boundTo){for(Ee=0,me=Yt.length;Ee<me;Ee++)Ce=(wt=zt.value[Yt[Ee]])[0],Pe=wt[1],Le=wt[2],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Ce.z,zt.array[Ht+3]=Ce.w,zt.array[Ht+4]=Pe.x,zt.array[Ht+5]=Pe.y,zt.array[Ht+6]=Pe.z,zt.array[Ht+7]=Pe.w,zt.array[Ht+8]=Le.x,zt.array[Ht+9]=Le.y,zt.array[Ht+10]=Le.z,zt.array[Ht+11]=Le.w,Ht+=12;for(Ee=0,me=qt.length;Ee<me;Ee++)Ce=(wt=zt.value[qt[Ee]])[0],Pe=wt[1],Le=wt[2],De=wt[3],zt.array[Ht]=Ce.x,zt.array[Ht+1]=Ce.y,zt.array[Ht+2]=Ce.z,zt.array[Ht+3]=Ce.w,zt.array[Ht+4]=Pe.x,zt.array[Ht+5]=Pe.y,zt.array[Ht+6]=Pe.z,zt.array[Ht+7]=Pe.w,zt.array[Ht+8]=Le.x,zt.array[Ht+9]=Le.y,zt.array[Ht+10]=Le.z,zt.array[Ht+11]=Le.w,zt.array[Ht+12]=De.x,zt.array[Ht+13]=De.y,zt.array[Ht+14]=De.z,zt.array[Ht+15]=De.w,Ht+=16}_e.bindBuffer(_e.ARRAY_BUFFER,zt.buffer),_e.bufferData(_e.ARRAY_BUFFER,zt.array,he)}le&&(delete ae.__inittedArrays,delete ae.__colorArray,delete ae.__normalArray,delete ae.__tangentArray,delete ae.__uvArray,delete ae.__uv2Array,delete ae.__faceArray,delete ae.__vertexArray,delete ae.__lineArray,delete ae.__skinIndexArray,delete ae.__skinWeightArray)}}ee.verticesNeedUpdate=!1,ee.morphTargetsNeedUpdate=!1,ee.elementsNeedUpdate=!1,ee.uvsNeedUpdate=!1,ee.normalsNeedUpdate=!1,ee.colorsNeedUpdate=!1,ee.tangentsNeedUpdate=!1,ee.buffersNeedUpdate=!1,re.attributes&&T(re)}else if($ instanceof THREE.Ribbon){if(ie=(re=n($,ee)).attributes&&g(re),ee.verticesNeedUpdate||ee.colorsNeedUpdate||ee.normalsNeedUpdate||ie){var ri=ee,ni=_e.DYNAMIC_DRAW,oi=void 0,ai=void 0,si=void 0,hi=void 0,li=void 0,ci=void 0,pi=void 0,ui=void 0,fi=void 0,di=void 0,Ei=void 0,mi=void 0,gi=void 0,Ti=ri.vertices,vi=ri.colors,yi=ri.normals,Ri=Ti.length,xi=vi.length,Hi=yi.length,wi=ri.__vertexArray,_i=ri.__colorArray,bi=ri.__normalArray,Si=ri.colorsNeedUpdate,Mi=ri.normalsNeedUpdate,Ai=ri.__webglCustomAttributesList;if(ri.verticesNeedUpdate){for(oi=0;oi<Ri;oi++)hi=Ti[oi],wi[li=3*oi]=hi.x,wi[li+1]=hi.y,wi[li+2]=hi.z;_e.bindBuffer(_e.ARRAY_BUFFER,ri.__webglVertexBuffer),_e.bufferData(_e.ARRAY_BUFFER,wi,ni)}if(Si){for(ai=0;ai<xi;ai++)ci=vi[ai],_i[li=3*ai]=ci.r,_i[li+1]=ci.g,_i[li+2]=ci.b;_e.bindBuffer(_e.ARRAY_BUFFER,ri.__webglColorBuffer),_e.bufferData(_e.ARRAY_BUFFER,_i,ni)}if(Mi){for(si=0;si<Hi;si++)pi=yi[si],bi[li=3*si]=pi.x,bi[li+1]=pi.y,bi[li+2]=pi.z;_e.bindBuffer(_e.ARRAY_BUFFER,ri.__webglNormalBuffer),_e.bufferData(_e.ARRAY_BUFFER,bi,ni)}if(Ai)for(ui=0,fi=Ai.length;ui<fi;ui++)if((mi=Ai[ui]).needsUpdate&&(void 0===mi.boundTo||"vertices"===mi.boundTo)){if(li=0,Ei=mi.value.length,1===mi.size)for(di=0;di<Ei;di++)mi.array[di]=mi.value[di];else if(2===mi.size)for(di=0;di<Ei;di++)gi=mi.value[di],mi.array[li]=gi.x,mi.array[li+1]=gi.y,li+=2;else if(3===mi.size)if("c"===mi.type)for(di=0;di<Ei;di++)gi=mi.value[di],mi.array[li]=gi.r,mi.array[li+1]=gi.g,mi.array[li+2]=gi.b,li+=3;else for(di=0;di<Ei;di++)gi=mi.value[di],mi.array[li]=gi.x,mi.array[li+1]=gi.y,mi.array[li+2]=gi.z,li+=3;else if(4===mi.size)for(di=0;di<Ei;di++)gi=mi.value[di],mi.array[li]=gi.x,mi.array[li+1]=gi.y,mi.array[li+2]=gi.z,mi.array[li+3]=gi.w,li+=4;_e.bindBuffer(_e.ARRAY_BUFFER,mi.buffer),_e.bufferData(_e.ARRAY_BUFFER,mi.array,ni)}}ee.verticesNeedUpdate=!1,ee.colorsNeedUpdate=!1,ee.normalsNeedUpdate=!1,re.attributes&&T(re)}else if($ instanceof THREE.Line)if(ee instanceof THREE.BufferGeometry)(ee.verticesNeedUpdate||ee.colorsNeedUpdate)&&h(ee,_e.DYNAMIC_DRAW,!ee.dynamic),ee.verticesNeedUpdate=!1,ee.colorsNeedUpdate=!1;else{if(ie=(re=n($,ee)).attributes&&g(re),ee.verticesNeedUpdate||ee.colorsNeedUpdate||ee.lineDistancesNeedUpdate||ie){var Ci=ee,Pi=_e.DYNAMIC_DRAW,Li=void 0,Di=void 0,Fi=void 0,Ui=void 0,zi=void 0,Vi=void 0,Ni=Ci.vertices,Bi=Ci.colors,Oi=Ci.lineDistances,Ii=Ni.length,Gi=Bi.length,ki=Oi.length,Wi=Ci.__vertexArray,ji=Ci.__colorArray,Xi=Ci.__lineDistanceArray,Yi=Ci.colorsNeedUpdate,qi=Ci.lineDistancesNeedUpdate,Ki=Ci.__webglCustomAttributesList,Qi=void 0,Zi=void 0,Ji=void 0,$i=void 0,er=void 0,tr=void 0;if(Ci.verticesNeedUpdate){for(Li=0;Li<Ii;Li++)Ui=Ni[Li],Wi[zi=3*Li]=Ui.x,Wi[zi+1]=Ui.y,Wi[zi+2]=Ui.z;_e.bindBuffer(_e.ARRAY_BUFFER,Ci.__webglVertexBuffer),_e.bufferData(_e.ARRAY_BUFFER,Wi,Pi)}if(Yi){for(Di=0;Di<Gi;Di++)Vi=Bi[Di],ji[zi=3*Di]=Vi.r,ji[zi+1]=Vi.g,ji[zi+2]=Vi.b;_e.bindBuffer(_e.ARRAY_BUFFER,Ci.__webglColorBuffer),_e.bufferData(_e.ARRAY_BUFFER,ji,Pi)}if(qi){for(Fi=0;Fi<ki;Fi++)Xi[Fi]=Oi[Fi];_e.bindBuffer(_e.ARRAY_BUFFER,Ci.__webglLineDistanceBuffer),_e.bufferData(_e.ARRAY_BUFFER,Xi,Pi)}if(Ki)for(Qi=0,Zi=Ki.length;Qi<Zi;Qi++)if((tr=Ki[Qi]).needsUpdate&&(void 0===tr.boundTo||"vertices"===tr.boundTo)){if(zi=0,$i=tr.value.length,1===tr.size)for(Ji=0;Ji<$i;Ji++)tr.array[Ji]=tr.value[Ji];else if(2===tr.size)for(Ji=0;Ji<$i;Ji++)er=tr.value[Ji],tr.array[zi]=er.x,tr.array[zi+1]=er.y,zi+=2;else if(3===tr.size)if("c"===tr.type)for(Ji=0;Ji<$i;Ji++)er=tr.value[Ji],tr.array[zi]=er.r,tr.array[zi+1]=er.g,tr.array[zi+2]=er.b,zi+=3;else for(Ji=0;Ji<$i;Ji++)er=tr.value[Ji],tr.array[zi]=er.x,tr.array[zi+1]=er.y,tr.array[zi+2]=er.z,zi+=3;else if(4===tr.size)for(Ji=0;Ji<$i;Ji++)er=tr.value[Ji],tr.array[zi]=er.x,tr.array[zi+1]=er.y,tr.array[zi+2]=er.z,tr.array[zi+3]=er.w,zi+=4;_e.bindBuffer(_e.ARRAY_BUFFER,tr.buffer),_e.bufferData(_e.ARRAY_BUFFER,tr.array,Pi)}}ee.verticesNeedUpdate=!1,ee.colorsNeedUpdate=!1,ee.lineDistancesNeedUpdate=!1,re.attributes&&T(re)}else if($ instanceof THREE.ParticleSystem)if(ee instanceof THREE.BufferGeometry)(ee.verticesNeedUpdate||ee.colorsNeedUpdate)&&h(ee,_e.DYNAMIC_DRAW,!ee.dynamic),ee.verticesNeedUpdate=!1,ee.colorsNeedUpdate=!1;else{if(ie=(re=n($,ee)).attributes&&g(re),ee.verticesNeedUpdate||ee.colorsNeedUpdate||$.sortParticles||ie){var ir=ee,rr=_e.DYNAMIC_DRAW,nr=$,or=void 0,ar=void 0,sr=void 0,hr=void 0,lr=void 0,cr=void 0,pr=ir.vertices,ur=pr.length,fr=ir.colors,dr=fr.length,Er=ir.__vertexArray,mr=ir.__colorArray,gr=ir.__sortArray,Tr=ir.verticesNeedUpdate,vr=ir.colorsNeedUpdate,yr=ir.__webglCustomAttributesList,Rr=void 0,xr=void 0,Hr=void 0,wr=void 0,_r=void 0,br=void 0;if(nr.sortParticles){for(ye.copy(ve),ye.multiply(nr.matrixWorld),or=0;or<ur;or++)sr=pr[or],Re.copy(sr),Re.applyProjection(ye),gr[or]=[Re.z,or];for(gr.sort(u),or=0;or<ur;or++)sr=pr[gr[or][1]],Er[hr=3*or]=sr.x,Er[hr+1]=sr.y,Er[hr+2]=sr.z;for(ar=0;ar<dr;ar++)hr=3*ar,cr=fr[gr[ar][1]],mr[hr]=cr.r,mr[hr+1]=cr.g,mr[hr+2]=cr.b;if(yr)for(Rr=0,xr=yr.length;Rr<xr;Rr++)if(void 0===(br=yr[Rr]).boundTo||"vertices"===br.boundTo)if(hr=0,wr=br.value.length,1===br.size)for(Hr=0;Hr<wr;Hr++)lr=gr[Hr][1],br.array[Hr]=br.value[lr];else if(2===br.size)for(Hr=0;Hr<wr;Hr++)lr=gr[Hr][1],_r=br.value[lr],br.array[hr]=_r.x,br.array[hr+1]=_r.y,hr+=2;else if(3===br.size)if("c"===br.type)for(Hr=0;Hr<wr;Hr++)lr=gr[Hr][1],_r=br.value[lr],br.array[hr]=_r.r,br.array[hr+1]=_r.g,br.array[hr+2]=_r.b,hr+=3;else for(Hr=0;Hr<wr;Hr++)lr=gr[Hr][1],_r=br.value[lr],br.array[hr]=_r.x,br.array[hr+1]=_r.y,br.array[hr+2]=_r.z,hr+=3;else if(4===br.size)for(Hr=0;Hr<wr;Hr++)lr=gr[Hr][1],_r=br.value[lr],br.array[hr]=_r.x,br.array[hr+1]=_r.y,br.array[hr+2]=_r.z,br.array[hr+3]=_r.w,hr+=4}else{if(Tr)for(or=0;or<ur;or++)sr=pr[or],Er[hr=3*or]=sr.x,Er[hr+1]=sr.y,Er[hr+2]=sr.z;if(vr)for(ar=0;ar<dr;ar++)cr=fr[ar],mr[hr=3*ar]=cr.r,mr[hr+1]=cr.g,mr[hr+2]=cr.b;if(yr)for(Rr=0,xr=yr.length;Rr<xr;Rr++)if((br=yr[Rr]).needsUpdate&&(void 0===br.boundTo||"vertices"===br.boundTo))if(wr=br.value.length,hr=0,1===br.size)for(Hr=0;Hr<wr;Hr++)br.array[Hr]=br.value[Hr];else if(2===br.size)for(Hr=0;Hr<wr;Hr++)_r=br.value[Hr],br.array[hr]=_r.x,br.array[hr+1]=_r.y,hr+=2;else if(3===br.size)if("c"===br.type)for(Hr=0;Hr<wr;Hr++)_r=br.value[Hr],br.array[hr]=_r.r,br.array[hr+1]=_r.g,br.array[hr+2]=_r.b,hr+=3;else for(Hr=0;Hr<wr;Hr++)_r=br.value[Hr],br.array[hr]=_r.x,br.array[hr+1]=_r.y,br.array[hr+2]=_r.z,hr+=3;else if(4===br.size)for(Hr=0;Hr<wr;Hr++)_r=br.value[Hr],br.array[hr]=_r.x,br.array[hr+1]=_r.y,br.array[hr+2]=_r.z,br.array[hr+3]=_r.w,hr+=4}if((Tr||nr.sortParticles)&&(_e.bindBuffer(_e.ARRAY_BUFFER,ir.__webglVertexBuffer),_e.bufferData(_e.ARRAY_BUFFER,Er,rr)),(vr||nr.sortParticles)&&(_e.bindBuffer(_e.ARRAY_BUFFER,ir.__webglColorBuffer),_e.bufferData(_e.ARRAY_BUFFER,mr,rr)),yr)for(Rr=0,xr=yr.length;Rr<xr;Rr++)((br=yr[Rr]).needsUpdate||nr.sortParticles)&&(_e.bindBuffer(_e.ARRAY_BUFFER,br.buffer),_e.bufferData(_e.ARRAY_BUFFER,br.array,rr))}ee.verticesNeedUpdate=!1,ee.colorsNeedUpdate=!1,re.attributes&&T(re)}}},this.initMaterial=function(e,t,i,r){var n,o,a,s,h,l,c,p,u,f,d,E;if(e.addEventListener("dispose",je),e instanceof THREE.MeshDepthMaterial?u="depth":e instanceof THREE.MeshNormalMaterial?u="normal":e instanceof THREE.MeshBasicMaterial?u="basic":e instanceof THREE.MeshLambertMaterial?u="lambert":e instanceof THREE.MeshPhongMaterial?u="phong":e instanceof THREE.LineBasicMaterial?u="basic":e instanceof THREE.LineDashedMaterial?u="dashed":e instanceof THREE.ParticleBasicMaterial&&(u="particle_basic"),u){var m=THREE.ShaderLib[u];e.uniforms=THREE.UniformsUtils.clone(m.uniforms),e.vertexShader=m.vertexShader,e.fragmentShader=m.fragmentShader}for(n=a=d=E=m=0,o=t.length;n<o;n++)(f=t[n]).onlyShadow||(f instanceof THREE.DirectionalLight&&a++,f instanceof THREE.PointLight&&d++,f instanceof THREE.SpotLight&&E++,f instanceof THREE.HemisphereLight&&m++);for(n=a,o=d,a=E,s=m,m=f=0,E=t.length;m<E;m++)(d=t[m]).castShadow&&(d instanceof THREE.SpotLight&&f++,d instanceof THREE.DirectionalLight&&!d.shadowCascade&&f++);p=f,Ue&&r&&r.useVertexTexture?c=1024:(t=_e.getParameter(_e.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&((t=Math.min(r.bones.length,t))<r.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),c=t);e:{d=e.fragmentShader,E=e.vertexShader,m=e.uniforms,t=e.attributes,f=e.defines;var i={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:c,useVertexTexture:Ue&&r&&r.useVertexTexture,boneTextureWidth:r&&r.boneTextureWidth,boneTextureHeight:r&&r.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,
maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:p,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},g,T,v,r=[],y;for(T in u?r.push(u):(r.push(d),r.push(E)),f)r.push(T),r.push(f[T]);for(g in i)r.push(g),r.push(i[g]);for(u=r.join(),g=0,T=W.length;g<T;g++)if((r=W[g]).code===u){r.usedTimes++,l=r.program;break e}for(v in g="SHADOWMAP_TYPE_BASIC",i.shadowMapType===THREE.PCFShadowMap?g="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(g="SHADOWMAP_TYPE_PCF_SOFT"),T=[],f)!1!==(r=f[v])&&(r="#define "+v+" "+r,T.push(r));for(y in r=T.join("\n"),v=_e.createProgram(),T=["precision "+U+" float;",r,Fe?"#define VERTEX_TEXTURES":"",k.gammaInput?"#define GAMMA_INPUT":"",k.gammaOutput?"#define GAMMA_OUTPUT":"",k.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.boneTextureWidth?"#define N_BONE_PIXEL_X "+i.boneTextureWidth.toFixed(1):"",i.boneTextureHeight?"#define N_BONE_PIXEL_Y "+i.boneTextureHeight.toFixed(1):"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),g=A("fragment",(g=["precision "+U+" float;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",r,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",k.gammaInput?"#define GAMMA_INPUT":"",k.gammaOutput?"#define GAMMA_OUTPUT":"",k.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"))+d),T=A("vertex",T+E),_e.attachShader(v,T),_e.attachShader(v,g),_e.linkProgram(v),_e.getProgramParameter(v,_e.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+_e.getProgramParameter(v,_e.VALIDATE_STATUS)+", gl error ["+_e.getError()+"]"),_e.deleteShader(g),_e.deleteShader(T),v.uniforms={},v.attributes={},g="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),i.useVertexTexture?g.push("boneTexture"):g.push("boneGlobalMatrices"),m)g.push(y);for(y=g,g=0,T=y.length;g<T;g++)m=y[g],v.uniforms[m]=_e.getUniformLocation(v,m);for(g="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),y=0;y<i.maxMorphTargets;y++)g.push("morphTarget"+y);for(y=0;y<i.maxMorphNormals;y++)g.push("morphNormal"+y);for(l in t)g.push(l);for(y=0,t=(l=g).length;y<t;y++)g=l[y],v.attributes[g]=_e.getAttribLocation(v,g);v.id=j++,W.push({program:v,code:u,usedTimes:1}),k.info.memory.programs=W.length,l=v}if(e.program=l,y=e.program.attributes,e.morphTargets)for(e.numSupportedMorphTargets=0,t="morphTarget",l=0;l<this.maxMorphTargets;l++)0<=y[v=t+l]&&e.numSupportedMorphTargets++;if(e.morphNormals)for(e.numSupportedMorphNormals=0,t="morphNormal",l=0;l<this.maxMorphNormals;l++)0<=y[v=t+l]&&e.numSupportedMorphNormals++;for(h in e.uniformsList=[],e.uniforms)e.uniformsList.push([e.uniforms[h],h])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?_e.disable(_e.CULL_FACE):(t===THREE.FrontFaceDirectionCW?_e.frontFace(_e.CW):_e.frontFace(_e.CCW),e===THREE.CullFaceBack?_e.cullFace(_e.BACK):e===THREE.CullFaceFront?_e.cullFace(_e.FRONT):_e.cullFace(_e.FRONT_AND_BACK),_e.enable(_e.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,e=e.side===THREE.BackSide;$!==t&&(t?_e.disable(_e.CULL_FACE):_e.enable(_e.CULL_FACE),$=t),ee!==e&&(e?_e.frontFace(_e.CW):_e.frontFace(_e.CCW),ee=e)},this.setDepthTest=function(e){oe!==e&&(e?_e.enable(_e.DEPTH_TEST):_e.disable(_e.DEPTH_TEST),oe=e)},this.setDepthWrite=function(e){ae!==e&&(_e.depthMask(e),ae=e)},this.setBlending=function(e,t,i,r){e!==te&&(e===THREE.NoBlending?_e.disable(_e.BLEND):e===THREE.AdditiveBlending?(_e.enable(_e.BLEND),_e.blendEquation(_e.FUNC_ADD),_e.blendFunc(_e.SRC_ALPHA,_e.ONE)):e===THREE.SubtractiveBlending?(_e.enable(_e.BLEND),_e.blendEquation(_e.FUNC_ADD),_e.blendFunc(_e.ZERO,_e.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(_e.enable(_e.BLEND),_e.blendEquation(_e.FUNC_ADD),_e.blendFunc(_e.ZERO,_e.SRC_COLOR)):e===THREE.CustomBlending?_e.enable(_e.BLEND):(_e.enable(_e.BLEND),_e.blendEquationSeparate(_e.FUNC_ADD,_e.FUNC_ADD),_e.blendFuncSeparate(_e.SRC_ALPHA,_e.ONE_MINUS_SRC_ALPHA,_e.ONE,_e.ONE_MINUS_SRC_ALPHA)),te=e),e===THREE.CustomBlending?(t!==ie&&(_e.blendEquation(D(t)),ie=t),(i!==re||r!==ne)&&(_e.blendFunc(D(i),D(r)),re=i,ne=r)):ne=re=ie=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",ke),e.__webglTexture=_e.createTexture(),k.info.memory.textures++),_e.activeTexture(_e.TEXTURE0+t),_e.bindTexture(_e.TEXTURE_2D,e.__webglTexture),_e.pixelStorei(_e.UNPACK_FLIP_Y_WEBGL,e.flipY),_e.pixelStorei(_e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),_e.pixelStorei(_e.UNPACK_ALIGNMENT,e.unpackAlignment);var i=e.image,r=0==(i.width&i.width-1)&&0==(i.height&i.height-1),n=D(e.format),o=D(e.type);C(_e.TEXTURE_2D,e,r);var a=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<a.length&&r){for(var s=0,h=a.length;s<h;s++)i=a[s],_e.texImage2D(_e.TEXTURE_2D,s,n,i.width,i.height,0,n,o,i.data);e.generateMipmaps=!1}else _e.texImage2D(_e.TEXTURE_2D,0,n,i.width,i.height,0,n,o,i.data);else if(e instanceof THREE.CompressedTexture)for(s=0,h=a.length;s<h;s++)i=a[s],_e.compressedTexImage2D(_e.TEXTURE_2D,s,n,i.width,i.height,0,i.data);else if(0<a.length&&r){for(s=0,h=a.length;s<h;s++)i=a[s],_e.texImage2D(_e.TEXTURE_2D,s,n,n,o,i);e.generateMipmaps=!1}else _e.texImage2D(_e.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&r&&_e.generateMipmap(_e.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else _e.activeTexture(_e.TEXTURE0+t),_e.bindTexture(_e.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",We),e.__webglTexture=_e.createTexture(),k.info.memory.textures++;var i=0==(e.width&e.width-1)&&0==(e.height&e.height-1),r=D(e.format),n=D(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],_e.bindTexture(_e.TEXTURE_CUBE_MAP,e.__webglTexture),C(_e.TEXTURE_CUBE_MAP,e,i);for(var o=0;6>o;o++){e.__webglFramebuffer[o]=_e.createFramebuffer(),e.__webglRenderbuffer[o]=_e.createRenderbuffer(),_e.texImage2D(_e.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,r,e.width,e.height,0,r,n,null);var a=e,s=_e.TEXTURE_CUBE_MAP_POSITIVE_X+o;_e.bindFramebuffer(_e.FRAMEBUFFER,e.__webglFramebuffer[o]),_e.framebufferTexture2D(_e.FRAMEBUFFER,_e.COLOR_ATTACHMENT0,s,a.__webglTexture,0),P(e.__webglRenderbuffer[o],e)}i&&_e.generateMipmap(_e.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=_e.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:_e.createRenderbuffer(),_e.bindTexture(_e.TEXTURE_2D,e.__webglTexture),C(_e.TEXTURE_2D,e,i),_e.texImage2D(_e.TEXTURE_2D,0,r,e.width,e.height,0,r,n,null),r=_e.TEXTURE_2D,_e.bindFramebuffer(_e.FRAMEBUFFER,e.__webglFramebuffer),_e.framebufferTexture2D(_e.FRAMEBUFFER,_e.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?_e.framebufferRenderbuffer(_e.FRAMEBUFFER,_e.DEPTH_ATTACHMENT,_e.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&_e.framebufferRenderbuffer(_e.FRAMEBUFFER,_e.DEPTH_STENCIL_ATTACHMENT,_e.RENDERBUFFER,e.__webglRenderbuffer):P(e.__webglRenderbuffer,e),i&&_e.generateMipmap(_e.TEXTURE_2D);t?_e.bindTexture(_e.TEXTURE_CUBE_MAP,null):_e.bindTexture(_e.TEXTURE_2D,null),_e.bindRenderbuffer(_e.RENDERBUFFER,null),_e.bindFramebuffer(_e.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,e=e.height,n=r=0):(t=null,i=fe,e=de,r=pe,n=ue),t!==Y&&(_e.bindFramebuffer(_e.FRAMEBUFFER,t),_e.viewport(r,n,i,e),Y=t),Ee=i,me=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,i){THREE.EventDispatcher.call(this),this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.GeometryUtils={merge:function(e,t){var i,r,n=e.vertices.length,o=t instanceof THREE.Mesh?t.geometry:t,a=e.vertices,s=o.vertices,h=e.faces,l=o.faces,c=e.faceVertexUvs[0],o=o.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,(r=new THREE.Matrix3).getInverse(i),r.transpose());for(var p=0,u=s.length;p<u;p++){var f=s[p].clone();i&&f.applyMatrix4(i),a.push(f)}for(p=0,u=l.length;p<u;p++){var f,d,E,m=(f=l[p]).vertexNormals,g=f.vertexColors;for(f instanceof THREE.Face3?d=new THREE.Face3(f.a+n,f.b+n,f.c+n):f instanceof THREE.Face4&&(d=new THREE.Face4(f.a+n,f.b+n,f.c+n,f.d+n)),d.normal.copy(f.normal),r&&d.normal.applyMatrix3(r).normalize(),a=0,s=m.length;a<s;a++)E=m[a].clone(),r&&E.applyMatrix3(r).normalize(),d.vertexNormals.push(E);for(d.color.copy(f.color),a=0,s=g.length;a<s;a++)E=g[a],d.vertexColors.push(E.clone());d.materialIndex=f.materialIndex,d.centroid.copy(f.centroid),i&&d.centroid.applyMatrix4(i),h.push(d)}for(p=0,u=o.length;p<u;p++){for(r=[],a=0,s=(i=o[p]).length;a<s;a++)r.push(new THREE.Vector2(i[a].x,i[a].y));c.push(r)}},removeMaterials:function(e,t){for(var i={},r=0,n=t.length;r<n;r++)i[t[r]]=!0;for(var o,a=[],r=0,n=e.faces.length;r<n;r++)(o=e.faces[r]).materialIndex in i||a.push(o);e.faces=a},randomPointInTriangle:function(e,t,i){var r,n,o,a=new THREE.Vector3,s=THREE.GeometryUtils.__v1;return 1<(r=THREE.GeometryUtils.random())+(n=THREE.GeometryUtils.random())&&(r=1-r,n=1-n),o=1-r-n,a.copy(e),a.multiplyScalar(r),s.copy(t),s.multiplyScalar(n),a.add(s),s.copy(i),s.multiplyScalar(o),a.add(s),a},randomPointInFace:function(e,t,i){var r,n,o;if(e instanceof THREE.Face3)return r=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(r,n,o);if(e instanceof THREE.Face4){r=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c];var t=t.vertices[e.d],a;return i?e._area1&&e._area2?(i=e._area1,a=e._area2):(i=THREE.GeometryUtils.triangleArea(r,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t),e._area1=i,e._area2=a):(i=THREE.GeometryUtils.triangleArea(r,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t)),THREE.GeometryUtils.random()*(i+a)<i?THREE.GeometryUtils.randomPointInTriangle(r,n,t):THREE.GeometryUtils.randomPointInTriangle(n,o,t)}},randomPointsInGeometry:function(e,t){function i(e){function t(i,r){if(r<i)return i;var n=i+Math.floor((r-i)/2);return l[n]>e?t(i,n-1):l[n]<e?t(n+1,r):n}return t(0,l.length-1)}var r,n,o=e.faces,a=e.vertices,s=o.length,h=0,l=[],c,p,u,f;for(n=0;n<s;n++)(r=o[n])instanceof THREE.Face3?(c=a[r.a],p=a[r.b],u=a[r.c],r._area=THREE.GeometryUtils.triangleArea(c,p,u)):r instanceof THREE.Face4&&(c=a[r.a],p=a[r.b],u=a[r.c],f=a[r.d],r._area1=THREE.GeometryUtils.triangleArea(c,p,f),r._area2=THREE.GeometryUtils.triangleArea(p,u,f),r._area=r._area1+r._area2),h+=r._area,l[n]=h;for(r=[],n=0;n<t;n++)a=i(a=THREE.GeometryUtils.random()*h),r[n]=THREE.GeometryUtils.randomPointInFace(o[a],e,!0);return r},triangleArea:function(e,t,i){var r=THREE.GeometryUtils.__v1,n=THREE.GeometryUtils.__v2;return r.subVectors(t,e),n.subVectors(i,e),r.cross(n),.5*r.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,i=new THREE.Vector3;return i.addVectors(t.min,t.max),i.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(i.x,i.y,i.z)),e.computeBoundingBox(),i},normalizeUVs:function(e){for(var e,t=0,i=(e=e.faceVertexUvs[0]).length;t<i;t++)for(var r=e[t],n=0,o=r.length;n<o;n++)1!==r[n].x&&(r[n].x-=Math.floor(r[n].x)),1!==r[n].y&&(r[n].y-=Math.floor(r[n].y))},triangulateQuads:function(e){var t,i,r,n,o=[],a=[],s=[];for(t=0,i=e.faceUvs.length;t<i;t++)a[t]=[];for(t=0,i=e.faceVertexUvs.length;t<i;t++)s[t]=[];for(t=0,i=e.faces.length;t<i;t++)if((r=e.faces[t])instanceof THREE.Face4){n=r.a;var h=r.b,l=r.c,c=r.d,p=new THREE.Face3,u=new THREE.Face3;for(p.color.copy(r.color),u.color.copy(r.color),p.materialIndex=r.materialIndex,u.materialIndex=r.materialIndex,p.a=n,p.b=h,p.c=c,u.a=h,u.b=l,u.c=c,4===r.vertexColors.length&&(p.vertexColors[0]=r.vertexColors[0].clone(),p.vertexColors[1]=r.vertexColors[1].clone(),p.vertexColors[2]=r.vertexColors[3].clone(),u.vertexColors[0]=r.vertexColors[1].clone(),u.vertexColors[1]=r.vertexColors[2].clone(),u.vertexColors[2]=r.vertexColors[3].clone()),o.push(p,u),r=0,n=e.faceVertexUvs.length;r<n;r++)e.faceVertexUvs[r].length&&(h=(p=e.faceVertexUvs[r][t])[1],l=p[2],c=p[3],p=[p[0].clone(),h.clone(),c.clone()],h=[h.clone(),l.clone(),c.clone()],s[r].push(p,h));for(r=0,n=e.faceUvs.length;r<n;r++)e.faceUvs[r].length&&(h=e.faceUvs[r][t],a[r].push(h,h))}else{for(o.push(r),r=0,n=e.faceUvs.length;r<n;r++)a[r].push(e.faceUvs[r][t]);for(r=0,n=e.faceVertexUvs.length;r<n;r++)s[r].push(e.faceVertexUvs[r][t])}e.faces=o,e.faceUvs=a,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},setMaterialIndex:function(e,t,i,r){for(e=e.faces,r=r||e.length-1,i=i||0;i<=r;i++)e[i].materialIndex=t}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i,r){var n=new Image,o=new THREE.Texture(n,t),t;return(t=new THREE.ImageLoader).addEventListener("load",(function(e){o.image=e.content,o.needsUpdate=!0,i&&i(o)})),t.addEventListener("error",(function(e){r&&r(e.message)})),t.crossOrigin=this.crossOrigin,t.load(e,n),o.sourceFile=e,o},loadCompressedTexture:function(e,t,i,r){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;return o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);n.format=e.format,n.mipmaps=e.mipmaps,n.image.width=e.width,n.image.height=e.height,n.generateMipmaps=!1,n.needsUpdate=!0,i&&i(n)},o.onerror=r,o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null),n},loadTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.Texture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1;for(var t=0,a=e.length;t<a;++t){var s=new Image;n[t]=s,s.onload=function(){n.loadCount+=1,6===n.loadCount&&(o.needsUpdate=!0,i&&i(o))},s.onerror=r,s.crossOrigin=this.crossOrigin,s.src=e[t]}return o},loadCompressedTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;if(o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1,t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format,t.mipmaps=r.mipmaps,t.width=r.width,t.height=r.height,n.loadCount+=1,6===n.loadCount&&(o.format=r.format,o.needsUpdate=!0,i&&i(o))}},e instanceof Array)for(var a=0,s=e.length;a<s;++a){var h={};n[a]=h;var l=new XMLHttpRequest;l.onload=t(l,h),l.onerror=r,h=e[a],l.open("GET",h,!0),l.responseType="arraybuffer",l.send(null)}else(l=new XMLHttpRequest).onload=function(){var e=THREE.ImageUtils.parseDDS(l.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,r=0;r<t;r++){n[r]={mipmaps:[]};for(var a=0;a<e.mipmapCount;a++)n[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+a]),n[r].format=e.format,n[r].width=e.width,n[r].height=e.height}o.format=e.format,o.needsUpdate=!0,i&&i(o)}},l.onerror=r,l.open("GET",e,!0),l.responseType="arraybuffer",l.send(null);return o},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},n=i("DXT1"),o=i("DXT3"),a=i("DXT5"),s,h;if(542327876!==(s=new Int32Array(e,0,31))[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(4&!s[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;switch(h=s[21]){case n:n=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case o:n=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case a:n=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(255&h,h>>8&255,h>>16&255,h>>24&255)),r}r.mipmapCount=1,131072&s[2]&&!1!==t&&(r.mipmapCount=Math.max(1,s[7])),r.isCubemap=!!(512&s[28]),r.width=s[4],r.height=s[3];for(var s=s[1]+4,o=r.width,a=r.height,h=r.isCubemap?6:1,l=0;l<h;l++){for(var c=0;c<r.mipmapCount;c++){var p=Math.max(4,o)/4*Math.max(4,a)/4*n,u={data:new Uint8Array(e,s,p),width:o,height:a};r.mipmaps.push(u),s+=p,o=Math.max(.5*o,1),a=Math.max(.5*a,1)}o=r.width,a=r.height}return r},getNormalMap:function(e,t){var i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},t=1|t,r=e.width,n=e.height,o=document.createElement("canvas");o.width=r,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,r,n).data,h=a.createImageData(r,n),l=h.data,c=0;c<r;c++)for(var p=0;p<n;p++){var u=0>p-1?0:p-1,f=p+1>n-1?n-1:p+1,d=0>c-1?0:c-1,E=c+1>r-1?r-1:c+1,m=[],g=[0,0,s[4*(p*r+c)]/255*t];for(m.push([-1,0,s[4*(p*r+d)]/255*t]),m.push([-1,-1,s[4*(u*r+d)]/255*t]),m.push([0,-1,s[4*(u*r+c)]/255*t]),m.push([1,-1,s[4*(u*r+E)]/255*t]),m.push([1,0,s[4*(p*r+E)]/255*t]),m.push([1,1,s[4*(f*r+E)]/255*t]),m.push([0,1,s[4*(f*r+c)]/255*t]),m.push([-1,1,s[4*(f*r+d)]/255*t]),u=[],d=m.length,f=0;f<d;f++){var E=m[f],T=m[(f+1)%d],E=[E[0]-g[0],E[1]-g[1],E[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];u.push(i([E[1]*T[2]-E[2]*T[1],E[2]*T[0]-E[0]*T[2],E[0]*T[1]-E[1]*T[0]]))}for(m=[0,0,0],f=0;f<u.length;f++)m[0]+=u[f][0],m[1]+=u[f][1],m[2]+=u[f][2];m[0]/=u.length,m[1]/=u.length,m[2]/=u.length,l[g=4*(p*r+c)]=(m[0]+1)/2*255|0,l[g+1]=(m[1]+1)/2*255|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(e,t,i){for(var r=e*t,n=new Uint8Array(3*r),o=Math.floor(255*i.r),a=Math.floor(255*i.g),i=Math.floor(255*i.b),s=0;s<r;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=i;return(e=new THREE.DataTexture(n,e,t,THREE.RGBFormat)).needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var i=new THREE.Object3D,r=0,n=t.length;r<n;r++)i.add(new THREE.Mesh(e,t[r]));return i},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){for(var t=this.getFace(),i=this.size/t.resolution,r=0,n=String(e).split(""),o=n.length,a=[],e=0;e<o;e++){var s=new THREE.Path,s,r=r+(s=this.extractGlyphPoints(n[e],t,i,r,s)).offset;a.push(s.path)}return{paths:a,offset:r/2}},extractGlyphPoints:function(e,t,i,r,n){var o=[],a,s,h,l,c,p,u,f,d,E,m,g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(l=(t=g._cachedOutline||(g._cachedOutline=g.o.split(" "))).length,e=0;e<l;)switch(h=t[e++],h){case"m":h=t[e++]*i+r,c=t[e++]*i,n.moveTo(h,c);break;case"l":h=t[e++]*i+r,c=t[e++]*i,n.lineTo(h,c);break;case"q":if(h=t[e++]*i+r,c=t[e++]*i,f=t[e++]*i+r,d=t[e++]*i,n.quadraticCurveTo(f,d,h,c),a=o[o.length-1])for(p=a.x,u=a.y,a=1,s=this.divisions;a<=s;a++){var T=a/s;THREE.Shape.Utils.b2(T,p,f,h),THREE.Shape.Utils.b2(T,u,d,c)}break;case"b":if(h=t[e++]*i+r,c=t[e++]*i,f=t[e++]*i+r,d=t[e++]*-i,E=t[e++]*i+r,m=t[e++]*-i,n.bezierCurveTo(h,c,f,d,E,m),a=o[o.length-1])for(p=a.x,u=a.y,a=1,s=this.divisions;a<=s;a++)T=a/s,THREE.Shape.Utils.b3(T,p,f,E,h),THREE.Shape.Utils.b3(T,u,d,m,c)}return{offset:g.ha*i,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){var t,i=void 0!==(t=t||{}).curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";for(THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=i,THREE.FontUtils.face=r,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,r=[],n=0,o=(i=THREE.FontUtils.drawText(e).paths).length;n<o;n++)Array.prototype.push.apply(r,i[n].toShapes());return r},function(e){var t=function(e){for(var t=e.length,i=0,r=t-1,n=0;n<t;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i};e.Triangulate=function(e,i){var r=e.length;if(3>r)return null;var n=[],o=[],a=[],s,h,l;if(0<t(e))for(h=0;h<r;h++)o[h]=h;else for(h=0;h<r;h++)o[h]=r-1-h;var c=2*r;for(h=r-1;2<r;){if(0>=c--){console.log("Warning, unable to triangulate polygon!");break}var p;r<=(s=h)&&(s=0),r<=(h=s+1)&&(h=0),r<=(l=h+1)&&(l=0);e:{var u=p=void 0,f=void 0,d=void 0,E=void 0,m=void 0,g=void 0,T=void 0,v=void 0,u=e[o[s]].x,f=e[o[s]].y,d=e[o[h]].x,E=e[o[h]].y,m=e[o[l]].x,g;if(1e-10>(d-u)*((g=e[o[l]].y)-f)-(E-f)*(m-u))p=!1;else{var y=void 0,R=void 0,x=void 0,H=void 0,w=void 0,_=void 0,b=void 0,S=void 0,M=void 0,A=void 0,M=S=b=v=T=void 0,y=m-d,R=g-E,x=u-m,H=f-g,w=d-u,_=E-f;for(p=0;p<r;p++)if(p!==s&&p!==h&&p!==l&&(M=(T=e[o[p]].x)-d,A=(v=e[o[p]].y)-E,b=w*(S=v-f)-_*(b=T-u),S=x*(v-=g)-H*(T-=m),0<=(M=y*A-R*M)&&0<=S&&0<=b)){p=!1;break e}p=!0}}if(p){for(n.push([e[o[s]],e[o[h]],e[o[l]]]),a.push([o[s],o[h],o[l]]),s=h,l=h+1;l<r;s++,l++)o[s]=o[l];c=2*--r}}return i?a:n},e.Triangulate.area=t}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,i=[];for(t=0;t<=e;t++)i.push(this.getPoint(t/e));return i},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,i=[];for(t=0;t<=e;t++)i.push(this.getPointAt(t/e));return i},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],i,r=this.getPoint(0),n,o=0;for(t.push(0),n=1;n<=e;n++)o+=(i=this.getPoint(n/e)).distanceTo(r),t.push(o),r=i;return this.cacheArcLengths=t},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var i=this.getLengths(),r=0,n=i.length,o;o=t||e*i[n-1];for(var a=0,s=n-1,h;a<=s;)if(0>(h=i[r=Math.floor(a+(s-a)/2)]-o))a=r+1;else{if(!(0<h)){s=r;break}s=r-1}return i[r=s]==o?r/(n-1):i=(r+(o-(a=i[r]))/(i[r+1]-a))/(n-1)},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,e;return 0>t&&(t=0),1<(e=e+1e-4)&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),(t=new THREE.Vector2(t,e)).normalize(),t},THREE.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),(t=new THREE.Vector2(t,e)).normalize(),t},THREE.SplineCurve=function(e){this.points=null==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,i=[],r=this.points,n;return n=(r.length-1)*e,n-=e=Math.floor(n),i[0]=0==e?e:e-1,i[1]=e,i[2]=e>r.length-2?r.length-1:e+1,i[3]=e>r.length-3?r.length-1:e+2,t.x=THREE.Curve.Utils.interpolate(r[i[0]].x,r[i[1]].x,r[i[2]].x,r[i[3]].x,n),t.y=THREE.Curve.Utils.interpolate(r[i[0]].y,r[i[1]].y,r[i[2]].y,r[i[3]].y,n),t},THREE.EllipseCurve=function(e,t,i,r,n,o,a){this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;return this.aClockwise||(e=1-e),t=this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,i,r,n,o){THREE.EllipseCurve.call(this,e,t,i,i,r,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,n){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*n},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},
interpolate:function(e,t,i,r,n){var e,r,o=n*n;return(2*t-2*i+(e=.5*(i-e))+(r=.5*(r-t)))*n*o+(-3*t+3*i-2*e-r)*o+e*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create((function(e,t){this.v1=e,this.v2=t}),(function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t})),THREE.QuadraticBezierCurve3=THREE.Curve.create((function(e,t,i){this.v0=e,this.v1=t,this.v2=i}),(function(e){var t,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,i,e)})),THREE.CubicBezierCurve3=THREE.Curve.create((function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r}),(function(e){var t,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,i,e)})),THREE.SplineCurve3=THREE.Curve.create((function(e){this.points=null==e?[]:e}),(function(e){var t=new THREE.Vector3,i=[],r=this.points,n,e=(r.length-1)*e;e-=n=Math.floor(e),i[0]=0==n?n:n-1,i[1]=n,i[2]=n>r.length-2?r.length-1:n+1,i[3]=n>r.length-3?r.length-1:n+2,n=r[i[0]];var o=r[i[1]],a=r[i[2]],i=r[i[3]];return t.x=THREE.Curve.Utils.interpolate(n.x,o.x,a.x,i.x,e),t.y=THREE.Curve.Utils.interpolate(n.y,o.y,a.y,i.y,e),t.z=THREE.Curve.Utils.interpolate(n.z,o.z,a.z,i.z,e),t})),THREE.ClosedSplineCurve3=THREE.Curve.create((function(e){this.points=null==e?[]:e}),(function(e){var t=new THREE.Vector3,i=[],r=this.points,n;return n=(r.length-0)*e,n-=e=Math.floor(n),e+=0<e?0:(Math.floor(Math.abs(e)/r.length)+1)*r.length,i[0]=(e-1)%r.length,i[1]=e%r.length,i[2]=(e+1)%r.length,i[3]=(e+2)%r.length,t.x=THREE.Curve.Utils.interpolate(r[i[0]].x,r[i[1]].x,r[i[2]].x,r[i[3]].x,n),t.y=THREE.Curve.Utils.interpolate(r[i[0]].y,r[i[1]].y,r[i[2]].y,r[i[3]].y,n),t.z=THREE.Curve.Utils.interpolate(r[i[0]].z,r[i[1]].z,r[i[2]].z,r[i[3]].z,n),t})),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),i=this.getCurveLengths(),e=0;e<i.length;){if(i[e]>=t)return t=1-(t=i[e]-t)/(e=this.curves[e]).getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,i,r=this.curves.length;for(i=0;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e},THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,i,r,n,o,a;t=i=Number.NEGATIVE_INFINITY,n=o=Number.POSITIVE_INFINITY;var s,h,l,c,p=e[0]instanceof THREE.Vector3;for(c=p?new THREE.Vector3:new THREE.Vector2,h=0,l=e.length;h<l;h++)(s=e[h]).x>t?t=s.x:s.x<n&&(n=s.x),s.y>i?i=s.y:s.y<o&&(o=s.y),p&&(s.z>r?r=s.z:s.z<a&&(a=s.z)),c.add(s);return e={minX:n,minY:o,maxX:t,maxY:i,centroid:c.divideScalar(l)},p&&(e.maxZ=r,e.minZ=a),e},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,i=0;i<e.length;i++)t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,e[i].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var i=this.getPoints(e),r,n;for(t||(t=this.bends),r=0,n=t.length;r<n;r++)i=this.getWrapPoints(i,t[r]);return i},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var i=this.getSpacedPoints(e),r,n;for(t||(t=this.bends),r=0,n=t.length;r<n;r++)i=this.getWrapPoints(i,t[r]);return i},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var i=this.getBoundingBox(),r,n,o,a,s,h;for(r=0,n=e.length;r<n;r++)a=(o=e[r]).x,s=o.y,h=a/i.maxX,h=t.getUtoTmapping(h,a),a=t.getPoint(h),s=t.getNormalVector(h).multiplyScalar(s),o.x=a.x+s.x,o.y=a.y+s.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var i=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:i})},THREE.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:THREE.PathActions.LINE_TO,args:i})},THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=[new THREE.Vector2(i[i.length-2],i[i.length-1])];Array.prototype.push.apply(i,e),i=new THREE.SplineCurve(i),this.curves.push(i),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,i,r,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],i,r,n,o)},THREE.Path.prototype.absarc=function(e,t,i,r,n,o){this.absellipse(e,t,i,i,r,n,o)},THREE.Path.prototype.ellipse=function(e,t,i,r,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],i,r,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,i,r,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,i,r,n,o,a);this.curves.push(h),h=h.getPoint(a?1:0),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],i=0;i<e;i++)t.push(this.getPoint(i/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);var e=e||12,i=[],r,n,o,a,s,h,l,c,p,u,f,d,E;for(r=0,n=this.actions.length;r<n;r++)switch(o=this.actions[r],a=o.action,o=o.args,a){case THREE.PathActions.MOVE_TO:i.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.LINE_TO:i.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=o[2],h=o[3],p=o[0],u=o[1],0<i.length?(f=(a=i[i.length-1]).x,d=a.y):(f=(a=this.actions[r-1].args)[a.length-2],d=a[a.length-1]),o=1;o<=e;o++)E=o/e,a=THREE.Shape.Utils.b2(E,f,p,s),E=THREE.Shape.Utils.b2(E,d,u,h),i.push(new THREE.Vector2(a,E));break;case THREE.PathActions.BEZIER_CURVE_TO:for(s=o[4],h=o[5],p=o[0],u=o[1],l=o[2],c=o[3],0<i.length?(f=(a=i[i.length-1]).x,d=a.y):(f=(a=this.actions[r-1].args)[a.length-2],d=a[a.length-1]),o=1;o<=e;o++)E=o/e,a=THREE.Shape.Utils.b3(E,f,p,l,s),E=THREE.Shape.Utils.b3(E,d,u,c,h),i.push(new THREE.Vector2(a,E));break;case THREE.PathActions.CSPLINE_THRU:for(a=this.actions[r-1].args,E=[new THREE.Vector2(a[a.length-2],a[a.length-1])],a=e*o[0].length,E=E.concat(o[0]),E=new THREE.SplineCurve(E),o=1;o<=a;o++)i.push(E.getPointAt(o/a));break;case THREE.PathActions.ARC:for(s=o[0],h=o[1],u=o[2],l=o[3],a=o[4],p=!!o[5],f=a-l,d=2*e,o=1;o<=d;o++)E=o/d,p||(E=1-E),E=l+E*f,a=s+u*Math.cos(E),E=h+u*Math.sin(E),i.push(new THREE.Vector2(a,E));break;case THREE.PathActions.ELLIPSE:for(s=o[0],h=o[1],u=o[2],c=o[3],l=o[4],a=o[5],p=!!o[6],f=a-l,d=2*e,o=1;o<=d;o++)E=o/d,p||(E=1-E),E=l+E*f,a=s+u*Math.cos(E),E=h+c*Math.sin(E),i.push(new THREE.Vector2(a,E))}return r=i[i.length-1],1e-10>Math.abs(r.x-i[0].x)&&1e-10>Math.abs(r.y-i[0].y)&&i.splice(i.length-1,1),t&&i.push(i[0]),i},THREE.Path.prototype.toShapes=function(){var e,t,i,r,n=[],o=new THREE.Path,a;for(e=0,t=this.actions.length;e<t;e++)r=(i=this.actions[e]).args,(i=i.action)==THREE.PathActions.MOVE_TO&&0!=o.actions.length&&(n.push(o),o=new THREE.Path),o[i].apply(o,r);if(0!=o.actions.length&&n.push(o),0==n.length)return[];if(r=[],e=!THREE.Shape.Utils.isClockWise(n[0].getPoints()),1==n.length)return o=n[0],(a=new THREE.Shape).actions=o.actions,a.curves=o.curves,r.push(a),r;if(e)for(a=new THREE.Shape,e=0,t=n.length;e<t;e++)o=n[e],THREE.Shape.Utils.isClockWise(o.getPoints())?(a.actions=o.actions,a.curves=o.curves,r.push(a),a=new THREE.Shape):a.holes.push(o);else{for(e=0,t=n.length;e<t;e++)o=n[e],THREE.Shape.Utils.isClockWise(o.getPoints())?(a&&r.push(a),(a=new THREE.Shape).actions=o.actions,a.curves=o.curves):a.holes.push(o);r.push(a)}return r},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;t<i;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;t<i;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var i=e.concat(),r=i.concat(),n,o,a,s,h,l,c,p,u,f,d=[];for(h=0;h<t.length;h++){for(l=t[h],Array.prototype.push.apply(r,l),o=Number.POSITIVE_INFINITY,n=0;n<l.length;n++)for(u=l[n],f=[],p=0;p<i.length;p++)c=i[p],c=u.distanceToSquared(c),f.push(c),c<o&&(o=c,a=n,s=p);n=0<=s-1?s-1:i.length-1,o=0<=a-1?a-1:l.length-1;var E=[l[a],i[s],i[n]];p=THREE.FontUtils.Triangulate.area(E);var m=[l[a],l[o],i[s]];u=THREE.FontUtils.Triangulate.area(m),f=s,c=a,a+=-1,0>(s+=1)&&(s+=i.length),s%=i.length,0>a&&(a+=l.length),a%=l.length,n=0<=s-1?s-1:i.length-1,o=0<=a-1?a-1:l.length-1,E=[l[a],i[s],i[n]],E=THREE.FontUtils.Triangulate.area(E),m=[l[a],l[o],i[s]],p+u>E+(m=THREE.FontUtils.Triangulate.area(m))&&(a=c,0>(s=f)&&(s+=i.length),s%=i.length,0>a&&(a+=l.length),a%=l.length,n=0<=s-1?s-1:i.length-1,o=0<=a-1?a-1:l.length-1),p=i.slice(0,s),u=i.slice(s),f=l.slice(a),c=l.slice(0,a),o=[l[a],l[o],i[s]],d.push([l[a],i[s],i[n]]),d.push(o),i=p.concat(f).concat(c).concat(u)}return{shape:i,isolatedPts:d,allpoints:r}},triangulateShape:function(e,t){var i,r=(i=THREE.Shape.Utils.removeHoles(e,t)).allpoints,n=i.isolatedPts,i=THREE.FontUtils.Triangulate(i.shape,!1),o,a,s,h,l={};for(o=0,a=r.length;o<a;o++)void 0!==l[h=r[o].x+":"+r[o].y]&&console.log("Duplicate point",h),l[h]=o;for(o=0,a=i.length;o<a;o++)for(s=i[o],r=0;3>r;r++)void 0!==(h=l[h=s[r].x+":"+s[r].y])&&(s[r]=h);for(o=0,a=n.length;o<a;o++)for(s=n[o],r=0;3>r;r++)void 0!==(h=l[h=s[r].x+":"+s[r].y])&&(s[r]=h);return i.concat(n)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var i=1-e;return i*i*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,i,r){return this.b2p0(e,t)+this.b2p1(e,i)+this.b2p2(e,r)},b3p0:function(e,t){var i=1-e;return i*i*i*t},b3p1:function(e,t){var i=1-e;return 3*i*i*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,i,r,n){return this.b3p0(e,t)+this.b3p1(e,i)+this.b3p2(e,r)+this.b3p3(e,n)}},THREE.AnimationHandler=function(){var e=[],t={},i={update:function(t){for(var i=0;i<e.length;i++)e[i].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){-1!==(t=e.indexOf(t))&&e.splice(t,1)},add:function(e){if(void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,!0!==e.initialized){for(var i=0;i<e.hierarchy.length;i++){for(var r=0;r<e.hierarchy[i].keys.length;r++)if(0>e.hierarchy[i].keys[r].time&&(e.hierarchy[i].keys[r].time=0),void 0!==e.hierarchy[i].keys[r].rot&&!(e.hierarchy[i].keys[r].rot instanceof THREE.Quaternion)){var n=e.hierarchy[i].keys[r].rot;e.hierarchy[i].keys[r].rot=new THREE.Quaternion(n[0],n[1],n[2],n[3])}if(e.hierarchy[i].keys.length&&void 0!==e.hierarchy[i].keys[0].morphTargets){for(n={},r=0;r<e.hierarchy[i].keys.length;r++)for(var o=0;o<e.hierarchy[i].keys[r].morphTargets.length;o++){var a=e.hierarchy[i].keys[r].morphTargets[o];n[a]=-1}for(e.hierarchy[i].usedMorphTargets=n,r=0;r<e.hierarchy[i].keys.length;r++){var s={};for(a in n){for(o=0;o<e.hierarchy[i].keys[r].morphTargets.length;o++)if(e.hierarchy[i].keys[r].morphTargets[o]===a){s[a]=e.hierarchy[i].keys[r].morphTargetsInfluences[o];break}o===e.hierarchy[i].keys[r].morphTargets.length&&(s[a]=0)}e.hierarchy[i].keys[r].morphTargetsInfluences=s}}for(r=1;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].time===e.hierarchy[i].keys[r-1].time&&(e.hierarchy[i].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].index=r}for(r=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[],i=0;i<e.hierarchy.length;i++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){if("string"==typeof e)return t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.bones.length;i++)t.push(e.bones[i]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var i=0;i<e.children.length;i++)r(e.children[i],t)};return i.LINEAR=0,i.CATMULLROM=1,i.CATMULLROM_FORWARD=2,i}(),THREE.Animation=function(e,t,i){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=void 0!==i?i:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0;var i,r=this.hierarchy.length,n;for(i=0;i<r;i++){n=this.hierarchy[i],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(n.useQuaternion=!0),n.matrixAutoUpdate=!0,void 0===n.animationCache&&(n.animationCache={},n.animationCache.prevKey={pos:0,rot:0,scl:0},n.animationCache.nextKey={pos:0,rot:0,scl:0},n.animationCache.originalMatrix=n instanceof THREE.Bone?n.skinMatrix:n.matrix);var o=n.animationCache.prevKey;n=n.animationCache.nextKey,o.pos=this.data.hierarchy[i].keys[0],o.rot=this.data.hierarchy[i].keys[0],o.scl=this.data.hierarchy[i].keys[0],n.pos=this.getNextKeyWith("pos",i,1),n.rot=this.getNextKeyWith("rot",i,1),n.scl=this.getNextKeyWith("scl",i,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t=["pos","rot","scl"],i,r,n,o,a,s,h,l,c;c=this.currentTime+=e*this.timeScale,l=this.currentTime%=this.data.length,parseInt(Math.min(l*this.data.fps,this.data.length*this.data.fps),10);for(var p=0,u=this.hierarchy.length;p<u;p++){h=(e=this.hierarchy[p]).animationCache;for(var f=0;3>f;f++){if(i=t[f],a=h.prevKey[i],(s=h.nextKey[i]).time<=c){if(l<c){if(!this.loop)return void this.stop();for(a=this.data.hierarchy[p].keys[0],s=this.getNextKeyWith(i,p,1);s.time<l;)a=s,s=this.getNextKeyWith(i,p,s.index+1)}else do{a=s,s=this.getNextKeyWith(i,p,s.index+1)}while(s.time<l);h.prevKey[i]=a,h.nextKey[i]=s}e.matrixAutoUpdate=!0,e.matrixWorldNeedsUpdate=!0,r=(l-a.time)/(s.time-a.time),n=a[i],o=s[i],(0>r||1<r)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+p),r=0>r?0:1),"pos"===i?(i=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(i.x=n[0]+(o[0]-n[0])*r,i.y=n[1]+(o[1]-n[1])*r,i.z=n[2]+(o[2]-n[2])*r):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",p,a.index-1).pos,this.points[1]=n,this.points[2]=o,this.points[3]=this.getNextKeyWith("pos",p,s.index+1).pos,r=.33*r+.33,n=this.interpolateCatmullRom(this.points,r),i.x=n[0],i.y=n[1],i.z=n[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(r=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(r[0],r[1],r[2]),this.target.sub(i),this.target.y=0,this.target.normalize(),r=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,r,0)))):"rot"===i?THREE.Quaternion.slerp(n,o,e.quaternion,r):"scl"===i&&((i=e.scale).x=n[0]+(o[0]-n[0])*r,i.y=n[1]+(o[1]-n[1])*r,i.z=n[2]+(o[2]-n[2])*r)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var i=[],r=[],n,o,a,s,h,l;return n=(e.length-1)*t,n-=o=Math.floor(n),i[0]=0===o?o:o-1,i[1]=o,i[2]=o>e.length-2?o:o+1,i[3]=o>e.length-3?o:o+2,o=e[i[0]],s=e[i[1]],h=e[i[2]],l=e[i[3]],a=n*(i=n*n),r[0]=this.interpolate(o[0],s[0],h[0],l[0],n,i,a),r[1]=this.interpolate(o[1],s[1],h[1],l[1],n,i,a),r[2]=this.interpolate(o[2],s[2],h[2],l[2],n,i,a),r},THREE.Animation.prototype.interpolate=function(e,t,i,r,n,o,a){return(2*(t-i)+(e=.5*(i-e))+(r=.5*(r-t)))*a+(-3*(t-i)-2*e-r)*o+e*n+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i<r.length-1?i:r.length-1:i%r.length;i<r.length;i++)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<i?i:0:0<=i?i:i+r.length;0<=i;i--)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t,i){for(this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=void 0===i||i,e=0,t=this.hierarchy.length;e<t;e++){var i=this.data.hierarchy[e].sids,r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&i){for(var n=0;n<i.length;n++){var o=i[n],a=this.getNextKeyWith(o,e,0);a&&a.apply(o)}r.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var i,r=this.hierarchy.length,n,o;for(i=0;i<r;i++)n=this.hierarchy[i],o=this.data.hierarchy[i],n.useQuaternion=!0,void 0===o.animationCache&&(o.animationCache={},o.animationCache.prevKey=null,o.animationCache.nextKey=null,o.animationCache.originalMatrix=n instanceof THREE.Bone?n.skinMatrix:n.matrix),(n=this.data.hierarchy[i].keys).length&&(o.animationCache.prevKey=n[0],o.animationCache.nextKey=n[1],this.startTime=Math.min(n[0].time,this.startTime),this.endTime=Math.max(n[n.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],i=this.data.hierarchy[e];if(void 0!==i.animationCache){var r=i.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete i.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,i,r,n,o=this.data.JIT.hierarchy,a,s,h;if(s=this.currentTime+=e*this.timeScale,(a=this.currentTime%=this.data.length)<this.startTimeMs&&(a=this.currentTime=this.startTimeMs+a),n=parseInt(Math.min(a*this.data.fps,this.data.length*this.data.fps),10),(h=a<s)&&!this.loop){for(var e=0,l=this.hierarchy.length;e<l;e++){var c=this.data.hierarchy[e].keys,o=this.data.hierarchy[e].sids;if(r=c.length-1,n=this.hierarchy[e],c.length){for(c=0;c<o.length;c++)a=o[c],(s=this.getPrevKeyWith(a,e,r))&&s.apply(a);this.data.hierarchy[e].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(a<this.startTime)){for(e=0,l=this.hierarchy.length;e<l;e++){r=this.hierarchy[e];var c=(t=this.data.hierarchy[e]).keys,p=t.animationCache;if(this.JITCompile&&void 0!==o[e][n])r instanceof THREE.Bone?(r.skinMatrix=o[e][n],r.matrixWorldNeedsUpdate=!1):(r.matrix=o[e][n],r.matrixWorldNeedsUpdate=!0);else if(c.length){if(this.JITCompile&&p&&(r instanceof THREE.Bone?r.skinMatrix=p.originalMatrix:r.matrix=p.originalMatrix),t=p.prevKey,i=p.nextKey,t&&i){if(i.time<=s){if(h&&this.loop)for(t=c[0],i=c[1];i.time<a;)i=c[(t=i).index+1];else if(!h)for(var u=c.length-1;i.time<a&&i.index!==u;)i=c[(t=i).index+1];p.prevKey=t,p.nextKey=i}i.time>=a?t.interpolate(i,a):t.interpolate(i,i.time)}this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===o[0][n])for(this.hierarchy[0].updateMatrixWorld(!0),e=0;e<this.hierarchy.length;e++)o[e][n]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,i){for(i%=(t=this.data.hierarchy[t].keys).length;i<t.length;i++)if(t[i].hasTarget(e))return t[i];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i=0<=i?i:i+t.length;0<=i;i--)if(t[i].hasTarget(e))return t[i];return t[t.length-1]},THREE.CubeCamera=function(e,t,i){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var i=this.renderTarget,l=i.generateMipmaps;i.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,r,i),i.activeCubeFace=1,e.render(t,n,i),i.activeCubeFace=2,e.render(t,o,i),i.activeCubeFace=3,e.render(t,a,i),i.activeCubeFace=4,e.render(t,s,i),i.generateMipmaps=l,i.activeCubeFace=5,e.render(t,h,i)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,i,r,n,o,a){THREE.Camera.call(this),this.fov=i,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,o,a),this.cameraP=new THREE.PerspectiveCamera(i,e/t,r,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t,e=2*(t=Math.tan(this.fov/2)*t)*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var i=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(i),i},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var i,r,i=[[e,0,0],[t,0,0],[-e,0,0],[-t,0,0],[0,e,0],[0,t,0],[0,-e,0],[0,-t,0],[0,0,e],[0,0,t],[0,0,-e],[0,0,-t],[i=.707*e,i,0],[r=.707*t,r,0],[-i,-i,0],[-r,-r,0],[i,-i,0],[r,-r,0],[-i,i,0],[-r,r,0],[i,0,i],[r,0,r],[-i,0,-i],[-r,0,-r],[i,0,-i],[r,0,-r],[-i,0,i],[-r,0,r],[0,i,i],[0,r,r],[0,-i,-i],[0,-r,-r],[0,i,-i],[0,r,-r],[0,-i,i],[0,-r,r]],r=0,n=i.length;r<n;r++)this.vertices.push(new THREE.Vector3(i[r][0],i[r][1],i[r][2]))},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,i,r){THREE.Geometry.call(this);var e=e||50,i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI,t=void 0!==t?Math.max(3,t):8,n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;n<=t;n++){var s=new THREE.Vector3;s.x=e*Math.cos(i+n/t*r),s.y=e*Math.sin(i+n/t*r),this.vertices.push(s),o.push(new THREE.Vector2((s.x/e+1)/2,-(s.y/e+1)/2+1))}for(i=new THREE.Vector3(0,0,-1),n=1;n<=t;n++)this.faces.push(new THREE.Face3(n,n+1,0,[i,i,i])),this.faceVertexUvs[0].push([o[n],o[n+1],a]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,i,r,n,o){function a(e,t,i,r,n,o,a,h){var l,c=s.widthSegments,p=s.heightSegments,u=n/2,f=o/2,d=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",p=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",c=s.depthSegments);var E=c+1,m=p+1,g=n/c,T=o/p,v=new THREE.Vector3;for(v[l]=0<a?1:-1,n=0;n<m;n++)for(o=0;o<E;o++){var y=new THREE.Vector3;y[e]=(o*g-u)*i,y[t]=(n*T-f)*r,y[l]=a,s.vertices.push(y)}for(n=0;n<p;n++)for(o=0;o<c;o++)(e=new THREE.Face4(o+E*n+d,o+E*(n+1)+d,o+1+E*(n+1)+d,o+1+E*n+d)).normal.copy(v),e.vertexNormals.push(v.clone(),v.clone(),v.clone(),v.clone()),e.materialIndex=h,s.faces.push(e),s.faceVertexUvs[0].push([new THREE.Vector2(o/c,1-n/p),new THREE.Vector2(o/c,1-(n+1)/p),new THREE.Vector2((o+1)/c,1-(n+1)/p),new THREE.Vector2((o+1)/c,1-n/p)])}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=i,this.widthSegments=r||1,this.heightSegments=n||1,this.depthSegments=o||1,e=this.width/2,t=this.height/2,i=this.depth/2,a("z","y",-1,-1,this.depth,this.height,e,0),a("z","y",1,-1,this.depth,this.height,-e,1),a("x","z",1,1,this.width,this.depth,t,2),a("x","z",1,-1,this.width,this.depth,-t,3),a("x","y",1,-1,this.width,this.height,i,4),a("x","y",-1,-1,this.width,this.height,-i,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this);var e=void 0!==e?e:20,t=void 0!==t?t:20,i,a=(i=void 0!==i?i:100)/2,r=r||8,n=n||1,s,h,l=[],c=[];for(h=0;h<=n;h++){var p=[],u=[],f,d=(f=h/n)*(t-e)+e;for(s=0;s<=r;s++){var E=s/r,m;(m=new THREE.Vector3).x=d*Math.sin(2*E*Math.PI),m.y=-f*i+a,m.z=d*Math.cos(2*E*Math.PI),this.vertices.push(m),p.push(this.vertices.length-1),u.push(new THREE.Vector2(E,1-f))}l.push(p),c.push(u)}for(i=(t-e)/i,s=0;s<r;s++)for(0!==e?(p=this.vertices[l[0][s]].clone(),
u=this.vertices[l[0][s+1]].clone()):(p=this.vertices[l[1][s]].clone(),u=this.vertices[l[1][s+1]].clone()),p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*i).normalize(),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*i).normalize(),h=0;h<n;h++){var f=l[h][s],d=l[h+1][s],E=l[h+1][s+1],m=l[h][s+1],g=p.clone(),T=p.clone(),v=u.clone(),y=u.clone(),R=c[h][s].clone(),x=c[h+1][s].clone(),H=c[h+1][s+1].clone(),w=c[h][s+1].clone();this.faces.push(new THREE.Face4(f,d,E,m,[g,T,v,y])),this.faceVertexUvs[0].push([R,x,H,w])}if(!o&&0<e)for(this.vertices.push(new THREE.Vector3(0,a,0)),s=0;s<r;s++)f=l[0][s],d=l[0][s+1],E=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=c[0][s].clone(),x=c[0][s+1].clone(),H=new THREE.Vector2(x.u,0),this.faces.push(new THREE.Face3(f,d,E,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!o&&0<t)for(this.vertices.push(new THREE.Vector3(0,-a,0)),s=0;s<r;s++)f=l[h][s+1],d=l[h][s],E=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=c[h][s+1].clone(),x=c[h][s].clone(),H=new THREE.Vector2(x.u,1),this.faces.push(new THREE.Face3(f,d,E,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){void 0!==e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;r<i;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(e)}function r(e,t,i){var r=THREE.ExtrudeGeometry.__v1,n=THREE.ExtrudeGeometry.__v2,o=THREE.ExtrudeGeometry.__v3,a=THREE.ExtrudeGeometry.__v4,s=THREE.ExtrudeGeometry.__v5,h=THREE.ExtrudeGeometry.__v6;return r.set(e.x-t.x,e.y-t.y),n.set(e.x-i.x,e.y-i.y),r=r.normalize(),n=n.normalize(),o.set(-r.y,r.x),a.set(n.y,-n.x),s.copy(e).add(o),h.copy(e).add(a),s.equals(h)?a.clone():(s.copy(t).add(o),h.copy(i).add(a),o=r.dot(a),a=h.sub(s).dot(a),0===o&&(console.log("Either infinite or no solutions!"),0===a?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),0>(a/=o)?((t=Math.atan2(t.y-e.y,t.x-e.x))>(e=Math.atan2(i.y-e.y,i.x-e.x))&&(e+=2*Math.PI),i=(t+e)/2,e=-Math.cos(i),i=-Math.sin(i),new THREE.Vector2(e,i)):r.multiplyScalar(a).add(s).sub(e).clone())}function n(i,r){var n,o;for(N=i.length;0<=--N;){n=N,0>(o=N-1)&&(o=i.length-1);for(var a=0,s=f+2*c,a=0;a<s;a++){var h,l,p,h,u,l,d=i,E=a,m=s,g=n,y=o,p=(p=r+n+(h=U*a))+M,h=(h=r+o+h)+M,u=(u=r+o+(l=U*(a+1)))+M,l=(l=r+n+l)+M;S.faces.push(new THREE.Face4(p,h,u,l,null,null,T)),p=v.generateSideWallUV(S,e,d,t,p,h,u,l,E,m,g,y),S.faceVertexUvs[0].push(p)}}}function o(e,t,i){S.vertices.push(new THREE.Vector3(e,t,i))}function a(i,r,n,o){i+=M,r+=M,n+=M,S.faces.push(new THREE.Face3(i,r,n,null,null,g)),i=o?v.generateBottomUV(S,e,t,i,r,n):v.generateTopUV(S,e,t,i,r,n),S.faceVertexUvs[0].push(i)}var s=void 0!==t.amount?t.amount:100,h=void 0!==t.bevelThickness?t.bevelThickness:6,l=void 0!==t.bevelSize?t.bevelSize:h-2,c=void 0!==t.bevelSegments?t.bevelSegments:3,p=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.curveSegments?t.curveSegments:12,f=void 0!==t.steps?t.steps:1,d=t.extrudePath,E,m=!1,g=t.material,T=t.extrudeMaterial,v=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,y,R,x,H;d&&(E=d.getSpacedPoints(f),m=!0,p=!1,y=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(d,f,!1),R=new THREE.Vector3,x=new THREE.Vector3,H=new THREE.Vector3),p||(l=h=c=0);var w,_,b,S=this,M=this.vertices.length,u,A=(u=e.extractPoints(u)).shape,u=u.holes;if(d=!THREE.Shape.Utils.isClockWise(A)){for(A=A.reverse(),_=0,b=u.length;_<b;_++)w=u[_],THREE.Shape.Utils.isClockWise(w)&&(u[_]=w.reverse());d=!1}var C=THREE.Shape.Utils.triangulateShape(A,u),d=A;for(_=0,b=u.length;_<b;_++)w=u[_],A=A.concat(w);var P,L,D,F,U=A.length,z=C.length,V=[],N=0,B=d.length;for(P=B-1,L=N+1;N<B;N++,P++,L++)P===B&&(P=0),L===B&&(L=0),V[N]=r(d[N],d[P],d[L]);var O=[],I,G=V.concat();for(_=0,b=u.length;_<b;_++){for(w=u[_],I=[],N=0,P=(B=w.length)-1,L=N+1;N<B;N++,P++,L++)P===B&&(P=0),L===B&&(L=0),I[N]=r(w[N],w[P],w[L]);O.push(I),G=G.concat(I)}for(P=0;P<c;P++){for(D=h*(1-(w=P/c)),L=l*Math.sin(w*Math.PI/2),N=0,B=d.length;N<B;N++)o((F=i(d[N],V[N],L)).x,F.y,-D);for(_=0,b=u.length;_<b;_++)for(w=u[_],I=O[_],N=0,B=w.length;N<B;N++)o((F=i(w[N],I[N],L)).x,F.y,-D)}for(L=l,N=0;N<U;N++)F=p?i(A[N],G[N],L):A[N],m?(x.copy(y.normals[0]).multiplyScalar(F.x),R.copy(y.binormals[0]).multiplyScalar(F.y),H.copy(E[0]).add(x).add(R),o(H.x,H.y,H.z)):o(F.x,F.y,0);for(w=1;w<=f;w++)for(N=0;N<U;N++)F=p?i(A[N],G[N],L):A[N],m?(x.copy(y.normals[w]).multiplyScalar(F.x),R.copy(y.binormals[w]).multiplyScalar(F.y),H.copy(E[w]).add(x).add(R),o(H.x,H.y,H.z)):o(F.x,F.y,s/f*w);for(P=c-1;0<=P;P--){for(D=h*(1-(w=P/c)),L=l*Math.sin(w*Math.PI/2),N=0,B=d.length;N<B;N++)o((F=i(d[N],V[N],L)).x,F.y,s+D);for(_=0,b=u.length;_<b;_++)for(w=u[_],I=O[_],N=0,B=w.length;N<B;N++)F=i(w[N],I[N],L),m?o(F.x,F.y+E[f-1].y,E[f-1].x+D):o(F.x,F.y,s+D)}if(p){for(h=0*U,N=0;N<z;N++)a((s=C[N])[2]+h,s[1]+h,s[0]+h,!0);for(h=U*(f+2*c),N=0;N<z;N++)a((s=C[N])[0]+h,s[1]+h,s[2]+h,!1)}else{for(N=0;N<z;N++)a((s=C[N])[2],s[1],s[0],!0);for(N=0;N<z;N++)a((s=C[N])[0]+U*f,s[1]+U*f,s[2]+U*f,!1)}for(n(d,s=0),s+=d.length,_=0,b=u.length;_<b;_++)n(w=u[_],s),s+=w.length},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,o){return t=e.vertices[n].x,n=e.vertices[n].y,i=e.vertices[o].x,o=e.vertices[o].y,[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,n),new THREE.Vector2(i,o)]},generateBottomUV:function(e,t,i,r,n,o){return this.generateTopUV(e,t,i,r,n,o)},generateSideWallUV:function(e,t,i,r,n,o,a,s){var t=e.vertices[n].x,i=e.vertices[n].y,n=e.vertices[n].z,r=e.vertices[o].x,h=e.vertices[o].y,o=e.vertices[o].z,l=e.vertices[a].x,c=e.vertices[a].y,a=e.vertices[a].z,p=e.vertices[s].x,u=e.vertices[s].y,e=e.vertices[s].z;return.01>Math.abs(i-h)?[new THREE.Vector2(t,1-n),new THREE.Vector2(r,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(p,1-e)]:[new THREE.Vector2(i,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(u,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),!1==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;i<r;i++)this.addShape(e[i],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var i=t.material,r=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,n,o,a,s=this.vertices.length,h=(n=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12)).shape,l=n.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),n=0,o=l.length;n<o;n++)a=l[n],THREE.Shape.Utils.isClockWise(a)&&(l[n]=a.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(n=0,o=l.length;n<o;n++)a=l[n],h=h.concat(a);for(l=h.length,o=c.length,n=0;n<l;n++)a=h[n],this.vertices.push(new THREE.Vector3(a.x,a.y,0));for(n=0;n<o;n++)h=(l=c[n])[0]+s,a=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,a,l,null,null,i)),this.faceVertexUvs[0].push(r.generateBottomUV(this,e,t,h,a,l))},THREE.LatheGeometry=function(e,t,i,r){THREE.Geometry.call(this);for(var t=t||12,i=i||0,r=r||2*Math.PI,n=1/(e.length-1),o=1/t,a=0,s=t;a<=s;a++)for(var h=i+a*o*r,l=Math.cos(h),c=Math.sin(h),h=0,p=e.length;h<p;h++){var u=e[h],f=new THREE.Vector3;f.x=l*u.x-c*u.y,f.y=c*u.x+l*u.y,f.z=u.z,this.vertices.push(f)}for(i=e.length,a=0,s=t;a<s;a++)for(h=0,p=e.length-1;h<p;h++)r=t=h+i*a,c=t+i,l=t+1+i,this.faces.push(new THREE.Face4(r,c,l,t+1)),r=(l=a*o)+o,c=(t=h*n)+n,this.faceVertexUvs[0].push([new THREE.Vector2(l,t),new THREE.Vector2(r,t),new THREE.Vector2(r,c),new THREE.Vector2(l,c)]);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=i||1,this.heightSegments=r||1;for(var i=e/2,n=t/2,r=this.widthSegments,o=this.heightSegments,a=r+1,s=o+1,h=this.width/r,l=this.height/o,c=new THREE.Vector3(0,0,1),e=0;e<s;e++)for(t=0;t<a;t++)this.vertices.push(new THREE.Vector3(t*h-i,-(e*l-n),0));for(e=0;e<o;e++)for(t=0;t<r;t++)(i=new THREE.Face4(t+a*e,t+a*(e+1),t+1+a*(e+1),t+1+a*e)).normal.copy(c),i.vertexNormals.push(c.clone(),c.clone(),c.clone(),c.clone()),this.faces.push(i),this.faceVertexUvs[0].push([new THREE.Vector2(t/r,1-e/o),new THREE.Vector2(t/r,1-(e+1)/o),new THREE.Vector2((t+1)/r,1-(e+1)/o),new THREE.Vector2((t+1)/r,1-e/o)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(i)||6);for(var r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI,s=[],h=[],i=0;i<=this.heightSegments;i++){for(var l=[],c=[],t=0;t<=this.widthSegments;t++){var p=t/this.widthSegments,u=i/this.heightSegments,f;(f=new THREE.Vector3).x=-this.radius*Math.cos(r+p*n)*Math.sin(o+u*a),f.y=this.radius*Math.cos(o+u*a),f.z=this.radius*Math.sin(r+p*n)*Math.sin(o+u*a),this.vertices.push(f),l.push(this.vertices.length-1),c.push(new THREE.Vector2(p,1-u))}s.push(l),h.push(c)}for(i=0;i<this.heightSegments;i++)for(t=0;t<this.widthSegments;t++){var r=s[i][t+1],n=s[i][t],o=s[i+1][t],a=s[i+1][t+1],l=this.vertices[r].clone().normalize(),c=this.vertices[n].clone().normalize(),p=this.vertices[o].clone().normalize(),u=this.vertices[a].clone().normalize(),f=h[i][t+1].clone(),d=h[i][t].clone(),E=h[i+1][t].clone(),m=h[i+1][t+1].clone();Math.abs(this.vertices[r].y)===this.radius?(this.faces.push(new THREE.Face3(r,o,a,[l,p,u])),this.faceVertexUvs[0].push([f,E,m])):Math.abs(this.vertices[o].y)===this.radius?(this.faces.push(new THREE.Face3(r,n,o,[l,c,p])),this.faceVertexUvs[0].push([f,d,E])):(this.faces.push(new THREE.Face4(r,n,o,a,[l,c,p,u])),this.faceVertexUvs[0].push([f,d,E,m]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var i=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,i,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,i,r,n){for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||8,this.tubularSegments=r||6,this.arc=n||2*Math.PI,n=new THREE.Vector3,e=[],t=[],i=0;i<=this.radialSegments;i++)for(r=0;r<=this.tubularSegments;r++){var o=r/this.tubularSegments*this.arc,a=2*i/this.radialSegments*Math.PI,s;n.x=this.radius*Math.cos(o),n.y=this.radius*Math.sin(o),(s=new THREE.Vector3).x=(this.radius+this.tube*Math.cos(a))*Math.cos(o),s.y=(this.radius+this.tube*Math.cos(a))*Math.sin(o),s.z=this.tube*Math.sin(a),this.vertices.push(s),e.push(new THREE.Vector2(r/this.tubularSegments,i/this.radialSegments)),t.push(s.clone().sub(n).normalize())}for(i=1;i<=this.radialSegments;i++)for(r=1;r<=this.tubularSegments;r++){var n=(this.tubularSegments+1)*i+r-1,o=(this.tubularSegments+1)*(i-1)+r-1,a=(this.tubularSegments+1)*(i-1)+r,s=(this.tubularSegments+1)*i+r,h=new THREE.Face4(n,o,a,s,[t[n],t[o],t[a],t[s]]);h.normal.add(t[n]),h.normal.add(t[o]),h.normal.add(t[a]),h.normal.add(t[s]),h.normal.normalize(),this.faces.push(h),this.faceVertexUvs[0].push([e[n].clone(),e[o].clone(),e[a].clone(),e[s].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,i,r,n,o,a){function s(e,t,i,r,n,o){var a=Math.cos(e);return Math.cos(t),t=Math.sin(e),e*=i/r,a*=.5*n*(2+(i=Math.cos(e))),t*=.5*n*(2+i),n=.5*o*n*Math.sin(e),new THREE.Vector3(a,t,n)}for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||64,this.tubularSegments=r||8,this.p=n||2,this.q=o||3,this.heightScale=a||1,this.grid=Array(this.radialSegments),i=new THREE.Vector3,r=new THREE.Vector3,n=new THREE.Vector3,e=0;e<this.radialSegments;++e)for(this.grid[e]=Array(this.tubularSegments),t=0;t<this.tubularSegments;++t){var h,a,o=s(h=e/this.radialSegments*2*this.p*Math.PI,a=t/this.tubularSegments*2*Math.PI,this.q,this.p,this.radius,this.heightScale),h=s(h+.01,a,this.q,this.p,this.radius,this.heightScale);i.subVectors(h,o),r.addVectors(h,o),n.crossVectors(i,r),r.crossVectors(n,i),n.normalize(),r.normalize(),h=-this.tube*Math.cos(a),a=this.tube*Math.sin(a),o.x+=h*r.x+a*n.x,o.y+=h*r.y+a*n.y,o.z+=h*r.z+a*n.z,this.grid[e][t]=this.vertices.push(new THREE.Vector3(o.x,o.y,o.z))-1}for(e=0;e<this.radialSegments;++e)for(t=0;t<this.tubularSegments;++t){var n=(e+1)%this.radialSegments,o=(t+1)%this.tubularSegments,i=this.grid[e][t],r=this.grid[n][t],n=this.grid[n][o],o=this.grid[e][o],a=new THREE.Vector2(e/this.radialSegments,t/this.tubularSegments),h=new THREE.Vector2((e+1)/this.radialSegments,t/this.tubularSegments),l=new THREE.Vector2((e+1)/this.radialSegments,(t+1)/this.tubularSegments),c=new THREE.Vector2(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face4(i,r,n,o)),this.faceVertexUvs[0].push([a,h,l,c])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.radiusSegments=r||8,this.closed=n||!1,o&&(this.debug=new THREE.Object3D),this.grid=[];var a,s,n=this.segments+1,h,l,c,o=new THREE.Vector3,p,u,f,t;for(p=(t=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed)).tangents,u=t.normals,f=t.binormals,this.tangents=p,this.normals=u,this.binormals=f,t=0;t<n;t++)for(this.grid[t]=[],r=t/(n-1),c=e.getPointAt(r),r=p[t],a=u[t],s=f[t],this.debug&&(this.debug.add(new THREE.ArrowHelper(r,c,i,255)),this.debug.add(new THREE.ArrowHelper(a,c,i,16711680)),this.debug.add(new THREE.ArrowHelper(s,c,i,65280))),r=0;r<this.radiusSegments;r++)h=r/this.radiusSegments*2*Math.PI,l=-this.radius*Math.cos(h),h=this.radius*Math.sin(h),o.copy(c),o.x+=l*a.x+h*s.x,o.y+=l*a.y+h*s.y,o.z+=l*a.z+h*s.z,this.grid[t][r]=this.vertices.push(new THREE.Vector3(o.x,o.y,o.z))-1;for(t=0;t<this.segments;t++)for(r=0;r<this.radiusSegments;r++)n=this.closed?(t+1)%this.segments:t+1,o=(r+1)%this.radiusSegments,e=this.grid[t][r],i=this.grid[n][r],n=this.grid[n][o],o=this.grid[t][o],p=new THREE.Vector2(t/this.segments,r/this.radiusSegments),u=new THREE.Vector2((t+1)/this.segments,r/this.radiusSegments),f=new THREE.Vector2((t+1)/this.segments,(r+1)/this.radiusSegments),a=new THREE.Vector2(t/this.segments,(r+1)/this.radiusSegments),this.faces.push(new THREE.Face4(e,i,n,o)),this.faceVertexUvs[0].push([p,u,f,a]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,i){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var n=[],o=[],a=[],s=new THREE.Vector3,h=new THREE.Matrix4,t=t+1,l,c,p;for(this.tangents=n,this.normals=o,this.binormals=a,l=0;l<t;l++)c=l/(t-1),n[l]=e.getTangentAt(c),n[l].normalize();for(o[0]=new THREE.Vector3,a[0]=new THREE.Vector3,e=Number.MAX_VALUE,l=Math.abs(n[0].x),c=Math.abs(n[0].y),p=Math.abs(n[0].z),l<=e&&(e=l,r.set(1,0,0)),c<=e&&(e=c,r.set(0,1,0)),p<=e&&r.set(0,0,1),s.crossVectors(n[0],r).normalize(),o[0].crossVectors(n[0],s),a[0].crossVectors(n[0],o[0]),l=1;l<t;l++)o[l]=o[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(n[l-1],n[l]),1e-4<s.length()&&(s.normalize(),r=Math.acos(n[l-1].dot(n[l])),o[l].applyMatrix4(h.makeRotationAxis(s,r))),a[l].crossVectors(n[l],o[l]);if(i)for(r=Math.acos(o[0].dot(o[t-1])),r/=t-1,0<n[0].dot(s.crossVectors(o[0],o[t-1]))&&(r=-r),l=1;l<t;l++)o[l].applyMatrix4(h.makeRotationAxis(n[l],r*l)),a[l].crossVectors(n[l],o[l])},THREE.PolyhedronGeometry=function(e,t,i,r){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var i=Math.atan2(e.z,-e.x)/2/Math.PI+.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.Vector2(i,1-e),t}function o(e,t,i,r){1>r?((r=new THREE.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()])).centroid.add(e).add(t).add(i).divideScalar(3),r.normal=r.centroid.clone().normalize(),h.faces.push(r),r=Math.atan2(r.centroid.z,-r.centroid.x),h.faceVertexUvs[0].push([s(e.uv,e,r),s(t.uv,t,r),s(i.uv,i,r)])):(r-=1,o(e,a(e,t),a(e,i),r),o(a(e,t),t,a(t,i),r),o(a(e,i),a(t,i),i,r),o(a(e,t),a(t,i),a(e,i),r))}function a(e,t){p[e.index]||(p[e.index]=[]),p[t.index]||(p[t.index]=[]);var i=p[e.index][t.index];return void 0===i&&(p[e.index][t.index]=p[t.index][e.index]=i=n((new THREE.Vector3).addVectors(e,t).divideScalar(2))),i}function s(e,t,i){return 0>i&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(i/2/Math.PI+.5,e.y)),e}THREE.Geometry.call(this);for(var i=i||1,r=r||0,h=this,l=0,c=e.length;l<c;l++)n(new THREE.Vector3(e[l][0],e[l][1],e[l][2]));for(var p=[],e=this.vertices,l=0,c=t.length;l<c;l++)o(e[t[l][0]],e[t[l][1]],e[t[l][2]],r);for(this.mergeVertices(),l=0,c=this.vertices.length;l<c;l++)this.vertices[l].multiplyScalar(i);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var i=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,i,0],[1,i,0],[-1,-i,0],[1,-i,0],[0,-1,i],[0,1,i],[0,-1,-i],[0,1,-i],[i,0,-1],[i,0,1],[-i,0,-1],[-i,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,i,r){THREE.Geometry.call(this);var n=this.vertices,o=this.faces,a=this.faceVertexUvs[0],r=void 0!==r&&r,s,h,l,c,p=t+1,u,f,d,E;for(s=0;s<=i;s++)for(c=s/i,h=0;h<=t;h++)l=e(l=h/t,c),n.push(l);for(s=0;s<i;s++)for(h=0;h<t;h++)e=s*p+h,n=s*p+h+1,c=(s+1)*p+h,l=(s+1)*p+h+1,u=new THREE.Vector2(h/t,s/i),f=new THREE.Vector2((h+1)/t,s/i),d=new THREE.Vector2(h/t,(s+1)/i),E=new THREE.Vector2((h+1)/t,(s+1)/i),r?(o.push(new THREE.Face3(e,n,c)),o.push(new THREE.Face3(n,l,c)),a.push([u,f,d]),a.push([f,E,d])):(o.push(new THREE.Face4(e,n,l,c)),a.push([u,f,E,d]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var i=[[0,1,2],[0,2,1]],r=3;r<e.length;r++){var n=r,o=e[n].clone(),a=o.length();o.x+=2e-6*a*(Math.random()-.5),o.y+=2e-6*a*(Math.random()-.5),o.z+=2e-6*a*(Math.random()-.5);for(var a=[],s=0;s<i.length;){var h=i[s],l=o,c=e[h[0]],p;p=c;var u=e[h[1]],f=e[h[2]],d=new THREE.Vector3,E=new THREE.Vector3;if(d.subVectors(f,u),E.subVectors(p,u),d.cross(E),d.normalize(),c=(p=d).dot(c),p.dot(l)>=c){for(l=0;3>l;l++){for(c=[h[l],h[(l+1)%3]],p=!0,u=0;u<a.length;u++)if(a[u][0]===c[1]&&a[u][1]===c[0]){a[u]=a[a.length-1],a.pop(),p=!1;break}p&&a.push(c)}i[s]=i[i.length-1],i.pop()}else s++}for(u=0;u<a.length;u++)i.push([a[u][0],a[u][1],n])}for(n=0,o=Array(e.length),r=0;r<i.length;r++)for(a=i[r],s=0;3>s;s++)void 0===o[a[s]]&&(o[a[s]]=n++,this.vertices.push(e[a[s]])),a[s]=o[a[s]];for(r=0;r<i.length;r++)this.faces.push(new THREE.Face3(i[r][0],i[r][1],i[r][2]));for(r=0;r<this.faces.length;r++)a=this.faces[r],this.faceVertexUvs[0].push([t(this.vertices[a.a]),t(this.vertices[a.b]),t(this.vertices[a.c])]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,i,r){THREE.Object3D.call(this),void 0===i&&(i=20),void 0===r&&(r=16776960);var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0)),n.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(n,new THREE.LineBasicMaterial({color:r})),this.add(this.line),n=new THREE.CylinderGeometry(0,.05,.25,5,1),this.cone=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:r})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(i)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=THREE.ArrowHelper.__v1.copy(e).normalize();.999<t.y?this.rotation.set(0,0,0):-.999>t.y?this.rotation.set(Math.PI,0,0):(e=THREE.ArrowHelper.__v2.set(t.z,0,-t.x).normalize(),t=Math.acos(t.y),e=THREE.ArrowHelper.__q1.setFromAxisAngle(e,t),this.rotation.setEulerFromQuaternion(e,this.eulerOrder))},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.ArrowHelper.__v1=new THREE.Vector3,THREE.ArrowHelper.__v2=new THREE.Vector3,THREE.ArrowHelper.__q1=new THREE.Quaternion,THREE.CameraHelper=function(e){function t(e,t,r){i(e,r),i(t,r)}function i(e,t){r.geometry.vertices.push(new THREE.Vector3),r.geometry.colors.push(new THREE.Color(t)),void 0===r.pointMap[e]&&(r.pointMap[e]=[]),r.pointMap[e].push(r.geometry.vertices.length-1)}THREE.Line.call(this);var r=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={},t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,i,r,n){if(THREE.CameraHelper.__v.set(i,r,n),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c),void 0!==(e=t.pointMap[e]))for(i=0,r=e.length;i<r;i++)t.geometry.vertices[e[i]].copy(THREE.CameraHelper.__v)}var t=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var i=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.MeshBasicMaterial({color:i,fog:!1}),a=new THREE.LineBasicMaterial({color:i,fog:!1});this.lightSphere=new THREE.Mesh(r,o),this.lightRays=new THREE.Line(n,a,THREE.LinePieces),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse&&(r=new THREE.SphereGeometry(t,8,4),n=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(r,n),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,i=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),(r=new THREE.Geometry).vertices.push(this.position.clone()),r.vertices.push(this.targetSphere.position.clone()),r.computeLineDistances(),this.targetLine=new THREE.Line(r,i),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.HemisphereLightHelper=function(e,t,i){THREE.Object3D.call(this),this.light=e,this.position=e.position;var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var n=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.multiplyScalar(r);for(var r=this.groundColor.getHex(),o=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),a=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),s=new THREE.MeshBasicMaterial({color:n,fog:!1}),h=new THREE.MeshBasicMaterial({color:r,fog:!1}),l=0,c=o.faces.length;l<c;l++)o.faces[l].materialIndex=0;for(l=0,c=a.faces.length;l<c;l++)a.faces[l].materialIndex=1;THREE.GeometryUtils.merge(o,a),this.lightSphere=new THREE.Mesh(o,new THREE.MeshFaceMaterial([s,h])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+i),0),i,n),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(t+i),0),i,r),(t=new THREE.Object3D).rotation.x=.5*-Math.PI,t.add(this.lightSphere),t.add(this.lightArrow),t.add(this.lightArrowGround),this.add(t),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.groundColor.copy(this.light.groundColor),this.groundColor.multiplyScalar(e),this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position;var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var r=this.color.getHex(),i=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.IcosahedronGeometry(1,2),a=new THREE.MeshBasicMaterial({color:r,fog:!1}),s=new THREE.LineBasicMaterial({color:r,fog:!1}),r=new THREE.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(i,a),this.lightRays=new THREE.Line(n,s,THREE.LinePieces),this.lightDistance=new THREE.Mesh(o,r),0===(i=e.distance)?this.lightDistance.visible=!1:this.lightDistance.scale.set(i,i,i),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color),0===(e=this.light.distance)?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(e,e,e))},THREE.SpotLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var i=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),a;(a=new THREE.Matrix4).rotateX(-Math.PI/2),a.translate(new THREE.Vector3(0,-.5,0)),o.applyMatrix(a);var s=new THREE.MeshBasicMaterial({color:i,fog:!1}),a=new THREE.LineBasicMaterial({color:i,fog:!1}),h=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightSphere=new THREE.Mesh(r,s),this.lightCone=new THREE.Mesh(o,h),o=2*(r=e.distance?e.distance:1e4)*Math.tan(.5*e.angle),this.lightCone.scale.set(o,o,r),this.lightRays=new THREE.Line(n,a,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightSphere),
this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse&&(n=new THREE.SphereGeometry(t,8,4),a=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(n,a),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,i=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),(n=new THREE.Geometry).vertices.push(this.position.clone()),n.vertices.push(this.targetSphere.position.clone()),n.computeLineDistances(),this.targetLine=new THREE.Line(n,i),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=2*e*Math.tan(.5*this.light.angle);this.lightCone.scale.set(t,t,e),e=THREE.Math.clamp(this.light.intensity,0,1),this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,i,r,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,i,r,n,o){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,i,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;e<t;e++)(i=this.lensFlares[e]).x=this.positionScreen.x+r*i.distance,i.y=this.positionScreen.y+n*i.distance,i.wantedRotation=.25*i.x*Math.PI,i.rotation+=.25*(i.wantedRotation-i.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length;this.createAnimation("__default",0,i-1,i/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){t={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)(\d+)/,i,r={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s=n.morphTargets[o].name.match(t);if(s&&1<s.length){var h=s[1];r[h]||(r[h]={start:1/0,end:-1/0}),o<(s=r[h]).start&&(s.start=o),o>s.end&&(s.end=o),i||(i=h)}}for(h in r)s=r[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=i},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];i&&(i.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;t<i;t++){var r=this.animationsList[t];if(r.active){var n=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||0>r.time)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)):(r.time%=r.duration,0>r.time&&(r.time+=r.duration));var o=r.startFrame+THREE.Math.clamp(Math.floor(r.time/n),0,r.length-1),a=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o),n=r.time%n/n,r.directionBackwards&&(n=1-n),this.morphTargetInfluences[r.currentFrame]=n*a,this.morphTargetInfluences[r.lastFrame]=(1-n)*a}}},THREE.LensFlarePlugin=function(){function e(e,i){var r=t.createProgram(),n=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER),a="precision "+i+" float;\n";return t.shaderSource(n,a+e.fragmentShader),t.shaderSource(o,a+e.vertexShader),t.compileShader(n),t.compileShader(o),t.attachShader(r,n),t.attachShader(r,o),t.linkProgram(r),r}var t,i,r,n,o,a,s,h,l,c,p,u,f;this.init=function(d){t=d.context,i=d,r=d.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),d=0,n[d++]=-1,n[d++]=-1,n[d++]=0,n[d++]=0,n[d++]=1,n[d++]=-1,n[d++]=1,n[d++]=0,n[d++]=1,n[d++]=1,n[d++]=1,n[d++]=1,n[d++]=-1,n[d++]=1,n[d++]=0,n[d++]=1,d=0,o[d++]=0,o[d++]=1,o[d++]=2,o[d++]=0,o[d++]=2,o[d++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW),h=t.createTexture(),l=t.createTexture(),t.bindTexture(t.TEXTURE_2D,h),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,l),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(c=!1,p=e(THREE.ShaderFlares.lensFlare,r)):(c=!0,p=e(THREE.ShaderFlares.lensFlareVertexTexture,r)),f={},(u={}).vertex=t.getAttribLocation(p,"position"),u.uv=t.getAttribLocation(p,"uv"),f.renderType=t.getUniformLocation(p,"renderType"),f.map=t.getUniformLocation(p,"map"),f.occlusionMap=t.getUniformLocation(p,"occlusionMap"),f.opacity=t.getUniformLocation(p,"opacity"),f.color=t.getUniformLocation(p,"color"),f.scale=t.getUniformLocation(p,"scale"),f.rotation=t.getUniformLocation(p,"rotation"),f.screenPosition=t.getUniformLocation(p,"screenPosition")},this.render=function(e,r,n,o){var e,d=(e=e.__webglFlares).length;if(d){var E=new THREE.Vector3,m=o/n,g=.5*n,T=.5*o,v=16/o,y=new THREE.Vector2(v*m,v),R=new THREE.Vector3(1,1,0),x=new THREE.Vector2(1,1),H=f,v=u,w,_,b,S,M;for(t.useProgram(p),t.enableVertexAttribArray(u.vertex),t.enableVertexAttribArray(u.uv),t.uniform1i(H.occlusionMap,0),t.uniform1i(H.map,1),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.disable(t.CULL_FACE),t.depthMask(!1),w=0;w<d;w++)if(v=16/o,y.set(v*m,v),S=e[w],E.set(S.matrixWorld.elements[12],S.matrixWorld.elements[13],S.matrixWorld.elements[14]),E.applyMatrix4(r.matrixWorldInverse),E.applyProjection(r.projectionMatrix),R.copy(E),x.x=R.x*g+g,x.y=R.y*T+T,c||0<x.x&&x.x<n&&0<x.y&&x.y<o)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,0),t.uniform2f(H.scale,y.x,y.y),t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,l),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),S.positionScreen.copy(R),S.customUpdateCallback?S.customUpdateCallback(S):S.updateLensFlares(),t.uniform1i(H.renderType,2),t.enable(t.BLEND),_=0,b=S.lensFlares.length;_<b;_++).001<(M=S.lensFlares[_]).opacity&&.001<M.scale&&(R.x=M.x,R.y=M.y,R.z=M.z,v=M.size*M.scale/o,y.x=v*m,y.y=v,t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.uniform2f(H.scale,y.x,y.y),t.uniform1f(H.rotation,M.rotation),t.uniform1f(H.opacity,M.opacity),t.uniform3f(H.color,M.color.r,M.color.g,M.color.b),i.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst),i.setTexture(M.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3;this.init=function(a){e=a.context,t=a;var a=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,i){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,i)},this.update=function(p,u){var f,d,E,m,g,T,v,y,R,x=[];for(m=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),f=0,d=p.__lights.length;f<d;f++)if((E=p.__lights[f]).castShadow)if(E instanceof THREE.DirectionalLight&&E.shadowCascade)for(g=0;g<E.shadowCascadeCount;g++){var H;if(E.shadowCascadeArray[g])H=E.shadowCascadeArray[g];else{R=E,v=g,(H=new THREE.DirectionalLight).isVirtual=!0,H.onlyShadow=!0,H.castShadow=!0,H.shadowCameraNear=R.shadowCameraNear,H.shadowCameraFar=R.shadowCameraFar,H.shadowCameraLeft=R.shadowCameraLeft,H.shadowCameraRight=R.shadowCameraRight,H.shadowCameraBottom=R.shadowCameraBottom,H.shadowCameraTop=R.shadowCameraTop,H.shadowCameraVisible=R.shadowCameraVisible,H.shadowDarkness=R.shadowDarkness,H.shadowBias=R.shadowCascadeBias[v],H.shadowMapWidth=R.shadowCascadeWidth[v],H.shadowMapHeight=R.shadowCascadeHeight[v],H.pointsWorld=[],H.pointsFrustum=[],y=H.pointsWorld,T=H.pointsFrustum;for(var w=0;8>w;w++)y[w]=new THREE.Vector3,T[w]=new THREE.Vector3;y=R.shadowCascadeNearZ[v],R=R.shadowCascadeFarZ[v],T[0].set(-1,-1,y),T[1].set(1,-1,y),T[2].set(-1,1,y),T[3].set(1,1,y),T[4].set(-1,-1,R),T[5].set(1,-1,R),T[6].set(-1,1,R),T[7].set(1,1,R),H.originalCamera=u,(T=new THREE.Gyroscope).position=E.shadowCascadeOffset,T.add(H),T.add(H.target),u.add(T),E.shadowCascadeArray[g]=H,console.log("Created virtualLight",H)}y=g,(R=(v=E).shadowCascadeArray[y]).position.copy(v.position),R.target.position.copy(v.target.position),R.lookAt(R.target),R.shadowCameraVisible=v.shadowCameraVisible,R.shadowDarkness=v.shadowDarkness,R.shadowBias=v.shadowCascadeBias[y],T=v.shadowCascadeNearZ[y],v=v.shadowCascadeFarZ[y],(R=R.pointsFrustum)[0].z=T,R[1].z=T,R[2].z=T,R[3].z=T,R[4].z=v,R[5].z=v,R[6].z=v,R[7].z=v,x[m]=H,m++}else x[m]=E,m++;for(f=0,d=x.length;f<d;f++){if((E=x[f]).shadowMap||(g=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(g=THREE.NearestFilter),E.shadowMap=new THREE.WebGLRenderTarget(E.shadowMapWidth,E.shadowMapHeight,{minFilter:g,magFilter:g,format:THREE.RGBAFormat}),E.shadowMapSize=new THREE.Vector2(E.shadowMapWidth,E.shadowMapHeight),E.shadowMatrix=new THREE.Matrix4),!E.shadowCamera){if(E instanceof THREE.SpotLight)E.shadowCamera=new THREE.PerspectiveCamera(E.shadowCameraFov,E.shadowMapWidth/E.shadowMapHeight,E.shadowCameraNear,E.shadowCameraFar);else{if(!(E instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}E.shadowCamera=new THREE.OrthographicCamera(E.shadowCameraLeft,E.shadowCameraRight,E.shadowCameraTop,E.shadowCameraBottom,E.shadowCameraNear,E.shadowCameraFar)}p.add(E.shadowCamera),t.autoUpdateScene&&p.updateMatrixWorld()}if(E.shadowCameraVisible&&!E.cameraHelper&&(E.cameraHelper=new THREE.CameraHelper(E.shadowCamera),E.shadowCamera.add(E.cameraHelper)),E.isVirtual&&H.originalCamera==u){for(g=u,m=E.shadowCamera,T=E.pointsFrustum,R=E.pointsWorld,h.set(1/0,1/0,1/0),l.set(-1/0,-1/0,-1/0),v=0;8>v;v++)(y=R[v]).copy(T[v]),THREE.ShadowMapPlugin.__projector.unprojectVector(y,g),y.applyMatrix4(m.matrixWorldInverse),y.x<h.x&&(h.x=y.x),y.x>l.x&&(l.x=y.x),y.y<h.y&&(h.y=y.y),y.y>l.y&&(l.y=y.y),y.z<h.z&&(h.z=y.z),y.z>l.z&&(l.z=y.z);m.left=h.x,m.right=l.x,m.top=l.y,m.bottom=h.y,m.updateProjectionMatrix()}for(m=E.shadowMap,T=E.shadowMatrix,(g=E.shadowCamera).position.getPositionFromMatrix(E.matrixWorld),c.getPositionFromMatrix(E.target.matrixWorld),g.lookAt(c),g.updateMatrixWorld(),g.matrixWorldInverse.getInverse(g.matrixWorld),E.cameraHelper&&(E.cameraHelper.visible=E.shadowCameraVisible),E.shadowCameraVisible&&E.cameraHelper.update(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(g.projectionMatrix),T.multiply(g.matrixWorldInverse),s.multiplyMatrices(g.projectionMatrix,g.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(m),t.clear(),E=0,m=(R=p.__webglObjects).length;E<m;E++)T=(v=R[E]).object,v.render=!1,!T.visible||!T.castShadow||(T instanceof THREE.Mesh||T instanceof THREE.ParticleSystem)&&T.frustumCulled&&!a.intersectsObject(T)||(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),v.render=!0);for(E=0,m=R.length;E<m;E++)(v=R[E]).render&&(T=v.object,v=v.buffer,w=T.material instanceof THREE.MeshFaceMaterial?T.material.materials[0]:T.material,y=0<T.geometry.morphTargets.length&&w.morphTargets,w=T instanceof THREE.SkinnedMesh&&w.skinning,y=T.customDepthMaterial?T.customDepthMaterial:w?y?o:n:y?r:i,v instanceof THREE.BufferGeometry?t.renderBufferDirect(g,p.__lights,null,y,v,T):t.renderBuffer(g,p.__lights,null,y,v,T));for(E=0,m=(R=p.__webglObjectsImmediate).length;E<m;E++)(T=(v=R[E]).object).visible&&T.castShadow&&(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),t.renderImmediateObject(g,p.__lights,null,i,T))}f=t.getClearColor(),d=t.getClearAlpha(),e.clearColor(f.r,f.g,f.b,d),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,i,r,n,o,a,s,h,l,c;this.init=function(e){t=e.context,i=e,r=e.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),e=0,n[e++]=-1,n[e++]=-1,n[e++]=0,n[e++]=0,n[e++]=1,n[e++]=-1,n[e++]=1,n[e++]=0,n[e++]=1,n[e++]=1,n[e++]=1,n[e++]=1,n[e++]=-1,n[e++]=1,n[e++]=0,n[e++]=1,e=0,o[e++]=0,o[e++]=1,o[e++]=2,o[e++]=0,o[e++]=2,o[e++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW);var e=THREE.ShaderSprite.sprite,p=t.createProgram(),u=t.createShader(t.FRAGMENT_SHADER),f=t.createShader(t.VERTEX_SHADER),d="precision "+r+" float;\n";t.shaderSource(u,d+e.fragmentShader),t.shaderSource(f,d+e.vertexShader),t.compileShader(u),t.compileShader(f),t.attachShader(p,u),t.attachShader(p,f),t.linkProgram(p),h=p,c={},(l={}).position=t.getAttribLocation(h,"position"),l.uv=t.getAttribLocation(h,"uv"),c.uvOffset=t.getUniformLocation(h,"uvOffset"),c.uvScale=t.getUniformLocation(h,"uvScale"),c.rotation=t.getUniformLocation(h,"rotation"),c.scale=t.getUniformLocation(h,"scale"),c.alignment=t.getUniformLocation(h,"alignment"),c.color=t.getUniformLocation(h,"color"),c.map=t.getUniformLocation(h,"map"),c.opacity=t.getUniformLocation(h,"opacity"),c.useScreenCoordinates=t.getUniformLocation(h,"useScreenCoordinates"),c.sizeAttenuation=t.getUniformLocation(h,"sizeAttenuation"),c.screenPosition=t.getUniformLocation(h,"screenPosition"),c.modelViewMatrix=t.getUniformLocation(h,"modelViewMatrix"),c.projectionMatrix=t.getUniformLocation(h,"projectionMatrix"),c.fogType=t.getUniformLocation(h,"fogType"),c.fogDensity=t.getUniformLocation(h,"fogDensity"),c.fogNear=t.getUniformLocation(h,"fogNear"),c.fogFar=t.getUniformLocation(h,"fogFar"),c.fogColor=t.getUniformLocation(h,"fogColor"),c.alphaTest=t.getUniformLocation(h,"alphaTest")},this.render=function(r,n,o,p){var u=r.__webglSprites,f=u.length;if(f){var d=l,E=c,m=p/o,o=.5*o,g=.5*p;t.useProgram(h),t.enableVertexAttribArray(d.position),t.enableVertexAttribArray(d.uv),t.disable(t.CULL_FACE),t.enable(t.BLEND),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(d.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(d.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.uniformMatrix4fv(E.projectionMatrix,!1,n.projectionMatrix.elements),t.activeTexture(t.TEXTURE0),t.uniform1i(E.map,0);var T=d=0,v;(v=r.fog)?(t.uniform3f(E.fogColor,v.color.r,v.color.g,v.color.b),v instanceof THREE.Fog?(t.uniform1f(E.fogNear,v.near),t.uniform1f(E.fogFar,v.far),t.uniform1i(E.fogType,1),T=d=1):v instanceof THREE.FogExp2&&(t.uniform1f(E.fogDensity,v.density),t.uniform1i(E.fogType,2),T=d=2)):(t.uniform1i(E.fogType,0),T=d=0);for(var y,R,x=[],v=0;v<f;v++)R=(y=u[v]).material,y.visible&&0!==R.opacity&&(R.useScreenCoordinates?y.z=-y.position.z:(y._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,y.matrixWorld),y.z=-y._modelViewMatrix.elements[14]));for(u.sort(e),v=0;v<f;v++)R=(y=u[v]).material,y.visible&&0!==R.opacity&&R.map&&R.map.image&&R.map.image.width&&(t.uniform1f(E.alphaTest,R.alphaTest),!0===R.useScreenCoordinates?(t.uniform1i(E.useScreenCoordinates,1),t.uniform3f(E.screenPosition,(y.position.x*i.devicePixelRatio-o)/o,(g-y.position.y*i.devicePixelRatio)/g,Math.max(0,Math.min(1,y.position.z))),x[0]=i.devicePixelRatio,x[1]=i.devicePixelRatio):(t.uniform1i(E.useScreenCoordinates,0),t.uniform1i(E.sizeAttenuation,R.sizeAttenuation?1:0),t.uniformMatrix4fv(E.modelViewMatrix,!1,y._modelViewMatrix.elements),x[0]=1,x[1]=1),d!==(n=r.fog&&R.fog?T:0)&&(t.uniform1i(E.fogType,n),d=n),n=1/(R.scaleByViewport?p:1),x[0]*=n*m*y.scale.x,x[1]*=n*y.scale.y,t.uniform2f(E.uvScale,R.uvScale.x,R.uvScale.y),t.uniform2f(E.uvOffset,R.uvOffset.x,R.uvOffset.y),t.uniform2f(E.alignment,R.alignment.x,R.alignment.y),t.uniform1f(E.opacity,R.opacity),t.uniform3f(E.color,R.color.r,R.color.g,R.color.b),t.uniform1f(E.rotation,y.rotation),t.uniform2fv(E.scale,x),i.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),i.setDepthTest(R.depthTest),i.setDepthWrite(R.depthWrite),i.setTexture(R.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4;this.init=function(a){e=a.context,t=a;var a=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,l){var c,p,u,f,d,E,m;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),t.autoUpdateScene&&h.updateMatrixWorld(),l.matrixWorldInverse.getInverse(l.matrixWorld),s.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),c=0,p=(E=h.__webglObjects).length;c<p;c++)d=(u=E[c]).object,u.render=!1,!d.visible||(d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem)&&d.frustumCulled&&!a.intersectsObject(d)||(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),u.render=!0);for(c=0,p=E.length;c<p;c++)!(u=E[c]).render||(d=u.object,u=u.buffer,d instanceof THREE.ParticleSystem&&!d.customDepthMaterial)||((m=d.material instanceof THREE.MeshFaceMaterial?d.material.materials[0]:d.material)&&t.setMaterialFaces(d.material),f=0<d.geometry.morphTargets.length&&m.morphTargets,m=d instanceof THREE.SkinnedMesh&&m.skinning,f=d.customDepthMaterial?d.customDepthMaterial:m?f?o:n:f?r:i,u instanceof THREE.BufferGeometry?t.renderBufferDirect(l,h.__lights,null,f,u,d):t.renderBuffer(l,h.__lights,null,f,u,d));for(c=0,p=(E=h.__webglObjectsImmediate).length;c<p;c++)(d=(u=E[c]).object).visible&&(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),t.renderImmediateObject(l,h.__lights,null,i,d));c=t.getClearColor(),p=t.getClearAlpha(),e.clearColor(c.r,c.g,c.b,p),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};var SEPARATION=100,AMOUNTX=100,AMOUNTY=70,container,camera,scene,renderer,particles,particle,count=0,mouseX=85,mouseY=-342,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2;init(),animate();